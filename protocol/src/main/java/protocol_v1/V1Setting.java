// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v1.Setting.proto

package protocol_v1;

public final class V1Setting {
  private V1Setting() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SettingReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol_v1.SettingReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
     */
    boolean hasIden();
    /**
     * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
     */
    protocol_v1.V1IdentityMsg.IdentityMsg getIden();
    /**
     * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
     */
    protocol_v1.V1IdentityMsg.IdentityMsgOrBuilder getIdenOrBuilder();
  }
  /**
   * Protobuf type {@code protocol_v1.SettingReq}
   *
   * <pre>
   * 请求读取配置信息
   * </pre>
   */
  public  static final class SettingReq extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protocol_v1.SettingReq)
      SettingReqOrBuilder {
    // Use SettingReq.newBuilder() to construct.
    private SettingReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private SettingReq() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SettingReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protocol_v1.V1IdentityMsg.IdentityMsg.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = iden_.toBuilder();
              }
              iden_ = input.readMessage(protocol_v1.V1IdentityMsg.IdentityMsg.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(iden_);
                iden_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol_v1.V1Setting.internal_static_protocol_v1_SettingReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol_v1.V1Setting.internal_static_protocol_v1_SettingReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol_v1.V1Setting.SettingReq.class, protocol_v1.V1Setting.SettingReq.Builder.class);
    }

    private int bitField0_;
    public static final int IDEN_FIELD_NUMBER = 1;
    private protocol_v1.V1IdentityMsg.IdentityMsg iden_;
    /**
     * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
     */
    public boolean hasIden() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
     */
    public protocol_v1.V1IdentityMsg.IdentityMsg getIden() {
      return iden_ == null ? protocol_v1.V1IdentityMsg.IdentityMsg.getDefaultInstance() : iden_;
    }
    /**
     * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
     */
    public protocol_v1.V1IdentityMsg.IdentityMsgOrBuilder getIdenOrBuilder() {
      return iden_ == null ? protocol_v1.V1IdentityMsg.IdentityMsg.getDefaultInstance() : iden_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasIden()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getIden().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getIden());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getIden());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static protocol_v1.V1Setting.SettingReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Setting.SettingReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Setting.SettingReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Setting.SettingReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Setting.SettingReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Setting.SettingReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Setting.SettingReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protocol_v1.V1Setting.SettingReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Setting.SettingReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Setting.SettingReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol_v1.V1Setting.SettingReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol_v1.SettingReq}
     *
     * <pre>
     * 请求读取配置信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol_v1.SettingReq)
        protocol_v1.V1Setting.SettingReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_SettingReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_SettingReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol_v1.V1Setting.SettingReq.class, protocol_v1.V1Setting.SettingReq.Builder.class);
      }

      // Construct using protocol_v1.V1Setting.SettingReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getIdenFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (idenBuilder_ == null) {
          iden_ = null;
        } else {
          idenBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_SettingReq_descriptor;
      }

      public protocol_v1.V1Setting.SettingReq getDefaultInstanceForType() {
        return protocol_v1.V1Setting.SettingReq.getDefaultInstance();
      }

      public protocol_v1.V1Setting.SettingReq build() {
        protocol_v1.V1Setting.SettingReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol_v1.V1Setting.SettingReq buildPartial() {
        protocol_v1.V1Setting.SettingReq result = new protocol_v1.V1Setting.SettingReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (idenBuilder_ == null) {
          result.iden_ = iden_;
        } else {
          result.iden_ = idenBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol_v1.V1Setting.SettingReq) {
          return mergeFrom((protocol_v1.V1Setting.SettingReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol_v1.V1Setting.SettingReq other) {
        if (other == protocol_v1.V1Setting.SettingReq.getDefaultInstance()) return this;
        if (other.hasIden()) {
          mergeIden(other.getIden());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasIden()) {
          return false;
        }
        if (!getIden().isInitialized()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol_v1.V1Setting.SettingReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol_v1.V1Setting.SettingReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private protocol_v1.V1IdentityMsg.IdentityMsg iden_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1IdentityMsg.IdentityMsg, protocol_v1.V1IdentityMsg.IdentityMsg.Builder, protocol_v1.V1IdentityMsg.IdentityMsgOrBuilder> idenBuilder_;
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public boolean hasIden() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public protocol_v1.V1IdentityMsg.IdentityMsg getIden() {
        if (idenBuilder_ == null) {
          return iden_ == null ? protocol_v1.V1IdentityMsg.IdentityMsg.getDefaultInstance() : iden_;
        } else {
          return idenBuilder_.getMessage();
        }
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public Builder setIden(protocol_v1.V1IdentityMsg.IdentityMsg value) {
        if (idenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          iden_ = value;
          onChanged();
        } else {
          idenBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public Builder setIden(
          protocol_v1.V1IdentityMsg.IdentityMsg.Builder builderForValue) {
        if (idenBuilder_ == null) {
          iden_ = builderForValue.build();
          onChanged();
        } else {
          idenBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public Builder mergeIden(protocol_v1.V1IdentityMsg.IdentityMsg value) {
        if (idenBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              iden_ != null &&
              iden_ != protocol_v1.V1IdentityMsg.IdentityMsg.getDefaultInstance()) {
            iden_ =
              protocol_v1.V1IdentityMsg.IdentityMsg.newBuilder(iden_).mergeFrom(value).buildPartial();
          } else {
            iden_ = value;
          }
          onChanged();
        } else {
          idenBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public Builder clearIden() {
        if (idenBuilder_ == null) {
          iden_ = null;
          onChanged();
        } else {
          idenBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public protocol_v1.V1IdentityMsg.IdentityMsg.Builder getIdenBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getIdenFieldBuilder().getBuilder();
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public protocol_v1.V1IdentityMsg.IdentityMsgOrBuilder getIdenOrBuilder() {
        if (idenBuilder_ != null) {
          return idenBuilder_.getMessageOrBuilder();
        } else {
          return iden_ == null ?
              protocol_v1.V1IdentityMsg.IdentityMsg.getDefaultInstance() : iden_;
        }
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1IdentityMsg.IdentityMsg, protocol_v1.V1IdentityMsg.IdentityMsg.Builder, protocol_v1.V1IdentityMsg.IdentityMsgOrBuilder> 
          getIdenFieldBuilder() {
        if (idenBuilder_ == null) {
          idenBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1IdentityMsg.IdentityMsg, protocol_v1.V1IdentityMsg.IdentityMsg.Builder, protocol_v1.V1IdentityMsg.IdentityMsgOrBuilder>(
                  getIden(),
                  getParentForChildren(),
                  isClean());
          iden_ = null;
        }
        return idenBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:protocol_v1.SettingReq)
    }

    // @@protoc_insertion_point(class_scope:protocol_v1.SettingReq)
    private static final protocol_v1.V1Setting.SettingReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol_v1.V1Setting.SettingReq();
    }

    public static protocol_v1.V1Setting.SettingReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SettingReq>
        PARSER = new com.google.protobuf.AbstractParser<SettingReq>() {
      public SettingReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new SettingReq(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<SettingReq> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SettingReq> getParserForType() {
      return PARSER;
    }

    public protocol_v1.V1Setting.SettingReq getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TimeRangeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol_v1.TimeRange)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 Begin = 1;</code>
     *
     * <pre>
     * 开始时间
     * </pre>
     */
    boolean hasBegin();
    /**
     * <code>required uint32 Begin = 1;</code>
     *
     * <pre>
     * 开始时间
     * </pre>
     */
    int getBegin();

    /**
     * <code>required uint32 End = 2;</code>
     *
     * <pre>
     * 结束时间
     * </pre>
     */
    boolean hasEnd();
    /**
     * <code>required uint32 End = 2;</code>
     *
     * <pre>
     * 结束时间
     * </pre>
     */
    int getEnd();
  }
  /**
   * Protobuf type {@code protocol_v1.TimeRange}
   */
  public  static final class TimeRange extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protocol_v1.TimeRange)
      TimeRangeOrBuilder {
    // Use TimeRange.newBuilder() to construct.
    private TimeRange(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private TimeRange() {
      begin_ = 0;
      end_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TimeRange(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              begin_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              end_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol_v1.V1Setting.internal_static_protocol_v1_TimeRange_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol_v1.V1Setting.internal_static_protocol_v1_TimeRange_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol_v1.V1Setting.TimeRange.class, protocol_v1.V1Setting.TimeRange.Builder.class);
    }

    private int bitField0_;
    public static final int BEGIN_FIELD_NUMBER = 1;
    private int begin_;
    /**
     * <code>required uint32 Begin = 1;</code>
     *
     * <pre>
     * 开始时间
     * </pre>
     */
    public boolean hasBegin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 Begin = 1;</code>
     *
     * <pre>
     * 开始时间
     * </pre>
     */
    public int getBegin() {
      return begin_;
    }

    public static final int END_FIELD_NUMBER = 2;
    private int end_;
    /**
     * <code>required uint32 End = 2;</code>
     *
     * <pre>
     * 结束时间
     * </pre>
     */
    public boolean hasEnd() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 End = 2;</code>
     *
     * <pre>
     * 结束时间
     * </pre>
     */
    public int getEnd() {
      return end_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasBegin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEnd()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, begin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, end_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, begin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, end_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static protocol_v1.V1Setting.TimeRange parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Setting.TimeRange parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Setting.TimeRange parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Setting.TimeRange parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Setting.TimeRange parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Setting.TimeRange parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Setting.TimeRange parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protocol_v1.V1Setting.TimeRange parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Setting.TimeRange parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Setting.TimeRange parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol_v1.V1Setting.TimeRange prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol_v1.TimeRange}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol_v1.TimeRange)
        protocol_v1.V1Setting.TimeRangeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_TimeRange_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_TimeRange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol_v1.V1Setting.TimeRange.class, protocol_v1.V1Setting.TimeRange.Builder.class);
      }

      // Construct using protocol_v1.V1Setting.TimeRange.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        begin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        end_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_TimeRange_descriptor;
      }

      public protocol_v1.V1Setting.TimeRange getDefaultInstanceForType() {
        return protocol_v1.V1Setting.TimeRange.getDefaultInstance();
      }

      public protocol_v1.V1Setting.TimeRange build() {
        protocol_v1.V1Setting.TimeRange result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol_v1.V1Setting.TimeRange buildPartial() {
        protocol_v1.V1Setting.TimeRange result = new protocol_v1.V1Setting.TimeRange(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.begin_ = begin_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.end_ = end_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol_v1.V1Setting.TimeRange) {
          return mergeFrom((protocol_v1.V1Setting.TimeRange)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol_v1.V1Setting.TimeRange other) {
        if (other == protocol_v1.V1Setting.TimeRange.getDefaultInstance()) return this;
        if (other.hasBegin()) {
          setBegin(other.getBegin());
        }
        if (other.hasEnd()) {
          setEnd(other.getEnd());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasBegin()) {
          return false;
        }
        if (!hasEnd()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol_v1.V1Setting.TimeRange parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol_v1.V1Setting.TimeRange) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int begin_ ;
      /**
       * <code>required uint32 Begin = 1;</code>
       *
       * <pre>
       * 开始时间
       * </pre>
       */
      public boolean hasBegin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 Begin = 1;</code>
       *
       * <pre>
       * 开始时间
       * </pre>
       */
      public int getBegin() {
        return begin_;
      }
      /**
       * <code>required uint32 Begin = 1;</code>
       *
       * <pre>
       * 开始时间
       * </pre>
       */
      public Builder setBegin(int value) {
        bitField0_ |= 0x00000001;
        begin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 Begin = 1;</code>
       *
       * <pre>
       * 开始时间
       * </pre>
       */
      public Builder clearBegin() {
        bitField0_ = (bitField0_ & ~0x00000001);
        begin_ = 0;
        onChanged();
        return this;
      }

      private int end_ ;
      /**
       * <code>required uint32 End = 2;</code>
       *
       * <pre>
       * 结束时间
       * </pre>
       */
      public boolean hasEnd() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 End = 2;</code>
       *
       * <pre>
       * 结束时间
       * </pre>
       */
      public int getEnd() {
        return end_;
      }
      /**
       * <code>required uint32 End = 2;</code>
       *
       * <pre>
       * 结束时间
       * </pre>
       */
      public Builder setEnd(int value) {
        bitField0_ |= 0x00000002;
        end_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 End = 2;</code>
       *
       * <pre>
       * 结束时间
       * </pre>
       */
      public Builder clearEnd() {
        bitField0_ = (bitField0_ & ~0x00000002);
        end_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol_v1.TimeRange)
    }

    // @@protoc_insertion_point(class_scope:protocol_v1.TimeRange)
    private static final protocol_v1.V1Setting.TimeRange DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol_v1.V1Setting.TimeRange();
    }

    public static protocol_v1.V1Setting.TimeRange getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TimeRange>
        PARSER = new com.google.protobuf.AbstractParser<TimeRange>() {
      public TimeRange parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new TimeRange(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<TimeRange> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TimeRange> getParserForType() {
      return PARSER;
    }

    public protocol_v1.V1Setting.TimeRange getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GprsPowerSavingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol_v1.GprsPowerSaving)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 Mode = 1 [default = 0];</code>
     *
     * <pre>
     * 上传节电开关: 0 - 关闭,  1 - 启用
     * </pre>
     */
    boolean hasMode();
    /**
     * <code>optional int32 Mode = 1 [default = 0];</code>
     *
     * <pre>
     * 上传节电开关: 0 - 关闭,  1 - 启用
     * </pre>
     */
    int getMode();

    /**
     * <code>optional int32 Distance = 2 [default = 0];</code>
     *
     * <pre>
     * 上传节电距离门限,  单位：米
     * </pre>
     */
    boolean hasDistance();
    /**
     * <code>optional int32 Distance = 2 [default = 0];</code>
     *
     * <pre>
     * 上传节电距离门限,  单位：米
     * </pre>
     */
    int getDistance();

    /**
     * <code>optional int32 Time = 3 [default = 0];</code>
     *
     * <pre>
     * 上传节电时间门限,  单位：秒
     * </pre>
     */
    boolean hasTime();
    /**
     * <code>optional int32 Time = 3 [default = 0];</code>
     *
     * <pre>
     * 上传节电时间门限,  单位：秒
     * </pre>
     */
    int getTime();
  }
  /**
   * Protobuf type {@code protocol_v1.GprsPowerSaving}
   */
  public  static final class GprsPowerSaving extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protocol_v1.GprsPowerSaving)
      GprsPowerSavingOrBuilder {
    // Use GprsPowerSaving.newBuilder() to construct.
    private GprsPowerSaving(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private GprsPowerSaving() {
      mode_ = 0;
      distance_ = 0;
      time_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GprsPowerSaving(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              mode_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              distance_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              time_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol_v1.V1Setting.internal_static_protocol_v1_GprsPowerSaving_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol_v1.V1Setting.internal_static_protocol_v1_GprsPowerSaving_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol_v1.V1Setting.GprsPowerSaving.class, protocol_v1.V1Setting.GprsPowerSaving.Builder.class);
    }

    private int bitField0_;
    public static final int MODE_FIELD_NUMBER = 1;
    private int mode_;
    /**
     * <code>optional int32 Mode = 1 [default = 0];</code>
     *
     * <pre>
     * 上传节电开关: 0 - 关闭,  1 - 启用
     * </pre>
     */
    public boolean hasMode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 Mode = 1 [default = 0];</code>
     *
     * <pre>
     * 上传节电开关: 0 - 关闭,  1 - 启用
     * </pre>
     */
    public int getMode() {
      return mode_;
    }

    public static final int DISTANCE_FIELD_NUMBER = 2;
    private int distance_;
    /**
     * <code>optional int32 Distance = 2 [default = 0];</code>
     *
     * <pre>
     * 上传节电距离门限,  单位：米
     * </pre>
     */
    public boolean hasDistance() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 Distance = 2 [default = 0];</code>
     *
     * <pre>
     * 上传节电距离门限,  单位：米
     * </pre>
     */
    public int getDistance() {
      return distance_;
    }

    public static final int TIME_FIELD_NUMBER = 3;
    private int time_;
    /**
     * <code>optional int32 Time = 3 [default = 0];</code>
     *
     * <pre>
     * 上传节电时间门限,  单位：秒
     * </pre>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 Time = 3 [default = 0];</code>
     *
     * <pre>
     * 上传节电时间门限,  单位：秒
     * </pre>
     */
    public int getTime() {
      return time_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, mode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, distance_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, time_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, mode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, distance_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, time_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static protocol_v1.V1Setting.GprsPowerSaving parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Setting.GprsPowerSaving parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Setting.GprsPowerSaving parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Setting.GprsPowerSaving parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Setting.GprsPowerSaving parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Setting.GprsPowerSaving parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Setting.GprsPowerSaving parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protocol_v1.V1Setting.GprsPowerSaving parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Setting.GprsPowerSaving parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Setting.GprsPowerSaving parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol_v1.V1Setting.GprsPowerSaving prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol_v1.GprsPowerSaving}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol_v1.GprsPowerSaving)
        protocol_v1.V1Setting.GprsPowerSavingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_GprsPowerSaving_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_GprsPowerSaving_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol_v1.V1Setting.GprsPowerSaving.class, protocol_v1.V1Setting.GprsPowerSaving.Builder.class);
      }

      // Construct using protocol_v1.V1Setting.GprsPowerSaving.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        mode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        distance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        time_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_GprsPowerSaving_descriptor;
      }

      public protocol_v1.V1Setting.GprsPowerSaving getDefaultInstanceForType() {
        return protocol_v1.V1Setting.GprsPowerSaving.getDefaultInstance();
      }

      public protocol_v1.V1Setting.GprsPowerSaving build() {
        protocol_v1.V1Setting.GprsPowerSaving result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol_v1.V1Setting.GprsPowerSaving buildPartial() {
        protocol_v1.V1Setting.GprsPowerSaving result = new protocol_v1.V1Setting.GprsPowerSaving(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mode_ = mode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.distance_ = distance_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.time_ = time_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol_v1.V1Setting.GprsPowerSaving) {
          return mergeFrom((protocol_v1.V1Setting.GprsPowerSaving)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol_v1.V1Setting.GprsPowerSaving other) {
        if (other == protocol_v1.V1Setting.GprsPowerSaving.getDefaultInstance()) return this;
        if (other.hasMode()) {
          setMode(other.getMode());
        }
        if (other.hasDistance()) {
          setDistance(other.getDistance());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol_v1.V1Setting.GprsPowerSaving parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol_v1.V1Setting.GprsPowerSaving) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int mode_ ;
      /**
       * <code>optional int32 Mode = 1 [default = 0];</code>
       *
       * <pre>
       * 上传节电开关: 0 - 关闭,  1 - 启用
       * </pre>
       */
      public boolean hasMode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 Mode = 1 [default = 0];</code>
       *
       * <pre>
       * 上传节电开关: 0 - 关闭,  1 - 启用
       * </pre>
       */
      public int getMode() {
        return mode_;
      }
      /**
       * <code>optional int32 Mode = 1 [default = 0];</code>
       *
       * <pre>
       * 上传节电开关: 0 - 关闭,  1 - 启用
       * </pre>
       */
      public Builder setMode(int value) {
        bitField0_ |= 0x00000001;
        mode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Mode = 1 [default = 0];</code>
       *
       * <pre>
       * 上传节电开关: 0 - 关闭,  1 - 启用
       * </pre>
       */
      public Builder clearMode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mode_ = 0;
        onChanged();
        return this;
      }

      private int distance_ ;
      /**
       * <code>optional int32 Distance = 2 [default = 0];</code>
       *
       * <pre>
       * 上传节电距离门限,  单位：米
       * </pre>
       */
      public boolean hasDistance() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 Distance = 2 [default = 0];</code>
       *
       * <pre>
       * 上传节电距离门限,  单位：米
       * </pre>
       */
      public int getDistance() {
        return distance_;
      }
      /**
       * <code>optional int32 Distance = 2 [default = 0];</code>
       *
       * <pre>
       * 上传节电距离门限,  单位：米
       * </pre>
       */
      public Builder setDistance(int value) {
        bitField0_ |= 0x00000002;
        distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Distance = 2 [default = 0];</code>
       *
       * <pre>
       * 上传节电距离门限,  单位：米
       * </pre>
       */
      public Builder clearDistance() {
        bitField0_ = (bitField0_ & ~0x00000002);
        distance_ = 0;
        onChanged();
        return this;
      }

      private int time_ ;
      /**
       * <code>optional int32 Time = 3 [default = 0];</code>
       *
       * <pre>
       * 上传节电时间门限,  单位：秒
       * </pre>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 Time = 3 [default = 0];</code>
       *
       * <pre>
       * 上传节电时间门限,  单位：秒
       * </pre>
       */
      public int getTime() {
        return time_;
      }
      /**
       * <code>optional int32 Time = 3 [default = 0];</code>
       *
       * <pre>
       * 上传节电时间门限,  单位：秒
       * </pre>
       */
      public Builder setTime(int value) {
        bitField0_ |= 0x00000004;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Time = 3 [default = 0];</code>
       *
       * <pre>
       * 上传节电时间门限,  单位：秒
       * </pre>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        time_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol_v1.GprsPowerSaving)
    }

    // @@protoc_insertion_point(class_scope:protocol_v1.GprsPowerSaving)
    private static final protocol_v1.V1Setting.GprsPowerSaving DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol_v1.V1Setting.GprsPowerSaving();
    }

    public static protocol_v1.V1Setting.GprsPowerSaving getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<GprsPowerSaving>
        PARSER = new com.google.protobuf.AbstractParser<GprsPowerSaving>() {
      public GprsPowerSaving parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new GprsPowerSaving(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<GprsPowerSaving> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GprsPowerSaving> getParserForType() {
      return PARSER;
    }

    public protocol_v1.V1Setting.GprsPowerSaving getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VoltageBoostLevelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol_v1.VoltageBoostLevel)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 Voltage = 1 [default = 0];</code>
     *
     * <pre>
     * 电压门限: 单位(V), 精度到0.001V
     * </pre>
     */
    boolean hasVoltage();
    /**
     * <code>optional int32 Voltage = 1 [default = 0];</code>
     *
     * <pre>
     * 电压门限: 单位(V), 精度到0.001V
     * </pre>
     */
    int getVoltage();

    /**
     * <code>optional int32 SampleInterval = 2 [default = 0];</code>
     *
     * <pre>
     * 采样频率: 单位(s)
     * </pre>
     */
    boolean hasSampleInterval();
    /**
     * <code>optional int32 SampleInterval = 2 [default = 0];</code>
     *
     * <pre>
     * 采样频率: 单位(s)
     * </pre>
     */
    int getSampleInterval();

    /**
     * <code>optional int32 UploadInterval = 3 [default = 0];</code>
     *
     * <pre>
     * 通信频率: 单位(s)
     * </pre>
     */
    boolean hasUploadInterval();
    /**
     * <code>optional int32 UploadInterval = 3 [default = 0];</code>
     *
     * <pre>
     * 通信频率: 单位(s)
     * </pre>
     */
    int getUploadInterval();
  }
  /**
   * Protobuf type {@code protocol_v1.VoltageBoostLevel}
   */
  public  static final class VoltageBoostLevel extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protocol_v1.VoltageBoostLevel)
      VoltageBoostLevelOrBuilder {
    // Use VoltageBoostLevel.newBuilder() to construct.
    private VoltageBoostLevel(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private VoltageBoostLevel() {
      voltage_ = 0;
      sampleInterval_ = 0;
      uploadInterval_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private VoltageBoostLevel(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              voltage_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              sampleInterval_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              uploadInterval_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol_v1.V1Setting.internal_static_protocol_v1_VoltageBoostLevel_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol_v1.V1Setting.internal_static_protocol_v1_VoltageBoostLevel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol_v1.V1Setting.VoltageBoostLevel.class, protocol_v1.V1Setting.VoltageBoostLevel.Builder.class);
    }

    private int bitField0_;
    public static final int VOLTAGE_FIELD_NUMBER = 1;
    private int voltage_;
    /**
     * <code>optional int32 Voltage = 1 [default = 0];</code>
     *
     * <pre>
     * 电压门限: 单位(V), 精度到0.001V
     * </pre>
     */
    public boolean hasVoltage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 Voltage = 1 [default = 0];</code>
     *
     * <pre>
     * 电压门限: 单位(V), 精度到0.001V
     * </pre>
     */
    public int getVoltage() {
      return voltage_;
    }

    public static final int SAMPLEINTERVAL_FIELD_NUMBER = 2;
    private int sampleInterval_;
    /**
     * <code>optional int32 SampleInterval = 2 [default = 0];</code>
     *
     * <pre>
     * 采样频率: 单位(s)
     * </pre>
     */
    public boolean hasSampleInterval() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 SampleInterval = 2 [default = 0];</code>
     *
     * <pre>
     * 采样频率: 单位(s)
     * </pre>
     */
    public int getSampleInterval() {
      return sampleInterval_;
    }

    public static final int UPLOADINTERVAL_FIELD_NUMBER = 3;
    private int uploadInterval_;
    /**
     * <code>optional int32 UploadInterval = 3 [default = 0];</code>
     *
     * <pre>
     * 通信频率: 单位(s)
     * </pre>
     */
    public boolean hasUploadInterval() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 UploadInterval = 3 [default = 0];</code>
     *
     * <pre>
     * 通信频率: 单位(s)
     * </pre>
     */
    public int getUploadInterval() {
      return uploadInterval_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, voltage_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, sampleInterval_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, uploadInterval_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, voltage_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, sampleInterval_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, uploadInterval_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static protocol_v1.V1Setting.VoltageBoostLevel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Setting.VoltageBoostLevel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Setting.VoltageBoostLevel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Setting.VoltageBoostLevel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Setting.VoltageBoostLevel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Setting.VoltageBoostLevel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Setting.VoltageBoostLevel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protocol_v1.V1Setting.VoltageBoostLevel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Setting.VoltageBoostLevel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Setting.VoltageBoostLevel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol_v1.V1Setting.VoltageBoostLevel prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol_v1.VoltageBoostLevel}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol_v1.VoltageBoostLevel)
        protocol_v1.V1Setting.VoltageBoostLevelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_VoltageBoostLevel_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_VoltageBoostLevel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol_v1.V1Setting.VoltageBoostLevel.class, protocol_v1.V1Setting.VoltageBoostLevel.Builder.class);
      }

      // Construct using protocol_v1.V1Setting.VoltageBoostLevel.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        voltage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        sampleInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        uploadInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_VoltageBoostLevel_descriptor;
      }

      public protocol_v1.V1Setting.VoltageBoostLevel getDefaultInstanceForType() {
        return protocol_v1.V1Setting.VoltageBoostLevel.getDefaultInstance();
      }

      public protocol_v1.V1Setting.VoltageBoostLevel build() {
        protocol_v1.V1Setting.VoltageBoostLevel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol_v1.V1Setting.VoltageBoostLevel buildPartial() {
        protocol_v1.V1Setting.VoltageBoostLevel result = new protocol_v1.V1Setting.VoltageBoostLevel(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.voltage_ = voltage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sampleInterval_ = sampleInterval_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.uploadInterval_ = uploadInterval_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol_v1.V1Setting.VoltageBoostLevel) {
          return mergeFrom((protocol_v1.V1Setting.VoltageBoostLevel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol_v1.V1Setting.VoltageBoostLevel other) {
        if (other == protocol_v1.V1Setting.VoltageBoostLevel.getDefaultInstance()) return this;
        if (other.hasVoltage()) {
          setVoltage(other.getVoltage());
        }
        if (other.hasSampleInterval()) {
          setSampleInterval(other.getSampleInterval());
        }
        if (other.hasUploadInterval()) {
          setUploadInterval(other.getUploadInterval());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol_v1.V1Setting.VoltageBoostLevel parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol_v1.V1Setting.VoltageBoostLevel) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int voltage_ ;
      /**
       * <code>optional int32 Voltage = 1 [default = 0];</code>
       *
       * <pre>
       * 电压门限: 单位(V), 精度到0.001V
       * </pre>
       */
      public boolean hasVoltage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 Voltage = 1 [default = 0];</code>
       *
       * <pre>
       * 电压门限: 单位(V), 精度到0.001V
       * </pre>
       */
      public int getVoltage() {
        return voltage_;
      }
      /**
       * <code>optional int32 Voltage = 1 [default = 0];</code>
       *
       * <pre>
       * 电压门限: 单位(V), 精度到0.001V
       * </pre>
       */
      public Builder setVoltage(int value) {
        bitField0_ |= 0x00000001;
        voltage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Voltage = 1 [default = 0];</code>
       *
       * <pre>
       * 电压门限: 单位(V), 精度到0.001V
       * </pre>
       */
      public Builder clearVoltage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        voltage_ = 0;
        onChanged();
        return this;
      }

      private int sampleInterval_ ;
      /**
       * <code>optional int32 SampleInterval = 2 [default = 0];</code>
       *
       * <pre>
       * 采样频率: 单位(s)
       * </pre>
       */
      public boolean hasSampleInterval() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 SampleInterval = 2 [default = 0];</code>
       *
       * <pre>
       * 采样频率: 单位(s)
       * </pre>
       */
      public int getSampleInterval() {
        return sampleInterval_;
      }
      /**
       * <code>optional int32 SampleInterval = 2 [default = 0];</code>
       *
       * <pre>
       * 采样频率: 单位(s)
       * </pre>
       */
      public Builder setSampleInterval(int value) {
        bitField0_ |= 0x00000002;
        sampleInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 SampleInterval = 2 [default = 0];</code>
       *
       * <pre>
       * 采样频率: 单位(s)
       * </pre>
       */
      public Builder clearSampleInterval() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sampleInterval_ = 0;
        onChanged();
        return this;
      }

      private int uploadInterval_ ;
      /**
       * <code>optional int32 UploadInterval = 3 [default = 0];</code>
       *
       * <pre>
       * 通信频率: 单位(s)
       * </pre>
       */
      public boolean hasUploadInterval() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 UploadInterval = 3 [default = 0];</code>
       *
       * <pre>
       * 通信频率: 单位(s)
       * </pre>
       */
      public int getUploadInterval() {
        return uploadInterval_;
      }
      /**
       * <code>optional int32 UploadInterval = 3 [default = 0];</code>
       *
       * <pre>
       * 通信频率: 单位(s)
       * </pre>
       */
      public Builder setUploadInterval(int value) {
        bitField0_ |= 0x00000004;
        uploadInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 UploadInterval = 3 [default = 0];</code>
       *
       * <pre>
       * 通信频率: 单位(s)
       * </pre>
       */
      public Builder clearUploadInterval() {
        bitField0_ = (bitField0_ & ~0x00000004);
        uploadInterval_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol_v1.VoltageBoostLevel)
    }

    // @@protoc_insertion_point(class_scope:protocol_v1.VoltageBoostLevel)
    private static final protocol_v1.V1Setting.VoltageBoostLevel DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol_v1.V1Setting.VoltageBoostLevel();
    }

    public static protocol_v1.V1Setting.VoltageBoostLevel getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<VoltageBoostLevel>
        PARSER = new com.google.protobuf.AbstractParser<VoltageBoostLevel>() {
      public VoltageBoostLevel parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new VoltageBoostLevel(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<VoltageBoostLevel> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VoltageBoostLevel> getParserForType() {
      return PARSER;
    }

    public protocol_v1.V1Setting.VoltageBoostLevel getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SpeedBoostLevelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol_v1.SpeedBoostLevel)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 Voltage = 1 [default = 0];</code>
     *
     * <pre>
     * 电压门限: 单位(V), 精度到0.001V
     * </pre>
     */
    boolean hasVoltage();
    /**
     * <code>optional int32 Voltage = 1 [default = 0];</code>
     *
     * <pre>
     * 电压门限: 单位(V), 精度到0.001V
     * </pre>
     */
    int getVoltage();

    /**
     * <code>optional int32 SampleInterval = 2 [default = 0];</code>
     *
     * <pre>
     * 采样频率: 单位(s)
     * </pre>
     */
    boolean hasSampleInterval();
    /**
     * <code>optional int32 SampleInterval = 2 [default = 0];</code>
     *
     * <pre>
     * 采样频率: 单位(s)
     * </pre>
     */
    int getSampleInterval();

    /**
     * <code>optional int32 ActiveLimit = 3 [default = 0];</code>
     *
     * <pre>
     * 活动速度门限: m/s, 精度到0.1m/s
     * </pre>
     */
    boolean hasActiveLimit();
    /**
     * <code>optional int32 ActiveLimit = 3 [default = 0];</code>
     *
     * <pre>
     * 活动速度门限: m/s, 精度到0.1m/s
     * </pre>
     */
    int getActiveLimit();

    /**
     * <code>optional int32 InactiveLimit = 4 [default = 0];</code>
     *
     * <pre>
     * 静止速度门限: m/s, 精度到0.1m/s
     * </pre>
     */
    boolean hasInactiveLimit();
    /**
     * <code>optional int32 InactiveLimit = 4 [default = 0];</code>
     *
     * <pre>
     * 静止速度门限: m/s, 精度到0.1m/s
     * </pre>
     */
    int getInactiveLimit();

    /**
     * <code>optional int32 UploadTrigger = 5 [default = 0];</code>
     *
     * <pre>
     * 上传触发门限: Boost结束时采样次数达到门限值, 立即启动一次上传
     * </pre>
     */
    boolean hasUploadTrigger();
    /**
     * <code>optional int32 UploadTrigger = 5 [default = 0];</code>
     *
     * <pre>
     * 上传触发门限: Boost结束时采样次数达到门限值, 立即启动一次上传
     * </pre>
     */
    int getUploadTrigger();
  }
  /**
   * Protobuf type {@code protocol_v1.SpeedBoostLevel}
   */
  public  static final class SpeedBoostLevel extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protocol_v1.SpeedBoostLevel)
      SpeedBoostLevelOrBuilder {
    // Use SpeedBoostLevel.newBuilder() to construct.
    private SpeedBoostLevel(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private SpeedBoostLevel() {
      voltage_ = 0;
      sampleInterval_ = 0;
      activeLimit_ = 0;
      inactiveLimit_ = 0;
      uploadTrigger_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SpeedBoostLevel(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              voltage_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              sampleInterval_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              activeLimit_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              inactiveLimit_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              uploadTrigger_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol_v1.V1Setting.internal_static_protocol_v1_SpeedBoostLevel_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol_v1.V1Setting.internal_static_protocol_v1_SpeedBoostLevel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol_v1.V1Setting.SpeedBoostLevel.class, protocol_v1.V1Setting.SpeedBoostLevel.Builder.class);
    }

    private int bitField0_;
    public static final int VOLTAGE_FIELD_NUMBER = 1;
    private int voltage_;
    /**
     * <code>optional int32 Voltage = 1 [default = 0];</code>
     *
     * <pre>
     * 电压门限: 单位(V), 精度到0.001V
     * </pre>
     */
    public boolean hasVoltage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 Voltage = 1 [default = 0];</code>
     *
     * <pre>
     * 电压门限: 单位(V), 精度到0.001V
     * </pre>
     */
    public int getVoltage() {
      return voltage_;
    }

    public static final int SAMPLEINTERVAL_FIELD_NUMBER = 2;
    private int sampleInterval_;
    /**
     * <code>optional int32 SampleInterval = 2 [default = 0];</code>
     *
     * <pre>
     * 采样频率: 单位(s)
     * </pre>
     */
    public boolean hasSampleInterval() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 SampleInterval = 2 [default = 0];</code>
     *
     * <pre>
     * 采样频率: 单位(s)
     * </pre>
     */
    public int getSampleInterval() {
      return sampleInterval_;
    }

    public static final int ACTIVELIMIT_FIELD_NUMBER = 3;
    private int activeLimit_;
    /**
     * <code>optional int32 ActiveLimit = 3 [default = 0];</code>
     *
     * <pre>
     * 活动速度门限: m/s, 精度到0.1m/s
     * </pre>
     */
    public boolean hasActiveLimit() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 ActiveLimit = 3 [default = 0];</code>
     *
     * <pre>
     * 活动速度门限: m/s, 精度到0.1m/s
     * </pre>
     */
    public int getActiveLimit() {
      return activeLimit_;
    }

    public static final int INACTIVELIMIT_FIELD_NUMBER = 4;
    private int inactiveLimit_;
    /**
     * <code>optional int32 InactiveLimit = 4 [default = 0];</code>
     *
     * <pre>
     * 静止速度门限: m/s, 精度到0.1m/s
     * </pre>
     */
    public boolean hasInactiveLimit() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 InactiveLimit = 4 [default = 0];</code>
     *
     * <pre>
     * 静止速度门限: m/s, 精度到0.1m/s
     * </pre>
     */
    public int getInactiveLimit() {
      return inactiveLimit_;
    }

    public static final int UPLOADTRIGGER_FIELD_NUMBER = 5;
    private int uploadTrigger_;
    /**
     * <code>optional int32 UploadTrigger = 5 [default = 0];</code>
     *
     * <pre>
     * 上传触发门限: Boost结束时采样次数达到门限值, 立即启动一次上传
     * </pre>
     */
    public boolean hasUploadTrigger() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 UploadTrigger = 5 [default = 0];</code>
     *
     * <pre>
     * 上传触发门限: Boost结束时采样次数达到门限值, 立即启动一次上传
     * </pre>
     */
    public int getUploadTrigger() {
      return uploadTrigger_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, voltage_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, sampleInterval_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, activeLimit_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, inactiveLimit_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, uploadTrigger_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, voltage_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, sampleInterval_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, activeLimit_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, inactiveLimit_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, uploadTrigger_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static protocol_v1.V1Setting.SpeedBoostLevel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Setting.SpeedBoostLevel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Setting.SpeedBoostLevel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Setting.SpeedBoostLevel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Setting.SpeedBoostLevel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Setting.SpeedBoostLevel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Setting.SpeedBoostLevel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protocol_v1.V1Setting.SpeedBoostLevel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Setting.SpeedBoostLevel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Setting.SpeedBoostLevel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol_v1.V1Setting.SpeedBoostLevel prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol_v1.SpeedBoostLevel}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol_v1.SpeedBoostLevel)
        protocol_v1.V1Setting.SpeedBoostLevelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_SpeedBoostLevel_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_SpeedBoostLevel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol_v1.V1Setting.SpeedBoostLevel.class, protocol_v1.V1Setting.SpeedBoostLevel.Builder.class);
      }

      // Construct using protocol_v1.V1Setting.SpeedBoostLevel.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        voltage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        sampleInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        activeLimit_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        inactiveLimit_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        uploadTrigger_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_SpeedBoostLevel_descriptor;
      }

      public protocol_v1.V1Setting.SpeedBoostLevel getDefaultInstanceForType() {
        return protocol_v1.V1Setting.SpeedBoostLevel.getDefaultInstance();
      }

      public protocol_v1.V1Setting.SpeedBoostLevel build() {
        protocol_v1.V1Setting.SpeedBoostLevel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol_v1.V1Setting.SpeedBoostLevel buildPartial() {
        protocol_v1.V1Setting.SpeedBoostLevel result = new protocol_v1.V1Setting.SpeedBoostLevel(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.voltage_ = voltage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sampleInterval_ = sampleInterval_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.activeLimit_ = activeLimit_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.inactiveLimit_ = inactiveLimit_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.uploadTrigger_ = uploadTrigger_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol_v1.V1Setting.SpeedBoostLevel) {
          return mergeFrom((protocol_v1.V1Setting.SpeedBoostLevel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol_v1.V1Setting.SpeedBoostLevel other) {
        if (other == protocol_v1.V1Setting.SpeedBoostLevel.getDefaultInstance()) return this;
        if (other.hasVoltage()) {
          setVoltage(other.getVoltage());
        }
        if (other.hasSampleInterval()) {
          setSampleInterval(other.getSampleInterval());
        }
        if (other.hasActiveLimit()) {
          setActiveLimit(other.getActiveLimit());
        }
        if (other.hasInactiveLimit()) {
          setInactiveLimit(other.getInactiveLimit());
        }
        if (other.hasUploadTrigger()) {
          setUploadTrigger(other.getUploadTrigger());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol_v1.V1Setting.SpeedBoostLevel parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol_v1.V1Setting.SpeedBoostLevel) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int voltage_ ;
      /**
       * <code>optional int32 Voltage = 1 [default = 0];</code>
       *
       * <pre>
       * 电压门限: 单位(V), 精度到0.001V
       * </pre>
       */
      public boolean hasVoltage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 Voltage = 1 [default = 0];</code>
       *
       * <pre>
       * 电压门限: 单位(V), 精度到0.001V
       * </pre>
       */
      public int getVoltage() {
        return voltage_;
      }
      /**
       * <code>optional int32 Voltage = 1 [default = 0];</code>
       *
       * <pre>
       * 电压门限: 单位(V), 精度到0.001V
       * </pre>
       */
      public Builder setVoltage(int value) {
        bitField0_ |= 0x00000001;
        voltage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Voltage = 1 [default = 0];</code>
       *
       * <pre>
       * 电压门限: 单位(V), 精度到0.001V
       * </pre>
       */
      public Builder clearVoltage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        voltage_ = 0;
        onChanged();
        return this;
      }

      private int sampleInterval_ ;
      /**
       * <code>optional int32 SampleInterval = 2 [default = 0];</code>
       *
       * <pre>
       * 采样频率: 单位(s)
       * </pre>
       */
      public boolean hasSampleInterval() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 SampleInterval = 2 [default = 0];</code>
       *
       * <pre>
       * 采样频率: 单位(s)
       * </pre>
       */
      public int getSampleInterval() {
        return sampleInterval_;
      }
      /**
       * <code>optional int32 SampleInterval = 2 [default = 0];</code>
       *
       * <pre>
       * 采样频率: 单位(s)
       * </pre>
       */
      public Builder setSampleInterval(int value) {
        bitField0_ |= 0x00000002;
        sampleInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 SampleInterval = 2 [default = 0];</code>
       *
       * <pre>
       * 采样频率: 单位(s)
       * </pre>
       */
      public Builder clearSampleInterval() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sampleInterval_ = 0;
        onChanged();
        return this;
      }

      private int activeLimit_ ;
      /**
       * <code>optional int32 ActiveLimit = 3 [default = 0];</code>
       *
       * <pre>
       * 活动速度门限: m/s, 精度到0.1m/s
       * </pre>
       */
      public boolean hasActiveLimit() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 ActiveLimit = 3 [default = 0];</code>
       *
       * <pre>
       * 活动速度门限: m/s, 精度到0.1m/s
       * </pre>
       */
      public int getActiveLimit() {
        return activeLimit_;
      }
      /**
       * <code>optional int32 ActiveLimit = 3 [default = 0];</code>
       *
       * <pre>
       * 活动速度门限: m/s, 精度到0.1m/s
       * </pre>
       */
      public Builder setActiveLimit(int value) {
        bitField0_ |= 0x00000004;
        activeLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ActiveLimit = 3 [default = 0];</code>
       *
       * <pre>
       * 活动速度门限: m/s, 精度到0.1m/s
       * </pre>
       */
      public Builder clearActiveLimit() {
        bitField0_ = (bitField0_ & ~0x00000004);
        activeLimit_ = 0;
        onChanged();
        return this;
      }

      private int inactiveLimit_ ;
      /**
       * <code>optional int32 InactiveLimit = 4 [default = 0];</code>
       *
       * <pre>
       * 静止速度门限: m/s, 精度到0.1m/s
       * </pre>
       */
      public boolean hasInactiveLimit() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 InactiveLimit = 4 [default = 0];</code>
       *
       * <pre>
       * 静止速度门限: m/s, 精度到0.1m/s
       * </pre>
       */
      public int getInactiveLimit() {
        return inactiveLimit_;
      }
      /**
       * <code>optional int32 InactiveLimit = 4 [default = 0];</code>
       *
       * <pre>
       * 静止速度门限: m/s, 精度到0.1m/s
       * </pre>
       */
      public Builder setInactiveLimit(int value) {
        bitField0_ |= 0x00000008;
        inactiveLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 InactiveLimit = 4 [default = 0];</code>
       *
       * <pre>
       * 静止速度门限: m/s, 精度到0.1m/s
       * </pre>
       */
      public Builder clearInactiveLimit() {
        bitField0_ = (bitField0_ & ~0x00000008);
        inactiveLimit_ = 0;
        onChanged();
        return this;
      }

      private int uploadTrigger_ ;
      /**
       * <code>optional int32 UploadTrigger = 5 [default = 0];</code>
       *
       * <pre>
       * 上传触发门限: Boost结束时采样次数达到门限值, 立即启动一次上传
       * </pre>
       */
      public boolean hasUploadTrigger() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 UploadTrigger = 5 [default = 0];</code>
       *
       * <pre>
       * 上传触发门限: Boost结束时采样次数达到门限值, 立即启动一次上传
       * </pre>
       */
      public int getUploadTrigger() {
        return uploadTrigger_;
      }
      /**
       * <code>optional int32 UploadTrigger = 5 [default = 0];</code>
       *
       * <pre>
       * 上传触发门限: Boost结束时采样次数达到门限值, 立即启动一次上传
       * </pre>
       */
      public Builder setUploadTrigger(int value) {
        bitField0_ |= 0x00000010;
        uploadTrigger_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 UploadTrigger = 5 [default = 0];</code>
       *
       * <pre>
       * 上传触发门限: Boost结束时采样次数达到门限值, 立即启动一次上传
       * </pre>
       */
      public Builder clearUploadTrigger() {
        bitField0_ = (bitField0_ & ~0x00000010);
        uploadTrigger_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol_v1.SpeedBoostLevel)
    }

    // @@protoc_insertion_point(class_scope:protocol_v1.SpeedBoostLevel)
    private static final protocol_v1.V1Setting.SpeedBoostLevel DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol_v1.V1Setting.SpeedBoostLevel();
    }

    public static protocol_v1.V1Setting.SpeedBoostLevel getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SpeedBoostLevel>
        PARSER = new com.google.protobuf.AbstractParser<SpeedBoostLevel>() {
      public SpeedBoostLevel parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new SpeedBoostLevel(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<SpeedBoostLevel> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SpeedBoostLevel> getParserForType() {
      return PARSER;
    }

    public protocol_v1.V1Setting.SpeedBoostLevel getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface Origin2SettingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol_v1.Origin2Setting)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 Mode = 1 [default = 0];</code>
     *
     * <pre>
     * 采样模式: 0 - 关闭,  1 - 定时采样 (依赖于行为采样，行为采样关闭时无法开启原始数据采样)
     * </pre>
     */
    boolean hasMode();
    /**
     * <code>optional int32 Mode = 1 [default = 0];</code>
     *
     * <pre>
     * 采样模式: 0 - 关闭,  1 - 定时采样 (依赖于行为采样，行为采样关闭时无法开启原始数据采样)
     * </pre>
     */
    int getMode();

    /**
     * <code>optional int32 Interval = 2 [default = 60];</code>
     *
     * <pre>
     * 采样间隔: 取值范围 60~86400(60的整数倍), 单位: 秒
     * </pre>
     */
    boolean hasInterval();
    /**
     * <code>optional int32 Interval = 2 [default = 60];</code>
     *
     * <pre>
     * 采样间隔: 取值范围 60~86400(60的整数倍), 单位: 秒
     * </pre>
     */
    int getInterval();

    /**
     * <code>optional int32 Duration = 3 [default = 1];</code>
     *
     * <pre>
     * 持续时间: 取值范围 1~Interval, 单位: 秒 (Duration/Interval&gt;0.1时,提醒【采样占空比过高，会产生海量数据，如果通过网络传输会非常耗电】)
     * </pre>
     */
    boolean hasDuration();
    /**
     * <code>optional int32 Duration = 3 [default = 1];</code>
     *
     * <pre>
     * 持续时间: 取值范围 1~Interval, 单位: 秒 (Duration/Interval&gt;0.1时,提醒【采样占空比过高，会产生海量数据，如果通过网络传输会非常耗电】)
     * </pre>
     */
    int getDuration();
  }
  /**
   * Protobuf type {@code protocol_v1.Origin2Setting}
   */
  public  static final class Origin2Setting extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protocol_v1.Origin2Setting)
      Origin2SettingOrBuilder {
    // Use Origin2Setting.newBuilder() to construct.
    private Origin2Setting(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Origin2Setting() {
      mode_ = 0;
      interval_ = 60;
      duration_ = 1;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Origin2Setting(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              mode_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              interval_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              duration_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol_v1.V1Setting.internal_static_protocol_v1_Origin2Setting_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol_v1.V1Setting.internal_static_protocol_v1_Origin2Setting_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol_v1.V1Setting.Origin2Setting.class, protocol_v1.V1Setting.Origin2Setting.Builder.class);
    }

    private int bitField0_;
    public static final int MODE_FIELD_NUMBER = 1;
    private int mode_;
    /**
     * <code>optional int32 Mode = 1 [default = 0];</code>
     *
     * <pre>
     * 采样模式: 0 - 关闭,  1 - 定时采样 (依赖于行为采样，行为采样关闭时无法开启原始数据采样)
     * </pre>
     */
    public boolean hasMode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 Mode = 1 [default = 0];</code>
     *
     * <pre>
     * 采样模式: 0 - 关闭,  1 - 定时采样 (依赖于行为采样，行为采样关闭时无法开启原始数据采样)
     * </pre>
     */
    public int getMode() {
      return mode_;
    }

    public static final int INTERVAL_FIELD_NUMBER = 2;
    private int interval_;
    /**
     * <code>optional int32 Interval = 2 [default = 60];</code>
     *
     * <pre>
     * 采样间隔: 取值范围 60~86400(60的整数倍), 单位: 秒
     * </pre>
     */
    public boolean hasInterval() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 Interval = 2 [default = 60];</code>
     *
     * <pre>
     * 采样间隔: 取值范围 60~86400(60的整数倍), 单位: 秒
     * </pre>
     */
    public int getInterval() {
      return interval_;
    }

    public static final int DURATION_FIELD_NUMBER = 3;
    private int duration_;
    /**
     * <code>optional int32 Duration = 3 [default = 1];</code>
     *
     * <pre>
     * 持续时间: 取值范围 1~Interval, 单位: 秒 (Duration/Interval&gt;0.1时,提醒【采样占空比过高，会产生海量数据，如果通过网络传输会非常耗电】)
     * </pre>
     */
    public boolean hasDuration() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 Duration = 3 [default = 1];</code>
     *
     * <pre>
     * 持续时间: 取值范围 1~Interval, 单位: 秒 (Duration/Interval&gt;0.1时,提醒【采样占空比过高，会产生海量数据，如果通过网络传输会非常耗电】)
     * </pre>
     */
    public int getDuration() {
      return duration_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, mode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, interval_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, duration_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, mode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, interval_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, duration_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static protocol_v1.V1Setting.Origin2Setting parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Setting.Origin2Setting parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Setting.Origin2Setting parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Setting.Origin2Setting parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Setting.Origin2Setting parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Setting.Origin2Setting parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Setting.Origin2Setting parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protocol_v1.V1Setting.Origin2Setting parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Setting.Origin2Setting parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Setting.Origin2Setting parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol_v1.V1Setting.Origin2Setting prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol_v1.Origin2Setting}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol_v1.Origin2Setting)
        protocol_v1.V1Setting.Origin2SettingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_Origin2Setting_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_Origin2Setting_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol_v1.V1Setting.Origin2Setting.class, protocol_v1.V1Setting.Origin2Setting.Builder.class);
      }

      // Construct using protocol_v1.V1Setting.Origin2Setting.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        mode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        interval_ = 60;
        bitField0_ = (bitField0_ & ~0x00000002);
        duration_ = 1;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_Origin2Setting_descriptor;
      }

      public protocol_v1.V1Setting.Origin2Setting getDefaultInstanceForType() {
        return protocol_v1.V1Setting.Origin2Setting.getDefaultInstance();
      }

      public protocol_v1.V1Setting.Origin2Setting build() {
        protocol_v1.V1Setting.Origin2Setting result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol_v1.V1Setting.Origin2Setting buildPartial() {
        protocol_v1.V1Setting.Origin2Setting result = new protocol_v1.V1Setting.Origin2Setting(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mode_ = mode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.interval_ = interval_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.duration_ = duration_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol_v1.V1Setting.Origin2Setting) {
          return mergeFrom((protocol_v1.V1Setting.Origin2Setting)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol_v1.V1Setting.Origin2Setting other) {
        if (other == protocol_v1.V1Setting.Origin2Setting.getDefaultInstance()) return this;
        if (other.hasMode()) {
          setMode(other.getMode());
        }
        if (other.hasInterval()) {
          setInterval(other.getInterval());
        }
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol_v1.V1Setting.Origin2Setting parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol_v1.V1Setting.Origin2Setting) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int mode_ ;
      /**
       * <code>optional int32 Mode = 1 [default = 0];</code>
       *
       * <pre>
       * 采样模式: 0 - 关闭,  1 - 定时采样 (依赖于行为采样，行为采样关闭时无法开启原始数据采样)
       * </pre>
       */
      public boolean hasMode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 Mode = 1 [default = 0];</code>
       *
       * <pre>
       * 采样模式: 0 - 关闭,  1 - 定时采样 (依赖于行为采样，行为采样关闭时无法开启原始数据采样)
       * </pre>
       */
      public int getMode() {
        return mode_;
      }
      /**
       * <code>optional int32 Mode = 1 [default = 0];</code>
       *
       * <pre>
       * 采样模式: 0 - 关闭,  1 - 定时采样 (依赖于行为采样，行为采样关闭时无法开启原始数据采样)
       * </pre>
       */
      public Builder setMode(int value) {
        bitField0_ |= 0x00000001;
        mode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Mode = 1 [default = 0];</code>
       *
       * <pre>
       * 采样模式: 0 - 关闭,  1 - 定时采样 (依赖于行为采样，行为采样关闭时无法开启原始数据采样)
       * </pre>
       */
      public Builder clearMode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mode_ = 0;
        onChanged();
        return this;
      }

      private int interval_ = 60;
      /**
       * <code>optional int32 Interval = 2 [default = 60];</code>
       *
       * <pre>
       * 采样间隔: 取值范围 60~86400(60的整数倍), 单位: 秒
       * </pre>
       */
      public boolean hasInterval() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 Interval = 2 [default = 60];</code>
       *
       * <pre>
       * 采样间隔: 取值范围 60~86400(60的整数倍), 单位: 秒
       * </pre>
       */
      public int getInterval() {
        return interval_;
      }
      /**
       * <code>optional int32 Interval = 2 [default = 60];</code>
       *
       * <pre>
       * 采样间隔: 取值范围 60~86400(60的整数倍), 单位: 秒
       * </pre>
       */
      public Builder setInterval(int value) {
        bitField0_ |= 0x00000002;
        interval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Interval = 2 [default = 60];</code>
       *
       * <pre>
       * 采样间隔: 取值范围 60~86400(60的整数倍), 单位: 秒
       * </pre>
       */
      public Builder clearInterval() {
        bitField0_ = (bitField0_ & ~0x00000002);
        interval_ = 60;
        onChanged();
        return this;
      }

      private int duration_ = 1;
      /**
       * <code>optional int32 Duration = 3 [default = 1];</code>
       *
       * <pre>
       * 持续时间: 取值范围 1~Interval, 单位: 秒 (Duration/Interval&gt;0.1时,提醒【采样占空比过高，会产生海量数据，如果通过网络传输会非常耗电】)
       * </pre>
       */
      public boolean hasDuration() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 Duration = 3 [default = 1];</code>
       *
       * <pre>
       * 持续时间: 取值范围 1~Interval, 单位: 秒 (Duration/Interval&gt;0.1时,提醒【采样占空比过高，会产生海量数据，如果通过网络传输会非常耗电】)
       * </pre>
       */
      public int getDuration() {
        return duration_;
      }
      /**
       * <code>optional int32 Duration = 3 [default = 1];</code>
       *
       * <pre>
       * 持续时间: 取值范围 1~Interval, 单位: 秒 (Duration/Interval&gt;0.1时,提醒【采样占空比过高，会产生海量数据，如果通过网络传输会非常耗电】)
       * </pre>
       */
      public Builder setDuration(int value) {
        bitField0_ |= 0x00000004;
        duration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Duration = 3 [default = 1];</code>
       *
       * <pre>
       * 持续时间: 取值范围 1~Interval, 单位: 秒 (Duration/Interval&gt;0.1时,提醒【采样占空比过高，会产生海量数据，如果通过网络传输会非常耗电】)
       * </pre>
       */
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000004);
        duration_ = 1;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol_v1.Origin2Setting)
    }

    // @@protoc_insertion_point(class_scope:protocol_v1.Origin2Setting)
    private static final protocol_v1.V1Setting.Origin2Setting DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol_v1.V1Setting.Origin2Setting();
    }

    public static protocol_v1.V1Setting.Origin2Setting getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Origin2Setting>
        PARSER = new com.google.protobuf.AbstractParser<Origin2Setting>() {
      public Origin2Setting parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Origin2Setting(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Origin2Setting> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Origin2Setting> getParserForType() {
      return PARSER;
    }

    public protocol_v1.V1Setting.Origin2Setting getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BeaconLocationSettingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol_v1.BeaconLocationSetting)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 Mode = 1 [default = 0];</code>
     *
     * <pre>
     * 信标定位模式: 0 - 关闭; 1 - 开启
     * </pre>
     */
    boolean hasMode();
    /**
     * <code>optional int32 Mode = 1 [default = 0];</code>
     *
     * <pre>
     * 信标定位模式: 0 - 关闭; 1 - 开启
     * </pre>
     */
    int getMode();

    /**
     * <code>optional int32 Timeout = 2 [default = 0];</code>
     *
     * <pre>
     * 信标有效期, 单位秒, 取值: 60~86400
     * </pre>
     */
    boolean hasTimeout();
    /**
     * <code>optional int32 Timeout = 2 [default = 0];</code>
     *
     * <pre>
     * 信标有效期, 单位秒, 取值: 60~86400
     * </pre>
     */
    int getTimeout();

    /**
     * <code>optional int32 WhiteListMode = 3 [default = 0];</code>
     *
     * <pre>
     * 白名单模式: 0 - 关闭(super模式); 1 - 开启白名单[暂不支持]; 2 - 自动白名单; 3 - 严格白名单
     * </pre>
     */
    boolean hasWhiteListMode();
    /**
     * <code>optional int32 WhiteListMode = 3 [default = 0];</code>
     *
     * <pre>
     * 白名单模式: 0 - 关闭(super模式); 1 - 开启白名单[暂不支持]; 2 - 自动白名单; 3 - 严格白名单
     * </pre>
     */
    int getWhiteListMode();
  }
  /**
   * Protobuf type {@code protocol_v1.BeaconLocationSetting}
   *
   * <pre>
   * 胡腾要求移到普通配置, 白名单存在争议, 暂不实现, 所以暂时移除
   * </pre>
   */
  public  static final class BeaconLocationSetting extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protocol_v1.BeaconLocationSetting)
      BeaconLocationSettingOrBuilder {
    // Use BeaconLocationSetting.newBuilder() to construct.
    private BeaconLocationSetting(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private BeaconLocationSetting() {
      mode_ = 0;
      timeout_ = 0;
      whiteListMode_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BeaconLocationSetting(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              mode_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              timeout_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              whiteListMode_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol_v1.V1Setting.internal_static_protocol_v1_BeaconLocationSetting_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol_v1.V1Setting.internal_static_protocol_v1_BeaconLocationSetting_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol_v1.V1Setting.BeaconLocationSetting.class, protocol_v1.V1Setting.BeaconLocationSetting.Builder.class);
    }

    private int bitField0_;
    public static final int MODE_FIELD_NUMBER = 1;
    private int mode_;
    /**
     * <code>optional int32 Mode = 1 [default = 0];</code>
     *
     * <pre>
     * 信标定位模式: 0 - 关闭; 1 - 开启
     * </pre>
     */
    public boolean hasMode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 Mode = 1 [default = 0];</code>
     *
     * <pre>
     * 信标定位模式: 0 - 关闭; 1 - 开启
     * </pre>
     */
    public int getMode() {
      return mode_;
    }

    public static final int TIMEOUT_FIELD_NUMBER = 2;
    private int timeout_;
    /**
     * <code>optional int32 Timeout = 2 [default = 0];</code>
     *
     * <pre>
     * 信标有效期, 单位秒, 取值: 60~86400
     * </pre>
     */
    public boolean hasTimeout() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 Timeout = 2 [default = 0];</code>
     *
     * <pre>
     * 信标有效期, 单位秒, 取值: 60~86400
     * </pre>
     */
    public int getTimeout() {
      return timeout_;
    }

    public static final int WHITELISTMODE_FIELD_NUMBER = 3;
    private int whiteListMode_;
    /**
     * <code>optional int32 WhiteListMode = 3 [default = 0];</code>
     *
     * <pre>
     * 白名单模式: 0 - 关闭(super模式); 1 - 开启白名单[暂不支持]; 2 - 自动白名单; 3 - 严格白名单
     * </pre>
     */
    public boolean hasWhiteListMode() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 WhiteListMode = 3 [default = 0];</code>
     *
     * <pre>
     * 白名单模式: 0 - 关闭(super模式); 1 - 开启白名单[暂不支持]; 2 - 自动白名单; 3 - 严格白名单
     * </pre>
     */
    public int getWhiteListMode() {
      return whiteListMode_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, mode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, timeout_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, whiteListMode_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, mode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, timeout_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, whiteListMode_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static protocol_v1.V1Setting.BeaconLocationSetting parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Setting.BeaconLocationSetting parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Setting.BeaconLocationSetting parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Setting.BeaconLocationSetting parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Setting.BeaconLocationSetting parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Setting.BeaconLocationSetting parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Setting.BeaconLocationSetting parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protocol_v1.V1Setting.BeaconLocationSetting parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Setting.BeaconLocationSetting parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Setting.BeaconLocationSetting parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol_v1.V1Setting.BeaconLocationSetting prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol_v1.BeaconLocationSetting}
     *
     * <pre>
     * 胡腾要求移到普通配置, 白名单存在争议, 暂不实现, 所以暂时移除
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol_v1.BeaconLocationSetting)
        protocol_v1.V1Setting.BeaconLocationSettingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_BeaconLocationSetting_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_BeaconLocationSetting_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol_v1.V1Setting.BeaconLocationSetting.class, protocol_v1.V1Setting.BeaconLocationSetting.Builder.class);
      }

      // Construct using protocol_v1.V1Setting.BeaconLocationSetting.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        mode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        timeout_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        whiteListMode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_BeaconLocationSetting_descriptor;
      }

      public protocol_v1.V1Setting.BeaconLocationSetting getDefaultInstanceForType() {
        return protocol_v1.V1Setting.BeaconLocationSetting.getDefaultInstance();
      }

      public protocol_v1.V1Setting.BeaconLocationSetting build() {
        protocol_v1.V1Setting.BeaconLocationSetting result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol_v1.V1Setting.BeaconLocationSetting buildPartial() {
        protocol_v1.V1Setting.BeaconLocationSetting result = new protocol_v1.V1Setting.BeaconLocationSetting(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mode_ = mode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timeout_ = timeout_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.whiteListMode_ = whiteListMode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol_v1.V1Setting.BeaconLocationSetting) {
          return mergeFrom((protocol_v1.V1Setting.BeaconLocationSetting)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol_v1.V1Setting.BeaconLocationSetting other) {
        if (other == protocol_v1.V1Setting.BeaconLocationSetting.getDefaultInstance()) return this;
        if (other.hasMode()) {
          setMode(other.getMode());
        }
        if (other.hasTimeout()) {
          setTimeout(other.getTimeout());
        }
        if (other.hasWhiteListMode()) {
          setWhiteListMode(other.getWhiteListMode());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol_v1.V1Setting.BeaconLocationSetting parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol_v1.V1Setting.BeaconLocationSetting) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int mode_ ;
      /**
       * <code>optional int32 Mode = 1 [default = 0];</code>
       *
       * <pre>
       * 信标定位模式: 0 - 关闭; 1 - 开启
       * </pre>
       */
      public boolean hasMode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 Mode = 1 [default = 0];</code>
       *
       * <pre>
       * 信标定位模式: 0 - 关闭; 1 - 开启
       * </pre>
       */
      public int getMode() {
        return mode_;
      }
      /**
       * <code>optional int32 Mode = 1 [default = 0];</code>
       *
       * <pre>
       * 信标定位模式: 0 - 关闭; 1 - 开启
       * </pre>
       */
      public Builder setMode(int value) {
        bitField0_ |= 0x00000001;
        mode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Mode = 1 [default = 0];</code>
       *
       * <pre>
       * 信标定位模式: 0 - 关闭; 1 - 开启
       * </pre>
       */
      public Builder clearMode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mode_ = 0;
        onChanged();
        return this;
      }

      private int timeout_ ;
      /**
       * <code>optional int32 Timeout = 2 [default = 0];</code>
       *
       * <pre>
       * 信标有效期, 单位秒, 取值: 60~86400
       * </pre>
       */
      public boolean hasTimeout() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 Timeout = 2 [default = 0];</code>
       *
       * <pre>
       * 信标有效期, 单位秒, 取值: 60~86400
       * </pre>
       */
      public int getTimeout() {
        return timeout_;
      }
      /**
       * <code>optional int32 Timeout = 2 [default = 0];</code>
       *
       * <pre>
       * 信标有效期, 单位秒, 取值: 60~86400
       * </pre>
       */
      public Builder setTimeout(int value) {
        bitField0_ |= 0x00000002;
        timeout_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Timeout = 2 [default = 0];</code>
       *
       * <pre>
       * 信标有效期, 单位秒, 取值: 60~86400
       * </pre>
       */
      public Builder clearTimeout() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timeout_ = 0;
        onChanged();
        return this;
      }

      private int whiteListMode_ ;
      /**
       * <code>optional int32 WhiteListMode = 3 [default = 0];</code>
       *
       * <pre>
       * 白名单模式: 0 - 关闭(super模式); 1 - 开启白名单[暂不支持]; 2 - 自动白名单; 3 - 严格白名单
       * </pre>
       */
      public boolean hasWhiteListMode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 WhiteListMode = 3 [default = 0];</code>
       *
       * <pre>
       * 白名单模式: 0 - 关闭(super模式); 1 - 开启白名单[暂不支持]; 2 - 自动白名单; 3 - 严格白名单
       * </pre>
       */
      public int getWhiteListMode() {
        return whiteListMode_;
      }
      /**
       * <code>optional int32 WhiteListMode = 3 [default = 0];</code>
       *
       * <pre>
       * 白名单模式: 0 - 关闭(super模式); 1 - 开启白名单[暂不支持]; 2 - 自动白名单; 3 - 严格白名单
       * </pre>
       */
      public Builder setWhiteListMode(int value) {
        bitField0_ |= 0x00000004;
        whiteListMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 WhiteListMode = 3 [default = 0];</code>
       *
       * <pre>
       * 白名单模式: 0 - 关闭(super模式); 1 - 开启白名单[暂不支持]; 2 - 自动白名单; 3 - 严格白名单
       * </pre>
       */
      public Builder clearWhiteListMode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        whiteListMode_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol_v1.BeaconLocationSetting)
    }

    // @@protoc_insertion_point(class_scope:protocol_v1.BeaconLocationSetting)
    private static final protocol_v1.V1Setting.BeaconLocationSetting DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol_v1.V1Setting.BeaconLocationSetting();
    }

    public static protocol_v1.V1Setting.BeaconLocationSetting getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<BeaconLocationSetting>
        PARSER = new com.google.protobuf.AbstractParser<BeaconLocationSetting>() {
      public BeaconLocationSetting parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new BeaconLocationSetting(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<BeaconLocationSetting> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BeaconLocationSetting> getParserForType() {
      return PARSER;
    }

    public protocol_v1.V1Setting.BeaconLocationSetting getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PowerOffSettingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol_v1.PowerOffSetting)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 Mode = 1 [default = 0];</code>
     *
     * <pre>
     * 0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
     * </pre>
     */
    boolean hasMode();
    /**
     * <code>optional int32 Mode = 1 [default = 0];</code>
     *
     * <pre>
     * 0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
     * </pre>
     */
    int getMode();

    /**
     * <code>optional int32 Mask = 2 [default = 0];</code>
     *
     * <pre>
     * 计划关机动作, 位图: 00001 - 停定位采样; 00010 - 停环境采样; 00100 - 停行为采样; 01000 - 停BOOST; 10000 - 停通信
     * </pre>
     */
    boolean hasMask();
    /**
     * <code>optional int32 Mask = 2 [default = 0];</code>
     *
     * <pre>
     * 计划关机动作, 位图: 00001 - 停定位采样; 00010 - 停环境采样; 00100 - 停行为采样; 01000 - 停BOOST; 10000 - 停通信
     * </pre>
     */
    int getMask();

    /**
     * <code>repeated .protocol_v1.TimeRange Time = 3;</code>
     *
     * <pre>
     * 计划关机时间范围
     * </pre>
     */
    java.util.List<protocol_v1.V1Setting.TimeRange> 
        getTimeList();
    /**
     * <code>repeated .protocol_v1.TimeRange Time = 3;</code>
     *
     * <pre>
     * 计划关机时间范围
     * </pre>
     */
    protocol_v1.V1Setting.TimeRange getTime(int index);
    /**
     * <code>repeated .protocol_v1.TimeRange Time = 3;</code>
     *
     * <pre>
     * 计划关机时间范围
     * </pre>
     */
    int getTimeCount();
    /**
     * <code>repeated .protocol_v1.TimeRange Time = 3;</code>
     *
     * <pre>
     * 计划关机时间范围
     * </pre>
     */
    java.util.List<? extends protocol_v1.V1Setting.TimeRangeOrBuilder> 
        getTimeOrBuilderList();
    /**
     * <code>repeated .protocol_v1.TimeRange Time = 3;</code>
     *
     * <pre>
     * 计划关机时间范围
     * </pre>
     */
    protocol_v1.V1Setting.TimeRangeOrBuilder getTimeOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code protocol_v1.PowerOffSetting}
   */
  public  static final class PowerOffSetting extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protocol_v1.PowerOffSetting)
      PowerOffSettingOrBuilder {
    // Use PowerOffSetting.newBuilder() to construct.
    private PowerOffSetting(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private PowerOffSetting() {
      mode_ = 0;
      mask_ = 0;
      time_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PowerOffSetting(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              mode_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              mask_ = input.readInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                time_ = new java.util.ArrayList<protocol_v1.V1Setting.TimeRange>();
                mutable_bitField0_ |= 0x00000004;
              }
              time_.add(input.readMessage(protocol_v1.V1Setting.TimeRange.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          time_ = java.util.Collections.unmodifiableList(time_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol_v1.V1Setting.internal_static_protocol_v1_PowerOffSetting_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol_v1.V1Setting.internal_static_protocol_v1_PowerOffSetting_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol_v1.V1Setting.PowerOffSetting.class, protocol_v1.V1Setting.PowerOffSetting.Builder.class);
    }

    private int bitField0_;
    public static final int MODE_FIELD_NUMBER = 1;
    private int mode_;
    /**
     * <code>optional int32 Mode = 1 [default = 0];</code>
     *
     * <pre>
     * 0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
     * </pre>
     */
    public boolean hasMode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 Mode = 1 [default = 0];</code>
     *
     * <pre>
     * 0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
     * </pre>
     */
    public int getMode() {
      return mode_;
    }

    public static final int MASK_FIELD_NUMBER = 2;
    private int mask_;
    /**
     * <code>optional int32 Mask = 2 [default = 0];</code>
     *
     * <pre>
     * 计划关机动作, 位图: 00001 - 停定位采样; 00010 - 停环境采样; 00100 - 停行为采样; 01000 - 停BOOST; 10000 - 停通信
     * </pre>
     */
    public boolean hasMask() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 Mask = 2 [default = 0];</code>
     *
     * <pre>
     * 计划关机动作, 位图: 00001 - 停定位采样; 00010 - 停环境采样; 00100 - 停行为采样; 01000 - 停BOOST; 10000 - 停通信
     * </pre>
     */
    public int getMask() {
      return mask_;
    }

    public static final int TIME_FIELD_NUMBER = 3;
    private java.util.List<protocol_v1.V1Setting.TimeRange> time_;
    /**
     * <code>repeated .protocol_v1.TimeRange Time = 3;</code>
     *
     * <pre>
     * 计划关机时间范围
     * </pre>
     */
    public java.util.List<protocol_v1.V1Setting.TimeRange> getTimeList() {
      return time_;
    }
    /**
     * <code>repeated .protocol_v1.TimeRange Time = 3;</code>
     *
     * <pre>
     * 计划关机时间范围
     * </pre>
     */
    public java.util.List<? extends protocol_v1.V1Setting.TimeRangeOrBuilder> 
        getTimeOrBuilderList() {
      return time_;
    }
    /**
     * <code>repeated .protocol_v1.TimeRange Time = 3;</code>
     *
     * <pre>
     * 计划关机时间范围
     * </pre>
     */
    public int getTimeCount() {
      return time_.size();
    }
    /**
     * <code>repeated .protocol_v1.TimeRange Time = 3;</code>
     *
     * <pre>
     * 计划关机时间范围
     * </pre>
     */
    public protocol_v1.V1Setting.TimeRange getTime(int index) {
      return time_.get(index);
    }
    /**
     * <code>repeated .protocol_v1.TimeRange Time = 3;</code>
     *
     * <pre>
     * 计划关机时间范围
     * </pre>
     */
    public protocol_v1.V1Setting.TimeRangeOrBuilder getTimeOrBuilder(
        int index) {
      return time_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getTimeCount(); i++) {
        if (!getTime(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, mode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, mask_);
      }
      for (int i = 0; i < time_.size(); i++) {
        output.writeMessage(3, time_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, mode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mask_);
      }
      for (int i = 0; i < time_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, time_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static protocol_v1.V1Setting.PowerOffSetting parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Setting.PowerOffSetting parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Setting.PowerOffSetting parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Setting.PowerOffSetting parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Setting.PowerOffSetting parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Setting.PowerOffSetting parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Setting.PowerOffSetting parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protocol_v1.V1Setting.PowerOffSetting parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Setting.PowerOffSetting parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Setting.PowerOffSetting parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol_v1.V1Setting.PowerOffSetting prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol_v1.PowerOffSetting}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol_v1.PowerOffSetting)
        protocol_v1.V1Setting.PowerOffSettingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_PowerOffSetting_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_PowerOffSetting_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol_v1.V1Setting.PowerOffSetting.class, protocol_v1.V1Setting.PowerOffSetting.Builder.class);
      }

      // Construct using protocol_v1.V1Setting.PowerOffSetting.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTimeFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        mode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        mask_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (timeBuilder_ == null) {
          time_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          timeBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_PowerOffSetting_descriptor;
      }

      public protocol_v1.V1Setting.PowerOffSetting getDefaultInstanceForType() {
        return protocol_v1.V1Setting.PowerOffSetting.getDefaultInstance();
      }

      public protocol_v1.V1Setting.PowerOffSetting build() {
        protocol_v1.V1Setting.PowerOffSetting result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol_v1.V1Setting.PowerOffSetting buildPartial() {
        protocol_v1.V1Setting.PowerOffSetting result = new protocol_v1.V1Setting.PowerOffSetting(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mode_ = mode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.mask_ = mask_;
        if (timeBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            time_ = java.util.Collections.unmodifiableList(time_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.time_ = time_;
        } else {
          result.time_ = timeBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol_v1.V1Setting.PowerOffSetting) {
          return mergeFrom((protocol_v1.V1Setting.PowerOffSetting)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol_v1.V1Setting.PowerOffSetting other) {
        if (other == protocol_v1.V1Setting.PowerOffSetting.getDefaultInstance()) return this;
        if (other.hasMode()) {
          setMode(other.getMode());
        }
        if (other.hasMask()) {
          setMask(other.getMask());
        }
        if (timeBuilder_ == null) {
          if (!other.time_.isEmpty()) {
            if (time_.isEmpty()) {
              time_ = other.time_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureTimeIsMutable();
              time_.addAll(other.time_);
            }
            onChanged();
          }
        } else {
          if (!other.time_.isEmpty()) {
            if (timeBuilder_.isEmpty()) {
              timeBuilder_.dispose();
              timeBuilder_ = null;
              time_ = other.time_;
              bitField0_ = (bitField0_ & ~0x00000004);
              timeBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTimeFieldBuilder() : null;
            } else {
              timeBuilder_.addAllMessages(other.time_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getTimeCount(); i++) {
          if (!getTime(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol_v1.V1Setting.PowerOffSetting parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol_v1.V1Setting.PowerOffSetting) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int mode_ ;
      /**
       * <code>optional int32 Mode = 1 [default = 0];</code>
       *
       * <pre>
       * 0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
       * </pre>
       */
      public boolean hasMode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 Mode = 1 [default = 0];</code>
       *
       * <pre>
       * 0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
       * </pre>
       */
      public int getMode() {
        return mode_;
      }
      /**
       * <code>optional int32 Mode = 1 [default = 0];</code>
       *
       * <pre>
       * 0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
       * </pre>
       */
      public Builder setMode(int value) {
        bitField0_ |= 0x00000001;
        mode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Mode = 1 [default = 0];</code>
       *
       * <pre>
       * 0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
       * </pre>
       */
      public Builder clearMode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mode_ = 0;
        onChanged();
        return this;
      }

      private int mask_ ;
      /**
       * <code>optional int32 Mask = 2 [default = 0];</code>
       *
       * <pre>
       * 计划关机动作, 位图: 00001 - 停定位采样; 00010 - 停环境采样; 00100 - 停行为采样; 01000 - 停BOOST; 10000 - 停通信
       * </pre>
       */
      public boolean hasMask() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 Mask = 2 [default = 0];</code>
       *
       * <pre>
       * 计划关机动作, 位图: 00001 - 停定位采样; 00010 - 停环境采样; 00100 - 停行为采样; 01000 - 停BOOST; 10000 - 停通信
       * </pre>
       */
      public int getMask() {
        return mask_;
      }
      /**
       * <code>optional int32 Mask = 2 [default = 0];</code>
       *
       * <pre>
       * 计划关机动作, 位图: 00001 - 停定位采样; 00010 - 停环境采样; 00100 - 停行为采样; 01000 - 停BOOST; 10000 - 停通信
       * </pre>
       */
      public Builder setMask(int value) {
        bitField0_ |= 0x00000002;
        mask_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Mask = 2 [default = 0];</code>
       *
       * <pre>
       * 计划关机动作, 位图: 00001 - 停定位采样; 00010 - 停环境采样; 00100 - 停行为采样; 01000 - 停BOOST; 10000 - 停通信
       * </pre>
       */
      public Builder clearMask() {
        bitField0_ = (bitField0_ & ~0x00000002);
        mask_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<protocol_v1.V1Setting.TimeRange> time_ =
        java.util.Collections.emptyList();
      private void ensureTimeIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          time_ = new java.util.ArrayList<protocol_v1.V1Setting.TimeRange>(time_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protocol_v1.V1Setting.TimeRange, protocol_v1.V1Setting.TimeRange.Builder, protocol_v1.V1Setting.TimeRangeOrBuilder> timeBuilder_;

      /**
       * <code>repeated .protocol_v1.TimeRange Time = 3;</code>
       *
       * <pre>
       * 计划关机时间范围
       * </pre>
       */
      public java.util.List<protocol_v1.V1Setting.TimeRange> getTimeList() {
        if (timeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(time_);
        } else {
          return timeBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protocol_v1.TimeRange Time = 3;</code>
       *
       * <pre>
       * 计划关机时间范围
       * </pre>
       */
      public int getTimeCount() {
        if (timeBuilder_ == null) {
          return time_.size();
        } else {
          return timeBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protocol_v1.TimeRange Time = 3;</code>
       *
       * <pre>
       * 计划关机时间范围
       * </pre>
       */
      public protocol_v1.V1Setting.TimeRange getTime(int index) {
        if (timeBuilder_ == null) {
          return time_.get(index);
        } else {
          return timeBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protocol_v1.TimeRange Time = 3;</code>
       *
       * <pre>
       * 计划关机时间范围
       * </pre>
       */
      public Builder setTime(
          int index, protocol_v1.V1Setting.TimeRange value) {
        if (timeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTimeIsMutable();
          time_.set(index, value);
          onChanged();
        } else {
          timeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.TimeRange Time = 3;</code>
       *
       * <pre>
       * 计划关机时间范围
       * </pre>
       */
      public Builder setTime(
          int index, protocol_v1.V1Setting.TimeRange.Builder builderForValue) {
        if (timeBuilder_ == null) {
          ensureTimeIsMutable();
          time_.set(index, builderForValue.build());
          onChanged();
        } else {
          timeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.TimeRange Time = 3;</code>
       *
       * <pre>
       * 计划关机时间范围
       * </pre>
       */
      public Builder addTime(protocol_v1.V1Setting.TimeRange value) {
        if (timeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTimeIsMutable();
          time_.add(value);
          onChanged();
        } else {
          timeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.TimeRange Time = 3;</code>
       *
       * <pre>
       * 计划关机时间范围
       * </pre>
       */
      public Builder addTime(
          int index, protocol_v1.V1Setting.TimeRange value) {
        if (timeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTimeIsMutable();
          time_.add(index, value);
          onChanged();
        } else {
          timeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.TimeRange Time = 3;</code>
       *
       * <pre>
       * 计划关机时间范围
       * </pre>
       */
      public Builder addTime(
          protocol_v1.V1Setting.TimeRange.Builder builderForValue) {
        if (timeBuilder_ == null) {
          ensureTimeIsMutable();
          time_.add(builderForValue.build());
          onChanged();
        } else {
          timeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.TimeRange Time = 3;</code>
       *
       * <pre>
       * 计划关机时间范围
       * </pre>
       */
      public Builder addTime(
          int index, protocol_v1.V1Setting.TimeRange.Builder builderForValue) {
        if (timeBuilder_ == null) {
          ensureTimeIsMutable();
          time_.add(index, builderForValue.build());
          onChanged();
        } else {
          timeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.TimeRange Time = 3;</code>
       *
       * <pre>
       * 计划关机时间范围
       * </pre>
       */
      public Builder addAllTime(
          java.lang.Iterable<? extends protocol_v1.V1Setting.TimeRange> values) {
        if (timeBuilder_ == null) {
          ensureTimeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, time_);
          onChanged();
        } else {
          timeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.TimeRange Time = 3;</code>
       *
       * <pre>
       * 计划关机时间范围
       * </pre>
       */
      public Builder clearTime() {
        if (timeBuilder_ == null) {
          time_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          timeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.TimeRange Time = 3;</code>
       *
       * <pre>
       * 计划关机时间范围
       * </pre>
       */
      public Builder removeTime(int index) {
        if (timeBuilder_ == null) {
          ensureTimeIsMutable();
          time_.remove(index);
          onChanged();
        } else {
          timeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.TimeRange Time = 3;</code>
       *
       * <pre>
       * 计划关机时间范围
       * </pre>
       */
      public protocol_v1.V1Setting.TimeRange.Builder getTimeBuilder(
          int index) {
        return getTimeFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protocol_v1.TimeRange Time = 3;</code>
       *
       * <pre>
       * 计划关机时间范围
       * </pre>
       */
      public protocol_v1.V1Setting.TimeRangeOrBuilder getTimeOrBuilder(
          int index) {
        if (timeBuilder_ == null) {
          return time_.get(index);  } else {
          return timeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protocol_v1.TimeRange Time = 3;</code>
       *
       * <pre>
       * 计划关机时间范围
       * </pre>
       */
      public java.util.List<? extends protocol_v1.V1Setting.TimeRangeOrBuilder> 
           getTimeOrBuilderList() {
        if (timeBuilder_ != null) {
          return timeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(time_);
        }
      }
      /**
       * <code>repeated .protocol_v1.TimeRange Time = 3;</code>
       *
       * <pre>
       * 计划关机时间范围
       * </pre>
       */
      public protocol_v1.V1Setting.TimeRange.Builder addTimeBuilder() {
        return getTimeFieldBuilder().addBuilder(
            protocol_v1.V1Setting.TimeRange.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol_v1.TimeRange Time = 3;</code>
       *
       * <pre>
       * 计划关机时间范围
       * </pre>
       */
      public protocol_v1.V1Setting.TimeRange.Builder addTimeBuilder(
          int index) {
        return getTimeFieldBuilder().addBuilder(
            index, protocol_v1.V1Setting.TimeRange.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol_v1.TimeRange Time = 3;</code>
       *
       * <pre>
       * 计划关机时间范围
       * </pre>
       */
      public java.util.List<protocol_v1.V1Setting.TimeRange.Builder> 
           getTimeBuilderList() {
        return getTimeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protocol_v1.V1Setting.TimeRange, protocol_v1.V1Setting.TimeRange.Builder, protocol_v1.V1Setting.TimeRangeOrBuilder> 
          getTimeFieldBuilder() {
        if (timeBuilder_ == null) {
          timeBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protocol_v1.V1Setting.TimeRange, protocol_v1.V1Setting.TimeRange.Builder, protocol_v1.V1Setting.TimeRangeOrBuilder>(
                  time_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          time_ = null;
        }
        return timeBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:protocol_v1.PowerOffSetting)
    }

    // @@protoc_insertion_point(class_scope:protocol_v1.PowerOffSetting)
    private static final protocol_v1.V1Setting.PowerOffSetting DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol_v1.V1Setting.PowerOffSetting();
    }

    public static protocol_v1.V1Setting.PowerOffSetting getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<PowerOffSetting>
        PARSER = new com.google.protobuf.AbstractParser<PowerOffSetting>() {
      public PowerOffSetting parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new PowerOffSetting(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<PowerOffSetting> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PowerOffSetting> getParserForType() {
      return PARSER;
    }

    public protocol_v1.V1Setting.PowerOffSetting getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ArgosSettingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol_v1.ArgosSetting)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 Mode = 1 [default = 3];</code>
     *
     * <pre>
     * 0:未定义 1:周期模式 3:监控模式 4:触发模式 101:整点模式 102:自动计算整点模式
     * </pre>
     */
    boolean hasMode();
    /**
     * <code>optional int32 Mode = 1 [default = 3];</code>
     *
     * <pre>
     * 0:未定义 1:周期模式 3:监控模式 4:触发模式 101:整点模式 102:自动计算整点模式
     * </pre>
     */
    int getMode();

    /**
     * <code>optional .protocol_v1.ArgosSetting.IntervalMode Interval = 10;</code>
     *
     * <pre>
     * 1 同其他设备的周期模式
     * </pre>
     */
    boolean hasInterval();
    /**
     * <code>optional .protocol_v1.ArgosSetting.IntervalMode Interval = 10;</code>
     *
     * <pre>
     * 1 同其他设备的周期模式
     * </pre>
     */
    protocol_v1.V1Setting.ArgosSetting.IntervalMode getInterval();
    /**
     * <code>optional .protocol_v1.ArgosSetting.IntervalMode Interval = 10;</code>
     *
     * <pre>
     * 1 同其他设备的周期模式
     * </pre>
     */
    protocol_v1.V1Setting.ArgosSetting.IntervalModeOrBuilder getIntervalOrBuilder();

    /**
     * <code>optional .protocol_v1.ArgosSetting.MonitorMode Monitor = 11;</code>
     *
     * <pre>
     * 3 监控模式,发现卫星过顶就发送
     * </pre>
     */
    boolean hasMonitor();
    /**
     * <code>optional .protocol_v1.ArgosSetting.MonitorMode Monitor = 11;</code>
     *
     * <pre>
     * 3 监控模式,发现卫星过顶就发送
     * </pre>
     */
    protocol_v1.V1Setting.ArgosSetting.MonitorMode getMonitor();
    /**
     * <code>optional .protocol_v1.ArgosSetting.MonitorMode Monitor = 11;</code>
     *
     * <pre>
     * 3 监控模式,发现卫星过顶就发送
     * </pre>
     */
    protocol_v1.V1Setting.ArgosSetting.MonitorModeOrBuilder getMonitorOrBuilder();

    /**
     * <code>optional .protocol_v1.ArgosSetting.OnTimeMode OnTime = 12;</code>
     *
     * <pre>
     * 101 同其他设备的整点
     * </pre>
     */
    boolean hasOnTime();
    /**
     * <code>optional .protocol_v1.ArgosSetting.OnTimeMode OnTime = 12;</code>
     *
     * <pre>
     * 101 同其他设备的整点
     * </pre>
     */
    protocol_v1.V1Setting.ArgosSetting.OnTimeMode getOnTime();
    /**
     * <code>optional .protocol_v1.ArgosSetting.OnTimeMode OnTime = 12;</code>
     *
     * <pre>
     * 101 同其他设备的整点
     * </pre>
     */
    protocol_v1.V1Setting.ArgosSetting.OnTimeModeOrBuilder getOnTimeOrBuilder();

    /**
     * <code>optional .protocol_v1.ArgosSetting.AutoOnTimeMode AutoOnTime = 13;</code>
     *
     * <pre>
     * 102 自动计算整点模式
     * </pre>
     */
    boolean hasAutoOnTime();
    /**
     * <code>optional .protocol_v1.ArgosSetting.AutoOnTimeMode AutoOnTime = 13;</code>
     *
     * <pre>
     * 102 自动计算整点模式
     * </pre>
     */
    protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode getAutoOnTime();
    /**
     * <code>optional .protocol_v1.ArgosSetting.AutoOnTimeMode AutoOnTime = 13;</code>
     *
     * <pre>
     * 102 自动计算整点模式
     * </pre>
     */
    protocol_v1.V1Setting.ArgosSetting.AutoOnTimeModeOrBuilder getAutoOnTimeOrBuilder();

    /**
     * <code>optional .protocol_v1.VoltageBoostLevel VoltageBoost = 20;</code>
     *
     * <pre>
     * Argos boost,仅支持1级，其中的采样频率无效，通信频率取值范围：45~3600s
     * </pre>
     */
    boolean hasVoltageBoost();
    /**
     * <code>optional .protocol_v1.VoltageBoostLevel VoltageBoost = 20;</code>
     *
     * <pre>
     * Argos boost,仅支持1级，其中的采样频率无效，通信频率取值范围：45~3600s
     * </pre>
     */
    protocol_v1.V1Setting.VoltageBoostLevel getVoltageBoost();
    /**
     * <code>optional .protocol_v1.VoltageBoostLevel VoltageBoost = 20;</code>
     *
     * <pre>
     * Argos boost,仅支持1级，其中的采样频率无效，通信频率取值范围：45~3600s
     * </pre>
     */
    protocol_v1.V1Setting.VoltageBoostLevelOrBuilder getVoltageBoostOrBuilder();

    /**
     * <code>optional .protocol_v1.ArgosSetting.DataModeConfig DataMode = 31;</code>
     *
     * <pre>
     * 数据模式
     * </pre>
     */
    boolean hasDataMode();
    /**
     * <code>optional .protocol_v1.ArgosSetting.DataModeConfig DataMode = 31;</code>
     *
     * <pre>
     * 数据模式
     * </pre>
     */
    protocol_v1.V1Setting.ArgosSetting.DataModeConfig getDataMode();
    /**
     * <code>optional .protocol_v1.ArgosSetting.DataModeConfig DataMode = 31;</code>
     *
     * <pre>
     * 数据模式
     * </pre>
     */
    protocol_v1.V1Setting.ArgosSetting.DataModeConfigOrBuilder getDataModeOrBuilder();
  }
  /**
   * Protobuf type {@code protocol_v1.ArgosSetting}
   */
  public  static final class ArgosSetting extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protocol_v1.ArgosSetting)
      ArgosSettingOrBuilder {
    // Use ArgosSetting.newBuilder() to construct.
    private ArgosSetting(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ArgosSetting() {
      mode_ = 3;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ArgosSetting(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              mode_ = input.readInt32();
              break;
            }
            case 82: {
              protocol_v1.V1Setting.ArgosSetting.IntervalMode.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = interval_.toBuilder();
              }
              interval_ = input.readMessage(protocol_v1.V1Setting.ArgosSetting.IntervalMode.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(interval_);
                interval_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 90: {
              protocol_v1.V1Setting.ArgosSetting.MonitorMode.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = monitor_.toBuilder();
              }
              monitor_ = input.readMessage(protocol_v1.V1Setting.ArgosSetting.MonitorMode.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(monitor_);
                monitor_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 98: {
              protocol_v1.V1Setting.ArgosSetting.OnTimeMode.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = onTime_.toBuilder();
              }
              onTime_ = input.readMessage(protocol_v1.V1Setting.ArgosSetting.OnTimeMode.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(onTime_);
                onTime_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 106: {
              protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = autoOnTime_.toBuilder();
              }
              autoOnTime_ = input.readMessage(protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(autoOnTime_);
                autoOnTime_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 162: {
              protocol_v1.V1Setting.VoltageBoostLevel.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = voltageBoost_.toBuilder();
              }
              voltageBoost_ = input.readMessage(protocol_v1.V1Setting.VoltageBoostLevel.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(voltageBoost_);
                voltageBoost_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 250: {
              protocol_v1.V1Setting.ArgosSetting.DataModeConfig.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = dataMode_.toBuilder();
              }
              dataMode_ = input.readMessage(protocol_v1.V1Setting.ArgosSetting.DataModeConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dataMode_);
                dataMode_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol_v1.V1Setting.internal_static_protocol_v1_ArgosSetting_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol_v1.V1Setting.internal_static_protocol_v1_ArgosSetting_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol_v1.V1Setting.ArgosSetting.class, protocol_v1.V1Setting.ArgosSetting.Builder.class);
    }

    public interface IntervalModeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:protocol_v1.ArgosSetting.IntervalMode)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 Interval = 1 [default = 14400];</code>
       *
       * <pre>
       * argos网络发送周期, 单位：s, 取值范围：3600~3600*24（24小时）, 默认4小时(14400s)
       * </pre>
       */
      boolean hasInterval();
      /**
       * <code>optional int32 Interval = 1 [default = 14400];</code>
       *
       * <pre>
       * argos网络发送周期, 单位：s, 取值范围：3600~3600*24（24小时）, 默认4小时(14400s)
       * </pre>
       */
      int getInterval();

      /**
       * <code>optional int32 Frequency = 2 [default = 90];</code>
       *
       * <pre>
       * 重复包发送间隔, 单位s,取值范围：45~3600, 默认90
       * </pre>
       */
      boolean hasFrequency();
      /**
       * <code>optional int32 Frequency = 2 [default = 90];</code>
       *
       * <pre>
       * 重复包发送间隔, 单位s,取值范围：45~3600, 默认90
       * </pre>
       */
      int getFrequency();

      /**
       * <code>optional int32 DutyCycle = 3 [default = 3600];</code>
       *
       * <pre>
       * 发送占空比, 单位秒, 发送持续多久, 小于等于interval
       * </pre>
       */
      boolean hasDutyCycle();
      /**
       * <code>optional int32 DutyCycle = 3 [default = 3600];</code>
       *
       * <pre>
       * 发送占空比, 单位秒, 发送持续多久, 小于等于interval
       * </pre>
       */
      int getDutyCycle();
    }
    /**
     * Protobuf type {@code protocol_v1.ArgosSetting.IntervalMode}
     */
    public  static final class IntervalMode extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:protocol_v1.ArgosSetting.IntervalMode)
        IntervalModeOrBuilder {
      // Use IntervalMode.newBuilder() to construct.
      private IntervalMode(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private IntervalMode() {
        interval_ = 14400;
        frequency_ = 90;
        dutyCycle_ = 3600;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private IntervalMode(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                interval_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                frequency_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                dutyCycle_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_ArgosSetting_IntervalMode_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_ArgosSetting_IntervalMode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol_v1.V1Setting.ArgosSetting.IntervalMode.class, protocol_v1.V1Setting.ArgosSetting.IntervalMode.Builder.class);
      }

      private int bitField0_;
      public static final int INTERVAL_FIELD_NUMBER = 1;
      private int interval_;
      /**
       * <code>optional int32 Interval = 1 [default = 14400];</code>
       *
       * <pre>
       * argos网络发送周期, 单位：s, 取值范围：3600~3600*24（24小时）, 默认4小时(14400s)
       * </pre>
       */
      public boolean hasInterval() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 Interval = 1 [default = 14400];</code>
       *
       * <pre>
       * argos网络发送周期, 单位：s, 取值范围：3600~3600*24（24小时）, 默认4小时(14400s)
       * </pre>
       */
      public int getInterval() {
        return interval_;
      }

      public static final int FREQUENCY_FIELD_NUMBER = 2;
      private int frequency_;
      /**
       * <code>optional int32 Frequency = 2 [default = 90];</code>
       *
       * <pre>
       * 重复包发送间隔, 单位s,取值范围：45~3600, 默认90
       * </pre>
       */
      public boolean hasFrequency() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 Frequency = 2 [default = 90];</code>
       *
       * <pre>
       * 重复包发送间隔, 单位s,取值范围：45~3600, 默认90
       * </pre>
       */
      public int getFrequency() {
        return frequency_;
      }

      public static final int DUTYCYCLE_FIELD_NUMBER = 3;
      private int dutyCycle_;
      /**
       * <code>optional int32 DutyCycle = 3 [default = 3600];</code>
       *
       * <pre>
       * 发送占空比, 单位秒, 发送持续多久, 小于等于interval
       * </pre>
       */
      public boolean hasDutyCycle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 DutyCycle = 3 [default = 3600];</code>
       *
       * <pre>
       * 发送占空比, 单位秒, 发送持续多久, 小于等于interval
       * </pre>
       */
      public int getDutyCycle() {
        return dutyCycle_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, interval_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, frequency_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, dutyCycle_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, interval_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, frequency_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, dutyCycle_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static protocol_v1.V1Setting.ArgosSetting.IntervalMode parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static protocol_v1.V1Setting.ArgosSetting.IntervalMode parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static protocol_v1.V1Setting.ArgosSetting.IntervalMode parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static protocol_v1.V1Setting.ArgosSetting.IntervalMode parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static protocol_v1.V1Setting.ArgosSetting.IntervalMode parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static protocol_v1.V1Setting.ArgosSetting.IntervalMode parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static protocol_v1.V1Setting.ArgosSetting.IntervalMode parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static protocol_v1.V1Setting.ArgosSetting.IntervalMode parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static protocol_v1.V1Setting.ArgosSetting.IntervalMode parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static protocol_v1.V1Setting.ArgosSetting.IntervalMode parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(protocol_v1.V1Setting.ArgosSetting.IntervalMode prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code protocol_v1.ArgosSetting.IntervalMode}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:protocol_v1.ArgosSetting.IntervalMode)
          protocol_v1.V1Setting.ArgosSetting.IntervalModeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return protocol_v1.V1Setting.internal_static_protocol_v1_ArgosSetting_IntervalMode_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return protocol_v1.V1Setting.internal_static_protocol_v1_ArgosSetting_IntervalMode_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  protocol_v1.V1Setting.ArgosSetting.IntervalMode.class, protocol_v1.V1Setting.ArgosSetting.IntervalMode.Builder.class);
        }

        // Construct using protocol_v1.V1Setting.ArgosSetting.IntervalMode.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          interval_ = 14400;
          bitField0_ = (bitField0_ & ~0x00000001);
          frequency_ = 90;
          bitField0_ = (bitField0_ & ~0x00000002);
          dutyCycle_ = 3600;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return protocol_v1.V1Setting.internal_static_protocol_v1_ArgosSetting_IntervalMode_descriptor;
        }

        public protocol_v1.V1Setting.ArgosSetting.IntervalMode getDefaultInstanceForType() {
          return protocol_v1.V1Setting.ArgosSetting.IntervalMode.getDefaultInstance();
        }

        public protocol_v1.V1Setting.ArgosSetting.IntervalMode build() {
          protocol_v1.V1Setting.ArgosSetting.IntervalMode result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public protocol_v1.V1Setting.ArgosSetting.IntervalMode buildPartial() {
          protocol_v1.V1Setting.ArgosSetting.IntervalMode result = new protocol_v1.V1Setting.ArgosSetting.IntervalMode(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.interval_ = interval_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.frequency_ = frequency_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.dutyCycle_ = dutyCycle_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof protocol_v1.V1Setting.ArgosSetting.IntervalMode) {
            return mergeFrom((protocol_v1.V1Setting.ArgosSetting.IntervalMode)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(protocol_v1.V1Setting.ArgosSetting.IntervalMode other) {
          if (other == protocol_v1.V1Setting.ArgosSetting.IntervalMode.getDefaultInstance()) return this;
          if (other.hasInterval()) {
            setInterval(other.getInterval());
          }
          if (other.hasFrequency()) {
            setFrequency(other.getFrequency());
          }
          if (other.hasDutyCycle()) {
            setDutyCycle(other.getDutyCycle());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          protocol_v1.V1Setting.ArgosSetting.IntervalMode parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (protocol_v1.V1Setting.ArgosSetting.IntervalMode) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int interval_ = 14400;
        /**
         * <code>optional int32 Interval = 1 [default = 14400];</code>
         *
         * <pre>
         * argos网络发送周期, 单位：s, 取值范围：3600~3600*24（24小时）, 默认4小时(14400s)
         * </pre>
         */
        public boolean hasInterval() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 Interval = 1 [default = 14400];</code>
         *
         * <pre>
         * argos网络发送周期, 单位：s, 取值范围：3600~3600*24（24小时）, 默认4小时(14400s)
         * </pre>
         */
        public int getInterval() {
          return interval_;
        }
        /**
         * <code>optional int32 Interval = 1 [default = 14400];</code>
         *
         * <pre>
         * argos网络发送周期, 单位：s, 取值范围：3600~3600*24（24小时）, 默认4小时(14400s)
         * </pre>
         */
        public Builder setInterval(int value) {
          bitField0_ |= 0x00000001;
          interval_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 Interval = 1 [default = 14400];</code>
         *
         * <pre>
         * argos网络发送周期, 单位：s, 取值范围：3600~3600*24（24小时）, 默认4小时(14400s)
         * </pre>
         */
        public Builder clearInterval() {
          bitField0_ = (bitField0_ & ~0x00000001);
          interval_ = 14400;
          onChanged();
          return this;
        }

        private int frequency_ = 90;
        /**
         * <code>optional int32 Frequency = 2 [default = 90];</code>
         *
         * <pre>
         * 重复包发送间隔, 单位s,取值范围：45~3600, 默认90
         * </pre>
         */
        public boolean hasFrequency() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 Frequency = 2 [default = 90];</code>
         *
         * <pre>
         * 重复包发送间隔, 单位s,取值范围：45~3600, 默认90
         * </pre>
         */
        public int getFrequency() {
          return frequency_;
        }
        /**
         * <code>optional int32 Frequency = 2 [default = 90];</code>
         *
         * <pre>
         * 重复包发送间隔, 单位s,取值范围：45~3600, 默认90
         * </pre>
         */
        public Builder setFrequency(int value) {
          bitField0_ |= 0x00000002;
          frequency_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 Frequency = 2 [default = 90];</code>
         *
         * <pre>
         * 重复包发送间隔, 单位s,取值范围：45~3600, 默认90
         * </pre>
         */
        public Builder clearFrequency() {
          bitField0_ = (bitField0_ & ~0x00000002);
          frequency_ = 90;
          onChanged();
          return this;
        }

        private int dutyCycle_ = 3600;
        /**
         * <code>optional int32 DutyCycle = 3 [default = 3600];</code>
         *
         * <pre>
         * 发送占空比, 单位秒, 发送持续多久, 小于等于interval
         * </pre>
         */
        public boolean hasDutyCycle() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 DutyCycle = 3 [default = 3600];</code>
         *
         * <pre>
         * 发送占空比, 单位秒, 发送持续多久, 小于等于interval
         * </pre>
         */
        public int getDutyCycle() {
          return dutyCycle_;
        }
        /**
         * <code>optional int32 DutyCycle = 3 [default = 3600];</code>
         *
         * <pre>
         * 发送占空比, 单位秒, 发送持续多久, 小于等于interval
         * </pre>
         */
        public Builder setDutyCycle(int value) {
          bitField0_ |= 0x00000004;
          dutyCycle_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 DutyCycle = 3 [default = 3600];</code>
         *
         * <pre>
         * 发送占空比, 单位秒, 发送持续多久, 小于等于interval
         * </pre>
         */
        public Builder clearDutyCycle() {
          bitField0_ = (bitField0_ & ~0x00000004);
          dutyCycle_ = 3600;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:protocol_v1.ArgosSetting.IntervalMode)
      }

      // @@protoc_insertion_point(class_scope:protocol_v1.ArgosSetting.IntervalMode)
      private static final protocol_v1.V1Setting.ArgosSetting.IntervalMode DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new protocol_v1.V1Setting.ArgosSetting.IntervalMode();
      }

      public static protocol_v1.V1Setting.ArgosSetting.IntervalMode getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<IntervalMode>
          PARSER = new com.google.protobuf.AbstractParser<IntervalMode>() {
        public IntervalMode parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new IntervalMode(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<IntervalMode> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<IntervalMode> getParserForType() {
        return PARSER;
      }

      public protocol_v1.V1Setting.ArgosSetting.IntervalMode getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface DataModeConfigOrBuilder extends
        // @@protoc_insertion_point(interface_extends:protocol_v1.ArgosSetting.DataModeConfig)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 GpsRate = 1 [default = 5];</code>
       *
       * <pre>
       * DataRateGps与DataRateSummary结合，表示每发送DataRateGps包GPS数据后发送DataRateSummary包summary数据
       * </pre>
       */
      boolean hasGpsRate();
      /**
       * <code>optional uint32 GpsRate = 1 [default = 5];</code>
       *
       * <pre>
       * DataRateGps与DataRateSummary结合，表示每发送DataRateGps包GPS数据后发送DataRateSummary包summary数据
       * </pre>
       */
      int getGpsRate();

      /**
       * <code>optional uint32 SummaryRate = 2 [default = 1];</code>
       *
       * <pre>
       * 发送数据类型占比：summary数据包数，取值范围：0~255，为0时不会穿summary数据。
       * </pre>
       */
      boolean hasSummaryRate();
      /**
       * <code>optional uint32 SummaryRate = 2 [default = 1];</code>
       *
       * <pre>
       * 发送数据类型占比：summary数据包数，取值范围：0~255，为0时不会穿summary数据。
       * </pre>
       */
      int getSummaryRate();

      /**
       * <code>optional uint32 GpsHistoryCount = 3 [default = 10];</code>
       *
       * <pre>
       * 历史数据只有在数据类型占比不为0时有效，即：DataRateGps不为0时GpsHistoryCount有效，DataRateSummary不为0时SummaryHistoryCount有效
       * </pre>
       */
      boolean hasGpsHistoryCount();
      /**
       * <code>optional uint32 GpsHistoryCount = 3 [default = 10];</code>
       *
       * <pre>
       * 历史数据只有在数据类型占比不为0时有效，即：DataRateGps不为0时GpsHistoryCount有效，DataRateSummary不为0时SummaryHistoryCount有效
       * </pre>
       */
      int getGpsHistoryCount();

      /**
       * <code>optional uint32 SummaryHistoryCount = 4 [default = 5];</code>
       *
       * <pre>
       * 从当前时间开始，最大发送多少包summary历史数据，取值范围：0~255，为0时只回传最新数据
       * </pre>
       */
      boolean hasSummaryHistoryCount();
      /**
       * <code>optional uint32 SummaryHistoryCount = 4 [default = 5];</code>
       *
       * <pre>
       * 从当前时间开始，最大发送多少包summary历史数据，取值范围：0~255，为0时只回传最新数据
       * </pre>
       */
      int getSummaryHistoryCount();
    }
    /**
     * Protobuf type {@code protocol_v1.ArgosSetting.DataModeConfig}
     */
    public  static final class DataModeConfig extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:protocol_v1.ArgosSetting.DataModeConfig)
        DataModeConfigOrBuilder {
      // Use DataModeConfig.newBuilder() to construct.
      private DataModeConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private DataModeConfig() {
        gpsRate_ = 5;
        summaryRate_ = 1;
        gpsHistoryCount_ = 10;
        summaryHistoryCount_ = 5;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private DataModeConfig(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                gpsRate_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                summaryRate_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                gpsHistoryCount_ = input.readUInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                summaryHistoryCount_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_ArgosSetting_DataModeConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_ArgosSetting_DataModeConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol_v1.V1Setting.ArgosSetting.DataModeConfig.class, protocol_v1.V1Setting.ArgosSetting.DataModeConfig.Builder.class);
      }

      private int bitField0_;
      public static final int GPSRATE_FIELD_NUMBER = 1;
      private int gpsRate_;
      /**
       * <code>optional uint32 GpsRate = 1 [default = 5];</code>
       *
       * <pre>
       * DataRateGps与DataRateSummary结合，表示每发送DataRateGps包GPS数据后发送DataRateSummary包summary数据
       * </pre>
       */
      public boolean hasGpsRate() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 GpsRate = 1 [default = 5];</code>
       *
       * <pre>
       * DataRateGps与DataRateSummary结合，表示每发送DataRateGps包GPS数据后发送DataRateSummary包summary数据
       * </pre>
       */
      public int getGpsRate() {
        return gpsRate_;
      }

      public static final int SUMMARYRATE_FIELD_NUMBER = 2;
      private int summaryRate_;
      /**
       * <code>optional uint32 SummaryRate = 2 [default = 1];</code>
       *
       * <pre>
       * 发送数据类型占比：summary数据包数，取值范围：0~255，为0时不会穿summary数据。
       * </pre>
       */
      public boolean hasSummaryRate() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 SummaryRate = 2 [default = 1];</code>
       *
       * <pre>
       * 发送数据类型占比：summary数据包数，取值范围：0~255，为0时不会穿summary数据。
       * </pre>
       */
      public int getSummaryRate() {
        return summaryRate_;
      }

      public static final int GPSHISTORYCOUNT_FIELD_NUMBER = 3;
      private int gpsHistoryCount_;
      /**
       * <code>optional uint32 GpsHistoryCount = 3 [default = 10];</code>
       *
       * <pre>
       * 历史数据只有在数据类型占比不为0时有效，即：DataRateGps不为0时GpsHistoryCount有效，DataRateSummary不为0时SummaryHistoryCount有效
       * </pre>
       */
      public boolean hasGpsHistoryCount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 GpsHistoryCount = 3 [default = 10];</code>
       *
       * <pre>
       * 历史数据只有在数据类型占比不为0时有效，即：DataRateGps不为0时GpsHistoryCount有效，DataRateSummary不为0时SummaryHistoryCount有效
       * </pre>
       */
      public int getGpsHistoryCount() {
        return gpsHistoryCount_;
      }

      public static final int SUMMARYHISTORYCOUNT_FIELD_NUMBER = 4;
      private int summaryHistoryCount_;
      /**
       * <code>optional uint32 SummaryHistoryCount = 4 [default = 5];</code>
       *
       * <pre>
       * 从当前时间开始，最大发送多少包summary历史数据，取值范围：0~255，为0时只回传最新数据
       * </pre>
       */
      public boolean hasSummaryHistoryCount() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 SummaryHistoryCount = 4 [default = 5];</code>
       *
       * <pre>
       * 从当前时间开始，最大发送多少包summary历史数据，取值范围：0~255，为0时只回传最新数据
       * </pre>
       */
      public int getSummaryHistoryCount() {
        return summaryHistoryCount_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, gpsRate_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, summaryRate_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, gpsHistoryCount_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(4, summaryHistoryCount_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, gpsRate_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, summaryRate_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, gpsHistoryCount_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, summaryHistoryCount_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static protocol_v1.V1Setting.ArgosSetting.DataModeConfig parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static protocol_v1.V1Setting.ArgosSetting.DataModeConfig parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static protocol_v1.V1Setting.ArgosSetting.DataModeConfig parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static protocol_v1.V1Setting.ArgosSetting.DataModeConfig parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static protocol_v1.V1Setting.ArgosSetting.DataModeConfig parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static protocol_v1.V1Setting.ArgosSetting.DataModeConfig parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static protocol_v1.V1Setting.ArgosSetting.DataModeConfig parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static protocol_v1.V1Setting.ArgosSetting.DataModeConfig parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static protocol_v1.V1Setting.ArgosSetting.DataModeConfig parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static protocol_v1.V1Setting.ArgosSetting.DataModeConfig parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(protocol_v1.V1Setting.ArgosSetting.DataModeConfig prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code protocol_v1.ArgosSetting.DataModeConfig}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:protocol_v1.ArgosSetting.DataModeConfig)
          protocol_v1.V1Setting.ArgosSetting.DataModeConfigOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return protocol_v1.V1Setting.internal_static_protocol_v1_ArgosSetting_DataModeConfig_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return protocol_v1.V1Setting.internal_static_protocol_v1_ArgosSetting_DataModeConfig_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  protocol_v1.V1Setting.ArgosSetting.DataModeConfig.class, protocol_v1.V1Setting.ArgosSetting.DataModeConfig.Builder.class);
        }

        // Construct using protocol_v1.V1Setting.ArgosSetting.DataModeConfig.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          gpsRate_ = 5;
          bitField0_ = (bitField0_ & ~0x00000001);
          summaryRate_ = 1;
          bitField0_ = (bitField0_ & ~0x00000002);
          gpsHistoryCount_ = 10;
          bitField0_ = (bitField0_ & ~0x00000004);
          summaryHistoryCount_ = 5;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return protocol_v1.V1Setting.internal_static_protocol_v1_ArgosSetting_DataModeConfig_descriptor;
        }

        public protocol_v1.V1Setting.ArgosSetting.DataModeConfig getDefaultInstanceForType() {
          return protocol_v1.V1Setting.ArgosSetting.DataModeConfig.getDefaultInstance();
        }

        public protocol_v1.V1Setting.ArgosSetting.DataModeConfig build() {
          protocol_v1.V1Setting.ArgosSetting.DataModeConfig result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public protocol_v1.V1Setting.ArgosSetting.DataModeConfig buildPartial() {
          protocol_v1.V1Setting.ArgosSetting.DataModeConfig result = new protocol_v1.V1Setting.ArgosSetting.DataModeConfig(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.gpsRate_ = gpsRate_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.summaryRate_ = summaryRate_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.gpsHistoryCount_ = gpsHistoryCount_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.summaryHistoryCount_ = summaryHistoryCount_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof protocol_v1.V1Setting.ArgosSetting.DataModeConfig) {
            return mergeFrom((protocol_v1.V1Setting.ArgosSetting.DataModeConfig)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(protocol_v1.V1Setting.ArgosSetting.DataModeConfig other) {
          if (other == protocol_v1.V1Setting.ArgosSetting.DataModeConfig.getDefaultInstance()) return this;
          if (other.hasGpsRate()) {
            setGpsRate(other.getGpsRate());
          }
          if (other.hasSummaryRate()) {
            setSummaryRate(other.getSummaryRate());
          }
          if (other.hasGpsHistoryCount()) {
            setGpsHistoryCount(other.getGpsHistoryCount());
          }
          if (other.hasSummaryHistoryCount()) {
            setSummaryHistoryCount(other.getSummaryHistoryCount());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          protocol_v1.V1Setting.ArgosSetting.DataModeConfig parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (protocol_v1.V1Setting.ArgosSetting.DataModeConfig) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int gpsRate_ = 5;
        /**
         * <code>optional uint32 GpsRate = 1 [default = 5];</code>
         *
         * <pre>
         * DataRateGps与DataRateSummary结合，表示每发送DataRateGps包GPS数据后发送DataRateSummary包summary数据
         * </pre>
         */
        public boolean hasGpsRate() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 GpsRate = 1 [default = 5];</code>
         *
         * <pre>
         * DataRateGps与DataRateSummary结合，表示每发送DataRateGps包GPS数据后发送DataRateSummary包summary数据
         * </pre>
         */
        public int getGpsRate() {
          return gpsRate_;
        }
        /**
         * <code>optional uint32 GpsRate = 1 [default = 5];</code>
         *
         * <pre>
         * DataRateGps与DataRateSummary结合，表示每发送DataRateGps包GPS数据后发送DataRateSummary包summary数据
         * </pre>
         */
        public Builder setGpsRate(int value) {
          bitField0_ |= 0x00000001;
          gpsRate_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 GpsRate = 1 [default = 5];</code>
         *
         * <pre>
         * DataRateGps与DataRateSummary结合，表示每发送DataRateGps包GPS数据后发送DataRateSummary包summary数据
         * </pre>
         */
        public Builder clearGpsRate() {
          bitField0_ = (bitField0_ & ~0x00000001);
          gpsRate_ = 5;
          onChanged();
          return this;
        }

        private int summaryRate_ = 1;
        /**
         * <code>optional uint32 SummaryRate = 2 [default = 1];</code>
         *
         * <pre>
         * 发送数据类型占比：summary数据包数，取值范围：0~255，为0时不会穿summary数据。
         * </pre>
         */
        public boolean hasSummaryRate() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 SummaryRate = 2 [default = 1];</code>
         *
         * <pre>
         * 发送数据类型占比：summary数据包数，取值范围：0~255，为0时不会穿summary数据。
         * </pre>
         */
        public int getSummaryRate() {
          return summaryRate_;
        }
        /**
         * <code>optional uint32 SummaryRate = 2 [default = 1];</code>
         *
         * <pre>
         * 发送数据类型占比：summary数据包数，取值范围：0~255，为0时不会穿summary数据。
         * </pre>
         */
        public Builder setSummaryRate(int value) {
          bitField0_ |= 0x00000002;
          summaryRate_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 SummaryRate = 2 [default = 1];</code>
         *
         * <pre>
         * 发送数据类型占比：summary数据包数，取值范围：0~255，为0时不会穿summary数据。
         * </pre>
         */
        public Builder clearSummaryRate() {
          bitField0_ = (bitField0_ & ~0x00000002);
          summaryRate_ = 1;
          onChanged();
          return this;
        }

        private int gpsHistoryCount_ = 10;
        /**
         * <code>optional uint32 GpsHistoryCount = 3 [default = 10];</code>
         *
         * <pre>
         * 历史数据只有在数据类型占比不为0时有效，即：DataRateGps不为0时GpsHistoryCount有效，DataRateSummary不为0时SummaryHistoryCount有效
         * </pre>
         */
        public boolean hasGpsHistoryCount() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 GpsHistoryCount = 3 [default = 10];</code>
         *
         * <pre>
         * 历史数据只有在数据类型占比不为0时有效，即：DataRateGps不为0时GpsHistoryCount有效，DataRateSummary不为0时SummaryHistoryCount有效
         * </pre>
         */
        public int getGpsHistoryCount() {
          return gpsHistoryCount_;
        }
        /**
         * <code>optional uint32 GpsHistoryCount = 3 [default = 10];</code>
         *
         * <pre>
         * 历史数据只有在数据类型占比不为0时有效，即：DataRateGps不为0时GpsHistoryCount有效，DataRateSummary不为0时SummaryHistoryCount有效
         * </pre>
         */
        public Builder setGpsHistoryCount(int value) {
          bitField0_ |= 0x00000004;
          gpsHistoryCount_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 GpsHistoryCount = 3 [default = 10];</code>
         *
         * <pre>
         * 历史数据只有在数据类型占比不为0时有效，即：DataRateGps不为0时GpsHistoryCount有效，DataRateSummary不为0时SummaryHistoryCount有效
         * </pre>
         */
        public Builder clearGpsHistoryCount() {
          bitField0_ = (bitField0_ & ~0x00000004);
          gpsHistoryCount_ = 10;
          onChanged();
          return this;
        }

        private int summaryHistoryCount_ = 5;
        /**
         * <code>optional uint32 SummaryHistoryCount = 4 [default = 5];</code>
         *
         * <pre>
         * 从当前时间开始，最大发送多少包summary历史数据，取值范围：0~255，为0时只回传最新数据
         * </pre>
         */
        public boolean hasSummaryHistoryCount() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint32 SummaryHistoryCount = 4 [default = 5];</code>
         *
         * <pre>
         * 从当前时间开始，最大发送多少包summary历史数据，取值范围：0~255，为0时只回传最新数据
         * </pre>
         */
        public int getSummaryHistoryCount() {
          return summaryHistoryCount_;
        }
        /**
         * <code>optional uint32 SummaryHistoryCount = 4 [default = 5];</code>
         *
         * <pre>
         * 从当前时间开始，最大发送多少包summary历史数据，取值范围：0~255，为0时只回传最新数据
         * </pre>
         */
        public Builder setSummaryHistoryCount(int value) {
          bitField0_ |= 0x00000008;
          summaryHistoryCount_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 SummaryHistoryCount = 4 [default = 5];</code>
         *
         * <pre>
         * 从当前时间开始，最大发送多少包summary历史数据，取值范围：0~255，为0时只回传最新数据
         * </pre>
         */
        public Builder clearSummaryHistoryCount() {
          bitField0_ = (bitField0_ & ~0x00000008);
          summaryHistoryCount_ = 5;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:protocol_v1.ArgosSetting.DataModeConfig)
      }

      // @@protoc_insertion_point(class_scope:protocol_v1.ArgosSetting.DataModeConfig)
      private static final protocol_v1.V1Setting.ArgosSetting.DataModeConfig DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new protocol_v1.V1Setting.ArgosSetting.DataModeConfig();
      }

      public static protocol_v1.V1Setting.ArgosSetting.DataModeConfig getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<DataModeConfig>
          PARSER = new com.google.protobuf.AbstractParser<DataModeConfig>() {
        public DataModeConfig parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new DataModeConfig(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<DataModeConfig> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<DataModeConfig> getParserForType() {
        return PARSER;
      }

      public protocol_v1.V1Setting.ArgosSetting.DataModeConfig getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface MonitorModeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:protocol_v1.ArgosSetting.MonitorMode)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 Frequency = 1 [default = 90];</code>
       *
       * <pre>
       * 重复报发送间隔, 单位s,取值范围：45~300, 默认90
       * </pre>
       */
      boolean hasFrequency();
      /**
       * <code>optional int32 Frequency = 1 [default = 90];</code>
       *
       * <pre>
       * 重复报发送间隔, 单位s,取值范围：45~300, 默认90
       * </pre>
       */
      int getFrequency();

      /**
       * <code>optional uint32 MaxTxCountPerPass = 2 [default = 8];</code>
       *
       * <pre>
       * 每一次卫星过顶时最大发送数量,取值范围：1~255
       * </pre>
       */
      boolean hasMaxTxCountPerPass();
      /**
       * <code>optional uint32 MaxTxCountPerPass = 2 [default = 8];</code>
       *
       * <pre>
       * 每一次卫星过顶时最大发送数量,取值范围：1~255
       * </pre>
       */
      int getMaxTxCountPerPass();

      /**
       * <code>optional uint32 MaxRxCountPerPass = 3 [default = 4];</code>
       *
       * <pre>
       * 每一次卫星过顶时最大接收数量，取值范围：1~255
       * </pre>
       */
      boolean hasMaxRxCountPerPass();
      /**
       * <code>optional uint32 MaxRxCountPerPass = 3 [default = 4];</code>
       *
       * <pre>
       * 每一次卫星过顶时最大接收数量，取值范围：1~255
       * </pre>
       */
      int getMaxRxCountPerPass();
    }
    /**
     * Protobuf type {@code protocol_v1.ArgosSetting.MonitorMode}
     */
    public  static final class MonitorMode extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:protocol_v1.ArgosSetting.MonitorMode)
        MonitorModeOrBuilder {
      // Use MonitorMode.newBuilder() to construct.
      private MonitorMode(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private MonitorMode() {
        frequency_ = 90;
        maxTxCountPerPass_ = 8;
        maxRxCountPerPass_ = 4;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private MonitorMode(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                frequency_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                maxTxCountPerPass_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                maxRxCountPerPass_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_ArgosSetting_MonitorMode_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_ArgosSetting_MonitorMode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol_v1.V1Setting.ArgosSetting.MonitorMode.class, protocol_v1.V1Setting.ArgosSetting.MonitorMode.Builder.class);
      }

      private int bitField0_;
      public static final int FREQUENCY_FIELD_NUMBER = 1;
      private int frequency_;
      /**
       * <code>optional int32 Frequency = 1 [default = 90];</code>
       *
       * <pre>
       * 重复报发送间隔, 单位s,取值范围：45~300, 默认90
       * </pre>
       */
      public boolean hasFrequency() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 Frequency = 1 [default = 90];</code>
       *
       * <pre>
       * 重复报发送间隔, 单位s,取值范围：45~300, 默认90
       * </pre>
       */
      public int getFrequency() {
        return frequency_;
      }

      public static final int MAXTXCOUNTPERPASS_FIELD_NUMBER = 2;
      private int maxTxCountPerPass_;
      /**
       * <code>optional uint32 MaxTxCountPerPass = 2 [default = 8];</code>
       *
       * <pre>
       * 每一次卫星过顶时最大发送数量,取值范围：1~255
       * </pre>
       */
      public boolean hasMaxTxCountPerPass() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 MaxTxCountPerPass = 2 [default = 8];</code>
       *
       * <pre>
       * 每一次卫星过顶时最大发送数量,取值范围：1~255
       * </pre>
       */
      public int getMaxTxCountPerPass() {
        return maxTxCountPerPass_;
      }

      public static final int MAXRXCOUNTPERPASS_FIELD_NUMBER = 3;
      private int maxRxCountPerPass_;
      /**
       * <code>optional uint32 MaxRxCountPerPass = 3 [default = 4];</code>
       *
       * <pre>
       * 每一次卫星过顶时最大接收数量，取值范围：1~255
       * </pre>
       */
      public boolean hasMaxRxCountPerPass() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 MaxRxCountPerPass = 3 [default = 4];</code>
       *
       * <pre>
       * 每一次卫星过顶时最大接收数量，取值范围：1~255
       * </pre>
       */
      public int getMaxRxCountPerPass() {
        return maxRxCountPerPass_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, frequency_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, maxTxCountPerPass_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, maxRxCountPerPass_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, frequency_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, maxTxCountPerPass_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, maxRxCountPerPass_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static protocol_v1.V1Setting.ArgosSetting.MonitorMode parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static protocol_v1.V1Setting.ArgosSetting.MonitorMode parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static protocol_v1.V1Setting.ArgosSetting.MonitorMode parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static protocol_v1.V1Setting.ArgosSetting.MonitorMode parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static protocol_v1.V1Setting.ArgosSetting.MonitorMode parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static protocol_v1.V1Setting.ArgosSetting.MonitorMode parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static protocol_v1.V1Setting.ArgosSetting.MonitorMode parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static protocol_v1.V1Setting.ArgosSetting.MonitorMode parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static protocol_v1.V1Setting.ArgosSetting.MonitorMode parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static protocol_v1.V1Setting.ArgosSetting.MonitorMode parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(protocol_v1.V1Setting.ArgosSetting.MonitorMode prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code protocol_v1.ArgosSetting.MonitorMode}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:protocol_v1.ArgosSetting.MonitorMode)
          protocol_v1.V1Setting.ArgosSetting.MonitorModeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return protocol_v1.V1Setting.internal_static_protocol_v1_ArgosSetting_MonitorMode_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return protocol_v1.V1Setting.internal_static_protocol_v1_ArgosSetting_MonitorMode_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  protocol_v1.V1Setting.ArgosSetting.MonitorMode.class, protocol_v1.V1Setting.ArgosSetting.MonitorMode.Builder.class);
        }

        // Construct using protocol_v1.V1Setting.ArgosSetting.MonitorMode.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          frequency_ = 90;
          bitField0_ = (bitField0_ & ~0x00000001);
          maxTxCountPerPass_ = 8;
          bitField0_ = (bitField0_ & ~0x00000002);
          maxRxCountPerPass_ = 4;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return protocol_v1.V1Setting.internal_static_protocol_v1_ArgosSetting_MonitorMode_descriptor;
        }

        public protocol_v1.V1Setting.ArgosSetting.MonitorMode getDefaultInstanceForType() {
          return protocol_v1.V1Setting.ArgosSetting.MonitorMode.getDefaultInstance();
        }

        public protocol_v1.V1Setting.ArgosSetting.MonitorMode build() {
          protocol_v1.V1Setting.ArgosSetting.MonitorMode result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public protocol_v1.V1Setting.ArgosSetting.MonitorMode buildPartial() {
          protocol_v1.V1Setting.ArgosSetting.MonitorMode result = new protocol_v1.V1Setting.ArgosSetting.MonitorMode(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.frequency_ = frequency_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.maxTxCountPerPass_ = maxTxCountPerPass_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.maxRxCountPerPass_ = maxRxCountPerPass_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof protocol_v1.V1Setting.ArgosSetting.MonitorMode) {
            return mergeFrom((protocol_v1.V1Setting.ArgosSetting.MonitorMode)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(protocol_v1.V1Setting.ArgosSetting.MonitorMode other) {
          if (other == protocol_v1.V1Setting.ArgosSetting.MonitorMode.getDefaultInstance()) return this;
          if (other.hasFrequency()) {
            setFrequency(other.getFrequency());
          }
          if (other.hasMaxTxCountPerPass()) {
            setMaxTxCountPerPass(other.getMaxTxCountPerPass());
          }
          if (other.hasMaxRxCountPerPass()) {
            setMaxRxCountPerPass(other.getMaxRxCountPerPass());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          protocol_v1.V1Setting.ArgosSetting.MonitorMode parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (protocol_v1.V1Setting.ArgosSetting.MonitorMode) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int frequency_ = 90;
        /**
         * <code>optional int32 Frequency = 1 [default = 90];</code>
         *
         * <pre>
         * 重复报发送间隔, 单位s,取值范围：45~300, 默认90
         * </pre>
         */
        public boolean hasFrequency() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 Frequency = 1 [default = 90];</code>
         *
         * <pre>
         * 重复报发送间隔, 单位s,取值范围：45~300, 默认90
         * </pre>
         */
        public int getFrequency() {
          return frequency_;
        }
        /**
         * <code>optional int32 Frequency = 1 [default = 90];</code>
         *
         * <pre>
         * 重复报发送间隔, 单位s,取值范围：45~300, 默认90
         * </pre>
         */
        public Builder setFrequency(int value) {
          bitField0_ |= 0x00000001;
          frequency_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 Frequency = 1 [default = 90];</code>
         *
         * <pre>
         * 重复报发送间隔, 单位s,取值范围：45~300, 默认90
         * </pre>
         */
        public Builder clearFrequency() {
          bitField0_ = (bitField0_ & ~0x00000001);
          frequency_ = 90;
          onChanged();
          return this;
        }

        private int maxTxCountPerPass_ = 8;
        /**
         * <code>optional uint32 MaxTxCountPerPass = 2 [default = 8];</code>
         *
         * <pre>
         * 每一次卫星过顶时最大发送数量,取值范围：1~255
         * </pre>
         */
        public boolean hasMaxTxCountPerPass() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 MaxTxCountPerPass = 2 [default = 8];</code>
         *
         * <pre>
         * 每一次卫星过顶时最大发送数量,取值范围：1~255
         * </pre>
         */
        public int getMaxTxCountPerPass() {
          return maxTxCountPerPass_;
        }
        /**
         * <code>optional uint32 MaxTxCountPerPass = 2 [default = 8];</code>
         *
         * <pre>
         * 每一次卫星过顶时最大发送数量,取值范围：1~255
         * </pre>
         */
        public Builder setMaxTxCountPerPass(int value) {
          bitField0_ |= 0x00000002;
          maxTxCountPerPass_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 MaxTxCountPerPass = 2 [default = 8];</code>
         *
         * <pre>
         * 每一次卫星过顶时最大发送数量,取值范围：1~255
         * </pre>
         */
        public Builder clearMaxTxCountPerPass() {
          bitField0_ = (bitField0_ & ~0x00000002);
          maxTxCountPerPass_ = 8;
          onChanged();
          return this;
        }

        private int maxRxCountPerPass_ = 4;
        /**
         * <code>optional uint32 MaxRxCountPerPass = 3 [default = 4];</code>
         *
         * <pre>
         * 每一次卫星过顶时最大接收数量，取值范围：1~255
         * </pre>
         */
        public boolean hasMaxRxCountPerPass() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 MaxRxCountPerPass = 3 [default = 4];</code>
         *
         * <pre>
         * 每一次卫星过顶时最大接收数量，取值范围：1~255
         * </pre>
         */
        public int getMaxRxCountPerPass() {
          return maxRxCountPerPass_;
        }
        /**
         * <code>optional uint32 MaxRxCountPerPass = 3 [default = 4];</code>
         *
         * <pre>
         * 每一次卫星过顶时最大接收数量，取值范围：1~255
         * </pre>
         */
        public Builder setMaxRxCountPerPass(int value) {
          bitField0_ |= 0x00000004;
          maxRxCountPerPass_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 MaxRxCountPerPass = 3 [default = 4];</code>
         *
         * <pre>
         * 每一次卫星过顶时最大接收数量，取值范围：1~255
         * </pre>
         */
        public Builder clearMaxRxCountPerPass() {
          bitField0_ = (bitField0_ & ~0x00000004);
          maxRxCountPerPass_ = 4;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:protocol_v1.ArgosSetting.MonitorMode)
      }

      // @@protoc_insertion_point(class_scope:protocol_v1.ArgosSetting.MonitorMode)
      private static final protocol_v1.V1Setting.ArgosSetting.MonitorMode DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new protocol_v1.V1Setting.ArgosSetting.MonitorMode();
      }

      public static protocol_v1.V1Setting.ArgosSetting.MonitorMode getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<MonitorMode>
          PARSER = new com.google.protobuf.AbstractParser<MonitorMode>() {
        public MonitorMode parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new MonitorMode(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<MonitorMode> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<MonitorMode> getParserForType() {
        return PARSER;
      }

      public protocol_v1.V1Setting.ArgosSetting.MonitorMode getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface OnTimeModeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:protocol_v1.ArgosSetting.OnTimeMode)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string TimeTable = 1 [default = ""];</code>
       *
       * <pre>
       * 整点回传时间表
       * </pre>
       */
      boolean hasTimeTable();
      /**
       * <code>optional string TimeTable = 1 [default = ""];</code>
       *
       * <pre>
       * 整点回传时间表
       * </pre>
       */
      java.lang.String getTimeTable();
      /**
       * <code>optional string TimeTable = 1 [default = ""];</code>
       *
       * <pre>
       * 整点回传时间表
       * </pre>
       */
      com.google.protobuf.ByteString
          getTimeTableBytes();

      /**
       * <code>optional int32 Frequency = 2 [default = 90];</code>
       *
       * <pre>
       * 重复包发送间隔, 单位s,取值范围：45~3600, 默认90
       * </pre>
       */
      boolean hasFrequency();
      /**
       * <code>optional int32 Frequency = 2 [default = 90];</code>
       *
       * <pre>
       * 重复包发送间隔, 单位s,取值范围：45~3600, 默认90
       * </pre>
       */
      int getFrequency();

      /**
       * <code>optional int32 DutyCycle = 3 [default = 3600];</code>
       *
       * <pre>
       * 发送占空比, 单位秒, 发送持续多久, 小于等于3600
       * </pre>
       */
      boolean hasDutyCycle();
      /**
       * <code>optional int32 DutyCycle = 3 [default = 3600];</code>
       *
       * <pre>
       * 发送占空比, 单位秒, 发送持续多久, 小于等于3600
       * </pre>
       */
      int getDutyCycle();
    }
    /**
     * Protobuf type {@code protocol_v1.ArgosSetting.OnTimeMode}
     */
    public  static final class OnTimeMode extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:protocol_v1.ArgosSetting.OnTimeMode)
        OnTimeModeOrBuilder {
      // Use OnTimeMode.newBuilder() to construct.
      private OnTimeMode(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private OnTimeMode() {
        timeTable_ = "";
        frequency_ = 90;
        dutyCycle_ = 3600;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private OnTimeMode(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                timeTable_ = bs;
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                frequency_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                dutyCycle_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_ArgosSetting_OnTimeMode_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_ArgosSetting_OnTimeMode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol_v1.V1Setting.ArgosSetting.OnTimeMode.class, protocol_v1.V1Setting.ArgosSetting.OnTimeMode.Builder.class);
      }

      private int bitField0_;
      public static final int TIMETABLE_FIELD_NUMBER = 1;
      private volatile java.lang.Object timeTable_;
      /**
       * <code>optional string TimeTable = 1 [default = ""];</code>
       *
       * <pre>
       * 整点回传时间表
       * </pre>
       */
      public boolean hasTimeTable() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string TimeTable = 1 [default = ""];</code>
       *
       * <pre>
       * 整点回传时间表
       * </pre>
       */
      public java.lang.String getTimeTable() {
        java.lang.Object ref = timeTable_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            timeTable_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string TimeTable = 1 [default = ""];</code>
       *
       * <pre>
       * 整点回传时间表
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTimeTableBytes() {
        java.lang.Object ref = timeTable_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          timeTable_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int FREQUENCY_FIELD_NUMBER = 2;
      private int frequency_;
      /**
       * <code>optional int32 Frequency = 2 [default = 90];</code>
       *
       * <pre>
       * 重复包发送间隔, 单位s,取值范围：45~3600, 默认90
       * </pre>
       */
      public boolean hasFrequency() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 Frequency = 2 [default = 90];</code>
       *
       * <pre>
       * 重复包发送间隔, 单位s,取值范围：45~3600, 默认90
       * </pre>
       */
      public int getFrequency() {
        return frequency_;
      }

      public static final int DUTYCYCLE_FIELD_NUMBER = 3;
      private int dutyCycle_;
      /**
       * <code>optional int32 DutyCycle = 3 [default = 3600];</code>
       *
       * <pre>
       * 发送占空比, 单位秒, 发送持续多久, 小于等于3600
       * </pre>
       */
      public boolean hasDutyCycle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 DutyCycle = 3 [default = 3600];</code>
       *
       * <pre>
       * 发送占空比, 单位秒, 发送持续多久, 小于等于3600
       * </pre>
       */
      public int getDutyCycle() {
        return dutyCycle_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          com.google.protobuf.GeneratedMessage.writeString(output, 1, timeTable_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, frequency_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, dutyCycle_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(1, timeTable_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, frequency_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, dutyCycle_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static protocol_v1.V1Setting.ArgosSetting.OnTimeMode parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static protocol_v1.V1Setting.ArgosSetting.OnTimeMode parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static protocol_v1.V1Setting.ArgosSetting.OnTimeMode parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static protocol_v1.V1Setting.ArgosSetting.OnTimeMode parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static protocol_v1.V1Setting.ArgosSetting.OnTimeMode parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static protocol_v1.V1Setting.ArgosSetting.OnTimeMode parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static protocol_v1.V1Setting.ArgosSetting.OnTimeMode parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static protocol_v1.V1Setting.ArgosSetting.OnTimeMode parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static protocol_v1.V1Setting.ArgosSetting.OnTimeMode parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static protocol_v1.V1Setting.ArgosSetting.OnTimeMode parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(protocol_v1.V1Setting.ArgosSetting.OnTimeMode prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code protocol_v1.ArgosSetting.OnTimeMode}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:protocol_v1.ArgosSetting.OnTimeMode)
          protocol_v1.V1Setting.ArgosSetting.OnTimeModeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return protocol_v1.V1Setting.internal_static_protocol_v1_ArgosSetting_OnTimeMode_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return protocol_v1.V1Setting.internal_static_protocol_v1_ArgosSetting_OnTimeMode_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  protocol_v1.V1Setting.ArgosSetting.OnTimeMode.class, protocol_v1.V1Setting.ArgosSetting.OnTimeMode.Builder.class);
        }

        // Construct using protocol_v1.V1Setting.ArgosSetting.OnTimeMode.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          timeTable_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          frequency_ = 90;
          bitField0_ = (bitField0_ & ~0x00000002);
          dutyCycle_ = 3600;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return protocol_v1.V1Setting.internal_static_protocol_v1_ArgosSetting_OnTimeMode_descriptor;
        }

        public protocol_v1.V1Setting.ArgosSetting.OnTimeMode getDefaultInstanceForType() {
          return protocol_v1.V1Setting.ArgosSetting.OnTimeMode.getDefaultInstance();
        }

        public protocol_v1.V1Setting.ArgosSetting.OnTimeMode build() {
          protocol_v1.V1Setting.ArgosSetting.OnTimeMode result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public protocol_v1.V1Setting.ArgosSetting.OnTimeMode buildPartial() {
          protocol_v1.V1Setting.ArgosSetting.OnTimeMode result = new protocol_v1.V1Setting.ArgosSetting.OnTimeMode(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.timeTable_ = timeTable_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.frequency_ = frequency_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.dutyCycle_ = dutyCycle_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof protocol_v1.V1Setting.ArgosSetting.OnTimeMode) {
            return mergeFrom((protocol_v1.V1Setting.ArgosSetting.OnTimeMode)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(protocol_v1.V1Setting.ArgosSetting.OnTimeMode other) {
          if (other == protocol_v1.V1Setting.ArgosSetting.OnTimeMode.getDefaultInstance()) return this;
          if (other.hasTimeTable()) {
            bitField0_ |= 0x00000001;
            timeTable_ = other.timeTable_;
            onChanged();
          }
          if (other.hasFrequency()) {
            setFrequency(other.getFrequency());
          }
          if (other.hasDutyCycle()) {
            setDutyCycle(other.getDutyCycle());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          protocol_v1.V1Setting.ArgosSetting.OnTimeMode parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (protocol_v1.V1Setting.ArgosSetting.OnTimeMode) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object timeTable_ = "";
        /**
         * <code>optional string TimeTable = 1 [default = ""];</code>
         *
         * <pre>
         * 整点回传时间表
         * </pre>
         */
        public boolean hasTimeTable() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string TimeTable = 1 [default = ""];</code>
         *
         * <pre>
         * 整点回传时间表
         * </pre>
         */
        public java.lang.String getTimeTable() {
          java.lang.Object ref = timeTable_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              timeTable_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string TimeTable = 1 [default = ""];</code>
         *
         * <pre>
         * 整点回传时间表
         * </pre>
         */
        public com.google.protobuf.ByteString
            getTimeTableBytes() {
          java.lang.Object ref = timeTable_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            timeTable_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string TimeTable = 1 [default = ""];</code>
         *
         * <pre>
         * 整点回传时间表
         * </pre>
         */
        public Builder setTimeTable(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          timeTable_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string TimeTable = 1 [default = ""];</code>
         *
         * <pre>
         * 整点回传时间表
         * </pre>
         */
        public Builder clearTimeTable() {
          bitField0_ = (bitField0_ & ~0x00000001);
          timeTable_ = getDefaultInstance().getTimeTable();
          onChanged();
          return this;
        }
        /**
         * <code>optional string TimeTable = 1 [default = ""];</code>
         *
         * <pre>
         * 整点回传时间表
         * </pre>
         */
        public Builder setTimeTableBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          timeTable_ = value;
          onChanged();
          return this;
        }

        private int frequency_ = 90;
        /**
         * <code>optional int32 Frequency = 2 [default = 90];</code>
         *
         * <pre>
         * 重复包发送间隔, 单位s,取值范围：45~3600, 默认90
         * </pre>
         */
        public boolean hasFrequency() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 Frequency = 2 [default = 90];</code>
         *
         * <pre>
         * 重复包发送间隔, 单位s,取值范围：45~3600, 默认90
         * </pre>
         */
        public int getFrequency() {
          return frequency_;
        }
        /**
         * <code>optional int32 Frequency = 2 [default = 90];</code>
         *
         * <pre>
         * 重复包发送间隔, 单位s,取值范围：45~3600, 默认90
         * </pre>
         */
        public Builder setFrequency(int value) {
          bitField0_ |= 0x00000002;
          frequency_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 Frequency = 2 [default = 90];</code>
         *
         * <pre>
         * 重复包发送间隔, 单位s,取值范围：45~3600, 默认90
         * </pre>
         */
        public Builder clearFrequency() {
          bitField0_ = (bitField0_ & ~0x00000002);
          frequency_ = 90;
          onChanged();
          return this;
        }

        private int dutyCycle_ = 3600;
        /**
         * <code>optional int32 DutyCycle = 3 [default = 3600];</code>
         *
         * <pre>
         * 发送占空比, 单位秒, 发送持续多久, 小于等于3600
         * </pre>
         */
        public boolean hasDutyCycle() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 DutyCycle = 3 [default = 3600];</code>
         *
         * <pre>
         * 发送占空比, 单位秒, 发送持续多久, 小于等于3600
         * </pre>
         */
        public int getDutyCycle() {
          return dutyCycle_;
        }
        /**
         * <code>optional int32 DutyCycle = 3 [default = 3600];</code>
         *
         * <pre>
         * 发送占空比, 单位秒, 发送持续多久, 小于等于3600
         * </pre>
         */
        public Builder setDutyCycle(int value) {
          bitField0_ |= 0x00000004;
          dutyCycle_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 DutyCycle = 3 [default = 3600];</code>
         *
         * <pre>
         * 发送占空比, 单位秒, 发送持续多久, 小于等于3600
         * </pre>
         */
        public Builder clearDutyCycle() {
          bitField0_ = (bitField0_ & ~0x00000004);
          dutyCycle_ = 3600;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:protocol_v1.ArgosSetting.OnTimeMode)
      }

      // @@protoc_insertion_point(class_scope:protocol_v1.ArgosSetting.OnTimeMode)
      private static final protocol_v1.V1Setting.ArgosSetting.OnTimeMode DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new protocol_v1.V1Setting.ArgosSetting.OnTimeMode();
      }

      public static protocol_v1.V1Setting.ArgosSetting.OnTimeMode getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<OnTimeMode>
          PARSER = new com.google.protobuf.AbstractParser<OnTimeMode>() {
        public OnTimeMode parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new OnTimeMode(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<OnTimeMode> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<OnTimeMode> getParserForType() {
        return PARSER;
      }

      public protocol_v1.V1Setting.ArgosSetting.OnTimeMode getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface AutoOnTimeModeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:protocol_v1.ArgosSetting.AutoOnTimeMode)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 HoursPerDay = 1 [default = 4];</code>
       *
       * <pre>
       * 计算结果是20天内每个小时过顶次数，排序后根据该配置值选取过顶次数最多的几个小时
       * </pre>
       */
      boolean hasHoursPerDay();
      /**
       * <code>optional int32 HoursPerDay = 1 [default = 4];</code>
       *
       * <pre>
       * 计算结果是20天内每个小时过顶次数，排序后根据该配置值选取过顶次数最多的几个小时
       * </pre>
       */
      int getHoursPerDay();

      /**
       * <code>optional int32 Frequency = 2 [default = 90];</code>
       *
       * <pre>
       * 重复包发送间隔, 单位s,取值范围：45~3600, 默认90
       * </pre>
       */
      boolean hasFrequency();
      /**
       * <code>optional int32 Frequency = 2 [default = 90];</code>
       *
       * <pre>
       * 重复包发送间隔, 单位s,取值范围：45~3600, 默认90
       * </pre>
       */
      int getFrequency();

      /**
       * <code>optional int32 DutyCycle = 3 [default = 3600];</code>
       *
       * <pre>
       * 发送占空比, 单位秒, 发送持续多久, 小于等于3600
       * </pre>
       */
      boolean hasDutyCycle();
      /**
       * <code>optional int32 DutyCycle = 3 [default = 3600];</code>
       *
       * <pre>
       * 发送占空比, 单位秒, 发送持续多久, 小于等于3600
       * </pre>
       */
      int getDutyCycle();
    }
    /**
     * Protobuf type {@code protocol_v1.ArgosSetting.AutoOnTimeMode}
     */
    public  static final class AutoOnTimeMode extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:protocol_v1.ArgosSetting.AutoOnTimeMode)
        AutoOnTimeModeOrBuilder {
      // Use AutoOnTimeMode.newBuilder() to construct.
      private AutoOnTimeMode(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private AutoOnTimeMode() {
        hoursPerDay_ = 4;
        frequency_ = 90;
        dutyCycle_ = 3600;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private AutoOnTimeMode(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                hoursPerDay_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                frequency_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                dutyCycle_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_ArgosSetting_AutoOnTimeMode_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_ArgosSetting_AutoOnTimeMode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode.class, protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode.Builder.class);
      }

      private int bitField0_;
      public static final int HOURSPERDAY_FIELD_NUMBER = 1;
      private int hoursPerDay_;
      /**
       * <code>optional int32 HoursPerDay = 1 [default = 4];</code>
       *
       * <pre>
       * 计算结果是20天内每个小时过顶次数，排序后根据该配置值选取过顶次数最多的几个小时
       * </pre>
       */
      public boolean hasHoursPerDay() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 HoursPerDay = 1 [default = 4];</code>
       *
       * <pre>
       * 计算结果是20天内每个小时过顶次数，排序后根据该配置值选取过顶次数最多的几个小时
       * </pre>
       */
      public int getHoursPerDay() {
        return hoursPerDay_;
      }

      public static final int FREQUENCY_FIELD_NUMBER = 2;
      private int frequency_;
      /**
       * <code>optional int32 Frequency = 2 [default = 90];</code>
       *
       * <pre>
       * 重复包发送间隔, 单位s,取值范围：45~3600, 默认90
       * </pre>
       */
      public boolean hasFrequency() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 Frequency = 2 [default = 90];</code>
       *
       * <pre>
       * 重复包发送间隔, 单位s,取值范围：45~3600, 默认90
       * </pre>
       */
      public int getFrequency() {
        return frequency_;
      }

      public static final int DUTYCYCLE_FIELD_NUMBER = 3;
      private int dutyCycle_;
      /**
       * <code>optional int32 DutyCycle = 3 [default = 3600];</code>
       *
       * <pre>
       * 发送占空比, 单位秒, 发送持续多久, 小于等于3600
       * </pre>
       */
      public boolean hasDutyCycle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 DutyCycle = 3 [default = 3600];</code>
       *
       * <pre>
       * 发送占空比, 单位秒, 发送持续多久, 小于等于3600
       * </pre>
       */
      public int getDutyCycle() {
        return dutyCycle_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, hoursPerDay_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, frequency_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, dutyCycle_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, hoursPerDay_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, frequency_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, dutyCycle_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code protocol_v1.ArgosSetting.AutoOnTimeMode}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:protocol_v1.ArgosSetting.AutoOnTimeMode)
          protocol_v1.V1Setting.ArgosSetting.AutoOnTimeModeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return protocol_v1.V1Setting.internal_static_protocol_v1_ArgosSetting_AutoOnTimeMode_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return protocol_v1.V1Setting.internal_static_protocol_v1_ArgosSetting_AutoOnTimeMode_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode.class, protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode.Builder.class);
        }

        // Construct using protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          hoursPerDay_ = 4;
          bitField0_ = (bitField0_ & ~0x00000001);
          frequency_ = 90;
          bitField0_ = (bitField0_ & ~0x00000002);
          dutyCycle_ = 3600;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return protocol_v1.V1Setting.internal_static_protocol_v1_ArgosSetting_AutoOnTimeMode_descriptor;
        }

        public protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode getDefaultInstanceForType() {
          return protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode.getDefaultInstance();
        }

        public protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode build() {
          protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode buildPartial() {
          protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode result = new protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.hoursPerDay_ = hoursPerDay_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.frequency_ = frequency_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.dutyCycle_ = dutyCycle_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode) {
            return mergeFrom((protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode other) {
          if (other == protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode.getDefaultInstance()) return this;
          if (other.hasHoursPerDay()) {
            setHoursPerDay(other.getHoursPerDay());
          }
          if (other.hasFrequency()) {
            setFrequency(other.getFrequency());
          }
          if (other.hasDutyCycle()) {
            setDutyCycle(other.getDutyCycle());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int hoursPerDay_ = 4;
        /**
         * <code>optional int32 HoursPerDay = 1 [default = 4];</code>
         *
         * <pre>
         * 计算结果是20天内每个小时过顶次数，排序后根据该配置值选取过顶次数最多的几个小时
         * </pre>
         */
        public boolean hasHoursPerDay() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 HoursPerDay = 1 [default = 4];</code>
         *
         * <pre>
         * 计算结果是20天内每个小时过顶次数，排序后根据该配置值选取过顶次数最多的几个小时
         * </pre>
         */
        public int getHoursPerDay() {
          return hoursPerDay_;
        }
        /**
         * <code>optional int32 HoursPerDay = 1 [default = 4];</code>
         *
         * <pre>
         * 计算结果是20天内每个小时过顶次数，排序后根据该配置值选取过顶次数最多的几个小时
         * </pre>
         */
        public Builder setHoursPerDay(int value) {
          bitField0_ |= 0x00000001;
          hoursPerDay_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 HoursPerDay = 1 [default = 4];</code>
         *
         * <pre>
         * 计算结果是20天内每个小时过顶次数，排序后根据该配置值选取过顶次数最多的几个小时
         * </pre>
         */
        public Builder clearHoursPerDay() {
          bitField0_ = (bitField0_ & ~0x00000001);
          hoursPerDay_ = 4;
          onChanged();
          return this;
        }

        private int frequency_ = 90;
        /**
         * <code>optional int32 Frequency = 2 [default = 90];</code>
         *
         * <pre>
         * 重复包发送间隔, 单位s,取值范围：45~3600, 默认90
         * </pre>
         */
        public boolean hasFrequency() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 Frequency = 2 [default = 90];</code>
         *
         * <pre>
         * 重复包发送间隔, 单位s,取值范围：45~3600, 默认90
         * </pre>
         */
        public int getFrequency() {
          return frequency_;
        }
        /**
         * <code>optional int32 Frequency = 2 [default = 90];</code>
         *
         * <pre>
         * 重复包发送间隔, 单位s,取值范围：45~3600, 默认90
         * </pre>
         */
        public Builder setFrequency(int value) {
          bitField0_ |= 0x00000002;
          frequency_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 Frequency = 2 [default = 90];</code>
         *
         * <pre>
         * 重复包发送间隔, 单位s,取值范围：45~3600, 默认90
         * </pre>
         */
        public Builder clearFrequency() {
          bitField0_ = (bitField0_ & ~0x00000002);
          frequency_ = 90;
          onChanged();
          return this;
        }

        private int dutyCycle_ = 3600;
        /**
         * <code>optional int32 DutyCycle = 3 [default = 3600];</code>
         *
         * <pre>
         * 发送占空比, 单位秒, 发送持续多久, 小于等于3600
         * </pre>
         */
        public boolean hasDutyCycle() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 DutyCycle = 3 [default = 3600];</code>
         *
         * <pre>
         * 发送占空比, 单位秒, 发送持续多久, 小于等于3600
         * </pre>
         */
        public int getDutyCycle() {
          return dutyCycle_;
        }
        /**
         * <code>optional int32 DutyCycle = 3 [default = 3600];</code>
         *
         * <pre>
         * 发送占空比, 单位秒, 发送持续多久, 小于等于3600
         * </pre>
         */
        public Builder setDutyCycle(int value) {
          bitField0_ |= 0x00000004;
          dutyCycle_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 DutyCycle = 3 [default = 3600];</code>
         *
         * <pre>
         * 发送占空比, 单位秒, 发送持续多久, 小于等于3600
         * </pre>
         */
        public Builder clearDutyCycle() {
          bitField0_ = (bitField0_ & ~0x00000004);
          dutyCycle_ = 3600;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:protocol_v1.ArgosSetting.AutoOnTimeMode)
      }

      // @@protoc_insertion_point(class_scope:protocol_v1.ArgosSetting.AutoOnTimeMode)
      private static final protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode();
      }

      public static protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<AutoOnTimeMode>
          PARSER = new com.google.protobuf.AbstractParser<AutoOnTimeMode>() {
        public AutoOnTimeMode parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new AutoOnTimeMode(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<AutoOnTimeMode> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<AutoOnTimeMode> getParserForType() {
        return PARSER;
      }

      public protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int MODE_FIELD_NUMBER = 1;
    private int mode_;
    /**
     * <code>optional int32 Mode = 1 [default = 3];</code>
     *
     * <pre>
     * 0:未定义 1:周期模式 3:监控模式 4:触发模式 101:整点模式 102:自动计算整点模式
     * </pre>
     */
    public boolean hasMode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 Mode = 1 [default = 3];</code>
     *
     * <pre>
     * 0:未定义 1:周期模式 3:监控模式 4:触发模式 101:整点模式 102:自动计算整点模式
     * </pre>
     */
    public int getMode() {
      return mode_;
    }

    public static final int INTERVAL_FIELD_NUMBER = 10;
    private protocol_v1.V1Setting.ArgosSetting.IntervalMode interval_;
    /**
     * <code>optional .protocol_v1.ArgosSetting.IntervalMode Interval = 10;</code>
     *
     * <pre>
     * 1 同其他设备的周期模式
     * </pre>
     */
    public boolean hasInterval() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .protocol_v1.ArgosSetting.IntervalMode Interval = 10;</code>
     *
     * <pre>
     * 1 同其他设备的周期模式
     * </pre>
     */
    public protocol_v1.V1Setting.ArgosSetting.IntervalMode getInterval() {
      return interval_ == null ? protocol_v1.V1Setting.ArgosSetting.IntervalMode.getDefaultInstance() : interval_;
    }
    /**
     * <code>optional .protocol_v1.ArgosSetting.IntervalMode Interval = 10;</code>
     *
     * <pre>
     * 1 同其他设备的周期模式
     * </pre>
     */
    public protocol_v1.V1Setting.ArgosSetting.IntervalModeOrBuilder getIntervalOrBuilder() {
      return interval_ == null ? protocol_v1.V1Setting.ArgosSetting.IntervalMode.getDefaultInstance() : interval_;
    }

    public static final int MONITOR_FIELD_NUMBER = 11;
    private protocol_v1.V1Setting.ArgosSetting.MonitorMode monitor_;
    /**
     * <code>optional .protocol_v1.ArgosSetting.MonitorMode Monitor = 11;</code>
     *
     * <pre>
     * 3 监控模式,发现卫星过顶就发送
     * </pre>
     */
    public boolean hasMonitor() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .protocol_v1.ArgosSetting.MonitorMode Monitor = 11;</code>
     *
     * <pre>
     * 3 监控模式,发现卫星过顶就发送
     * </pre>
     */
    public protocol_v1.V1Setting.ArgosSetting.MonitorMode getMonitor() {
      return monitor_ == null ? protocol_v1.V1Setting.ArgosSetting.MonitorMode.getDefaultInstance() : monitor_;
    }
    /**
     * <code>optional .protocol_v1.ArgosSetting.MonitorMode Monitor = 11;</code>
     *
     * <pre>
     * 3 监控模式,发现卫星过顶就发送
     * </pre>
     */
    public protocol_v1.V1Setting.ArgosSetting.MonitorModeOrBuilder getMonitorOrBuilder() {
      return monitor_ == null ? protocol_v1.V1Setting.ArgosSetting.MonitorMode.getDefaultInstance() : monitor_;
    }

    public static final int ONTIME_FIELD_NUMBER = 12;
    private protocol_v1.V1Setting.ArgosSetting.OnTimeMode onTime_;
    /**
     * <code>optional .protocol_v1.ArgosSetting.OnTimeMode OnTime = 12;</code>
     *
     * <pre>
     * 101 同其他设备的整点
     * </pre>
     */
    public boolean hasOnTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .protocol_v1.ArgosSetting.OnTimeMode OnTime = 12;</code>
     *
     * <pre>
     * 101 同其他设备的整点
     * </pre>
     */
    public protocol_v1.V1Setting.ArgosSetting.OnTimeMode getOnTime() {
      return onTime_ == null ? protocol_v1.V1Setting.ArgosSetting.OnTimeMode.getDefaultInstance() : onTime_;
    }
    /**
     * <code>optional .protocol_v1.ArgosSetting.OnTimeMode OnTime = 12;</code>
     *
     * <pre>
     * 101 同其他设备的整点
     * </pre>
     */
    public protocol_v1.V1Setting.ArgosSetting.OnTimeModeOrBuilder getOnTimeOrBuilder() {
      return onTime_ == null ? protocol_v1.V1Setting.ArgosSetting.OnTimeMode.getDefaultInstance() : onTime_;
    }

    public static final int AUTOONTIME_FIELD_NUMBER = 13;
    private protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode autoOnTime_;
    /**
     * <code>optional .protocol_v1.ArgosSetting.AutoOnTimeMode AutoOnTime = 13;</code>
     *
     * <pre>
     * 102 自动计算整点模式
     * </pre>
     */
    public boolean hasAutoOnTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .protocol_v1.ArgosSetting.AutoOnTimeMode AutoOnTime = 13;</code>
     *
     * <pre>
     * 102 自动计算整点模式
     * </pre>
     */
    public protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode getAutoOnTime() {
      return autoOnTime_ == null ? protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode.getDefaultInstance() : autoOnTime_;
    }
    /**
     * <code>optional .protocol_v1.ArgosSetting.AutoOnTimeMode AutoOnTime = 13;</code>
     *
     * <pre>
     * 102 自动计算整点模式
     * </pre>
     */
    public protocol_v1.V1Setting.ArgosSetting.AutoOnTimeModeOrBuilder getAutoOnTimeOrBuilder() {
      return autoOnTime_ == null ? protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode.getDefaultInstance() : autoOnTime_;
    }

    public static final int VOLTAGEBOOST_FIELD_NUMBER = 20;
    private protocol_v1.V1Setting.VoltageBoostLevel voltageBoost_;
    /**
     * <code>optional .protocol_v1.VoltageBoostLevel VoltageBoost = 20;</code>
     *
     * <pre>
     * Argos boost,仅支持1级，其中的采样频率无效，通信频率取值范围：45~3600s
     * </pre>
     */
    public boolean hasVoltageBoost() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .protocol_v1.VoltageBoostLevel VoltageBoost = 20;</code>
     *
     * <pre>
     * Argos boost,仅支持1级，其中的采样频率无效，通信频率取值范围：45~3600s
     * </pre>
     */
    public protocol_v1.V1Setting.VoltageBoostLevel getVoltageBoost() {
      return voltageBoost_ == null ? protocol_v1.V1Setting.VoltageBoostLevel.getDefaultInstance() : voltageBoost_;
    }
    /**
     * <code>optional .protocol_v1.VoltageBoostLevel VoltageBoost = 20;</code>
     *
     * <pre>
     * Argos boost,仅支持1级，其中的采样频率无效，通信频率取值范围：45~3600s
     * </pre>
     */
    public protocol_v1.V1Setting.VoltageBoostLevelOrBuilder getVoltageBoostOrBuilder() {
      return voltageBoost_ == null ? protocol_v1.V1Setting.VoltageBoostLevel.getDefaultInstance() : voltageBoost_;
    }

    public static final int DATAMODE_FIELD_NUMBER = 31;
    private protocol_v1.V1Setting.ArgosSetting.DataModeConfig dataMode_;
    /**
     * <code>optional .protocol_v1.ArgosSetting.DataModeConfig DataMode = 31;</code>
     *
     * <pre>
     * 数据模式
     * </pre>
     */
    public boolean hasDataMode() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .protocol_v1.ArgosSetting.DataModeConfig DataMode = 31;</code>
     *
     * <pre>
     * 数据模式
     * </pre>
     */
    public protocol_v1.V1Setting.ArgosSetting.DataModeConfig getDataMode() {
      return dataMode_ == null ? protocol_v1.V1Setting.ArgosSetting.DataModeConfig.getDefaultInstance() : dataMode_;
    }
    /**
     * <code>optional .protocol_v1.ArgosSetting.DataModeConfig DataMode = 31;</code>
     *
     * <pre>
     * 数据模式
     * </pre>
     */
    public protocol_v1.V1Setting.ArgosSetting.DataModeConfigOrBuilder getDataModeOrBuilder() {
      return dataMode_ == null ? protocol_v1.V1Setting.ArgosSetting.DataModeConfig.getDefaultInstance() : dataMode_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, mode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(10, getInterval());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(11, getMonitor());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(12, getOnTime());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(13, getAutoOnTime());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(20, getVoltageBoost());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(31, getDataMode());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, mode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getInterval());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getMonitor());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getOnTime());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getAutoOnTime());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, getVoltageBoost());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(31, getDataMode());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static protocol_v1.V1Setting.ArgosSetting parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Setting.ArgosSetting parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Setting.ArgosSetting parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Setting.ArgosSetting parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Setting.ArgosSetting parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Setting.ArgosSetting parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Setting.ArgosSetting parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protocol_v1.V1Setting.ArgosSetting parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Setting.ArgosSetting parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Setting.ArgosSetting parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol_v1.V1Setting.ArgosSetting prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol_v1.ArgosSetting}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol_v1.ArgosSetting)
        protocol_v1.V1Setting.ArgosSettingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_ArgosSetting_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_ArgosSetting_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol_v1.V1Setting.ArgosSetting.class, protocol_v1.V1Setting.ArgosSetting.Builder.class);
      }

      // Construct using protocol_v1.V1Setting.ArgosSetting.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getIntervalFieldBuilder();
          getMonitorFieldBuilder();
          getOnTimeFieldBuilder();
          getAutoOnTimeFieldBuilder();
          getVoltageBoostFieldBuilder();
          getDataModeFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        mode_ = 3;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (intervalBuilder_ == null) {
          interval_ = null;
        } else {
          intervalBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (monitorBuilder_ == null) {
          monitor_ = null;
        } else {
          monitorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (onTimeBuilder_ == null) {
          onTime_ = null;
        } else {
          onTimeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (autoOnTimeBuilder_ == null) {
          autoOnTime_ = null;
        } else {
          autoOnTimeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (voltageBoostBuilder_ == null) {
          voltageBoost_ = null;
        } else {
          voltageBoostBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (dataModeBuilder_ == null) {
          dataMode_ = null;
        } else {
          dataModeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_ArgosSetting_descriptor;
      }

      public protocol_v1.V1Setting.ArgosSetting getDefaultInstanceForType() {
        return protocol_v1.V1Setting.ArgosSetting.getDefaultInstance();
      }

      public protocol_v1.V1Setting.ArgosSetting build() {
        protocol_v1.V1Setting.ArgosSetting result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol_v1.V1Setting.ArgosSetting buildPartial() {
        protocol_v1.V1Setting.ArgosSetting result = new protocol_v1.V1Setting.ArgosSetting(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mode_ = mode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (intervalBuilder_ == null) {
          result.interval_ = interval_;
        } else {
          result.interval_ = intervalBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (monitorBuilder_ == null) {
          result.monitor_ = monitor_;
        } else {
          result.monitor_ = monitorBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (onTimeBuilder_ == null) {
          result.onTime_ = onTime_;
        } else {
          result.onTime_ = onTimeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (autoOnTimeBuilder_ == null) {
          result.autoOnTime_ = autoOnTime_;
        } else {
          result.autoOnTime_ = autoOnTimeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (voltageBoostBuilder_ == null) {
          result.voltageBoost_ = voltageBoost_;
        } else {
          result.voltageBoost_ = voltageBoostBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (dataModeBuilder_ == null) {
          result.dataMode_ = dataMode_;
        } else {
          result.dataMode_ = dataModeBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol_v1.V1Setting.ArgosSetting) {
          return mergeFrom((protocol_v1.V1Setting.ArgosSetting)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol_v1.V1Setting.ArgosSetting other) {
        if (other == protocol_v1.V1Setting.ArgosSetting.getDefaultInstance()) return this;
        if (other.hasMode()) {
          setMode(other.getMode());
        }
        if (other.hasInterval()) {
          mergeInterval(other.getInterval());
        }
        if (other.hasMonitor()) {
          mergeMonitor(other.getMonitor());
        }
        if (other.hasOnTime()) {
          mergeOnTime(other.getOnTime());
        }
        if (other.hasAutoOnTime()) {
          mergeAutoOnTime(other.getAutoOnTime());
        }
        if (other.hasVoltageBoost()) {
          mergeVoltageBoost(other.getVoltageBoost());
        }
        if (other.hasDataMode()) {
          mergeDataMode(other.getDataMode());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol_v1.V1Setting.ArgosSetting parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol_v1.V1Setting.ArgosSetting) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int mode_ = 3;
      /**
       * <code>optional int32 Mode = 1 [default = 3];</code>
       *
       * <pre>
       * 0:未定义 1:周期模式 3:监控模式 4:触发模式 101:整点模式 102:自动计算整点模式
       * </pre>
       */
      public boolean hasMode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 Mode = 1 [default = 3];</code>
       *
       * <pre>
       * 0:未定义 1:周期模式 3:监控模式 4:触发模式 101:整点模式 102:自动计算整点模式
       * </pre>
       */
      public int getMode() {
        return mode_;
      }
      /**
       * <code>optional int32 Mode = 1 [default = 3];</code>
       *
       * <pre>
       * 0:未定义 1:周期模式 3:监控模式 4:触发模式 101:整点模式 102:自动计算整点模式
       * </pre>
       */
      public Builder setMode(int value) {
        bitField0_ |= 0x00000001;
        mode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Mode = 1 [default = 3];</code>
       *
       * <pre>
       * 0:未定义 1:周期模式 3:监控模式 4:触发模式 101:整点模式 102:自动计算整点模式
       * </pre>
       */
      public Builder clearMode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mode_ = 3;
        onChanged();
        return this;
      }

      private protocol_v1.V1Setting.ArgosSetting.IntervalMode interval_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.ArgosSetting.IntervalMode, protocol_v1.V1Setting.ArgosSetting.IntervalMode.Builder, protocol_v1.V1Setting.ArgosSetting.IntervalModeOrBuilder> intervalBuilder_;
      /**
       * <code>optional .protocol_v1.ArgosSetting.IntervalMode Interval = 10;</code>
       *
       * <pre>
       * 1 同其他设备的周期模式
       * </pre>
       */
      public boolean hasInterval() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.IntervalMode Interval = 10;</code>
       *
       * <pre>
       * 1 同其他设备的周期模式
       * </pre>
       */
      public protocol_v1.V1Setting.ArgosSetting.IntervalMode getInterval() {
        if (intervalBuilder_ == null) {
          return interval_ == null ? protocol_v1.V1Setting.ArgosSetting.IntervalMode.getDefaultInstance() : interval_;
        } else {
          return intervalBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.IntervalMode Interval = 10;</code>
       *
       * <pre>
       * 1 同其他设备的周期模式
       * </pre>
       */
      public Builder setInterval(protocol_v1.V1Setting.ArgosSetting.IntervalMode value) {
        if (intervalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          interval_ = value;
          onChanged();
        } else {
          intervalBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.IntervalMode Interval = 10;</code>
       *
       * <pre>
       * 1 同其他设备的周期模式
       * </pre>
       */
      public Builder setInterval(
          protocol_v1.V1Setting.ArgosSetting.IntervalMode.Builder builderForValue) {
        if (intervalBuilder_ == null) {
          interval_ = builderForValue.build();
          onChanged();
        } else {
          intervalBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.IntervalMode Interval = 10;</code>
       *
       * <pre>
       * 1 同其他设备的周期模式
       * </pre>
       */
      public Builder mergeInterval(protocol_v1.V1Setting.ArgosSetting.IntervalMode value) {
        if (intervalBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              interval_ != null &&
              interval_ != protocol_v1.V1Setting.ArgosSetting.IntervalMode.getDefaultInstance()) {
            interval_ =
              protocol_v1.V1Setting.ArgosSetting.IntervalMode.newBuilder(interval_).mergeFrom(value).buildPartial();
          } else {
            interval_ = value;
          }
          onChanged();
        } else {
          intervalBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.IntervalMode Interval = 10;</code>
       *
       * <pre>
       * 1 同其他设备的周期模式
       * </pre>
       */
      public Builder clearInterval() {
        if (intervalBuilder_ == null) {
          interval_ = null;
          onChanged();
        } else {
          intervalBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.IntervalMode Interval = 10;</code>
       *
       * <pre>
       * 1 同其他设备的周期模式
       * </pre>
       */
      public protocol_v1.V1Setting.ArgosSetting.IntervalMode.Builder getIntervalBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getIntervalFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.IntervalMode Interval = 10;</code>
       *
       * <pre>
       * 1 同其他设备的周期模式
       * </pre>
       */
      public protocol_v1.V1Setting.ArgosSetting.IntervalModeOrBuilder getIntervalOrBuilder() {
        if (intervalBuilder_ != null) {
          return intervalBuilder_.getMessageOrBuilder();
        } else {
          return interval_ == null ?
              protocol_v1.V1Setting.ArgosSetting.IntervalMode.getDefaultInstance() : interval_;
        }
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.IntervalMode Interval = 10;</code>
       *
       * <pre>
       * 1 同其他设备的周期模式
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.ArgosSetting.IntervalMode, protocol_v1.V1Setting.ArgosSetting.IntervalMode.Builder, protocol_v1.V1Setting.ArgosSetting.IntervalModeOrBuilder> 
          getIntervalFieldBuilder() {
        if (intervalBuilder_ == null) {
          intervalBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1Setting.ArgosSetting.IntervalMode, protocol_v1.V1Setting.ArgosSetting.IntervalMode.Builder, protocol_v1.V1Setting.ArgosSetting.IntervalModeOrBuilder>(
                  getInterval(),
                  getParentForChildren(),
                  isClean());
          interval_ = null;
        }
        return intervalBuilder_;
      }

      private protocol_v1.V1Setting.ArgosSetting.MonitorMode monitor_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.ArgosSetting.MonitorMode, protocol_v1.V1Setting.ArgosSetting.MonitorMode.Builder, protocol_v1.V1Setting.ArgosSetting.MonitorModeOrBuilder> monitorBuilder_;
      /**
       * <code>optional .protocol_v1.ArgosSetting.MonitorMode Monitor = 11;</code>
       *
       * <pre>
       * 3 监控模式,发现卫星过顶就发送
       * </pre>
       */
      public boolean hasMonitor() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.MonitorMode Monitor = 11;</code>
       *
       * <pre>
       * 3 监控模式,发现卫星过顶就发送
       * </pre>
       */
      public protocol_v1.V1Setting.ArgosSetting.MonitorMode getMonitor() {
        if (monitorBuilder_ == null) {
          return monitor_ == null ? protocol_v1.V1Setting.ArgosSetting.MonitorMode.getDefaultInstance() : monitor_;
        } else {
          return monitorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.MonitorMode Monitor = 11;</code>
       *
       * <pre>
       * 3 监控模式,发现卫星过顶就发送
       * </pre>
       */
      public Builder setMonitor(protocol_v1.V1Setting.ArgosSetting.MonitorMode value) {
        if (monitorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          monitor_ = value;
          onChanged();
        } else {
          monitorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.MonitorMode Monitor = 11;</code>
       *
       * <pre>
       * 3 监控模式,发现卫星过顶就发送
       * </pre>
       */
      public Builder setMonitor(
          protocol_v1.V1Setting.ArgosSetting.MonitorMode.Builder builderForValue) {
        if (monitorBuilder_ == null) {
          monitor_ = builderForValue.build();
          onChanged();
        } else {
          monitorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.MonitorMode Monitor = 11;</code>
       *
       * <pre>
       * 3 监控模式,发现卫星过顶就发送
       * </pre>
       */
      public Builder mergeMonitor(protocol_v1.V1Setting.ArgosSetting.MonitorMode value) {
        if (monitorBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              monitor_ != null &&
              monitor_ != protocol_v1.V1Setting.ArgosSetting.MonitorMode.getDefaultInstance()) {
            monitor_ =
              protocol_v1.V1Setting.ArgosSetting.MonitorMode.newBuilder(monitor_).mergeFrom(value).buildPartial();
          } else {
            monitor_ = value;
          }
          onChanged();
        } else {
          monitorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.MonitorMode Monitor = 11;</code>
       *
       * <pre>
       * 3 监控模式,发现卫星过顶就发送
       * </pre>
       */
      public Builder clearMonitor() {
        if (monitorBuilder_ == null) {
          monitor_ = null;
          onChanged();
        } else {
          monitorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.MonitorMode Monitor = 11;</code>
       *
       * <pre>
       * 3 监控模式,发现卫星过顶就发送
       * </pre>
       */
      public protocol_v1.V1Setting.ArgosSetting.MonitorMode.Builder getMonitorBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getMonitorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.MonitorMode Monitor = 11;</code>
       *
       * <pre>
       * 3 监控模式,发现卫星过顶就发送
       * </pre>
       */
      public protocol_v1.V1Setting.ArgosSetting.MonitorModeOrBuilder getMonitorOrBuilder() {
        if (monitorBuilder_ != null) {
          return monitorBuilder_.getMessageOrBuilder();
        } else {
          return monitor_ == null ?
              protocol_v1.V1Setting.ArgosSetting.MonitorMode.getDefaultInstance() : monitor_;
        }
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.MonitorMode Monitor = 11;</code>
       *
       * <pre>
       * 3 监控模式,发现卫星过顶就发送
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.ArgosSetting.MonitorMode, protocol_v1.V1Setting.ArgosSetting.MonitorMode.Builder, protocol_v1.V1Setting.ArgosSetting.MonitorModeOrBuilder> 
          getMonitorFieldBuilder() {
        if (monitorBuilder_ == null) {
          monitorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1Setting.ArgosSetting.MonitorMode, protocol_v1.V1Setting.ArgosSetting.MonitorMode.Builder, protocol_v1.V1Setting.ArgosSetting.MonitorModeOrBuilder>(
                  getMonitor(),
                  getParentForChildren(),
                  isClean());
          monitor_ = null;
        }
        return monitorBuilder_;
      }

      private protocol_v1.V1Setting.ArgosSetting.OnTimeMode onTime_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.ArgosSetting.OnTimeMode, protocol_v1.V1Setting.ArgosSetting.OnTimeMode.Builder, protocol_v1.V1Setting.ArgosSetting.OnTimeModeOrBuilder> onTimeBuilder_;
      /**
       * <code>optional .protocol_v1.ArgosSetting.OnTimeMode OnTime = 12;</code>
       *
       * <pre>
       * 101 同其他设备的整点
       * </pre>
       */
      public boolean hasOnTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.OnTimeMode OnTime = 12;</code>
       *
       * <pre>
       * 101 同其他设备的整点
       * </pre>
       */
      public protocol_v1.V1Setting.ArgosSetting.OnTimeMode getOnTime() {
        if (onTimeBuilder_ == null) {
          return onTime_ == null ? protocol_v1.V1Setting.ArgosSetting.OnTimeMode.getDefaultInstance() : onTime_;
        } else {
          return onTimeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.OnTimeMode OnTime = 12;</code>
       *
       * <pre>
       * 101 同其他设备的整点
       * </pre>
       */
      public Builder setOnTime(protocol_v1.V1Setting.ArgosSetting.OnTimeMode value) {
        if (onTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          onTime_ = value;
          onChanged();
        } else {
          onTimeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.OnTimeMode OnTime = 12;</code>
       *
       * <pre>
       * 101 同其他设备的整点
       * </pre>
       */
      public Builder setOnTime(
          protocol_v1.V1Setting.ArgosSetting.OnTimeMode.Builder builderForValue) {
        if (onTimeBuilder_ == null) {
          onTime_ = builderForValue.build();
          onChanged();
        } else {
          onTimeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.OnTimeMode OnTime = 12;</code>
       *
       * <pre>
       * 101 同其他设备的整点
       * </pre>
       */
      public Builder mergeOnTime(protocol_v1.V1Setting.ArgosSetting.OnTimeMode value) {
        if (onTimeBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              onTime_ != null &&
              onTime_ != protocol_v1.V1Setting.ArgosSetting.OnTimeMode.getDefaultInstance()) {
            onTime_ =
              protocol_v1.V1Setting.ArgosSetting.OnTimeMode.newBuilder(onTime_).mergeFrom(value).buildPartial();
          } else {
            onTime_ = value;
          }
          onChanged();
        } else {
          onTimeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.OnTimeMode OnTime = 12;</code>
       *
       * <pre>
       * 101 同其他设备的整点
       * </pre>
       */
      public Builder clearOnTime() {
        if (onTimeBuilder_ == null) {
          onTime_ = null;
          onChanged();
        } else {
          onTimeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.OnTimeMode OnTime = 12;</code>
       *
       * <pre>
       * 101 同其他设备的整点
       * </pre>
       */
      public protocol_v1.V1Setting.ArgosSetting.OnTimeMode.Builder getOnTimeBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getOnTimeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.OnTimeMode OnTime = 12;</code>
       *
       * <pre>
       * 101 同其他设备的整点
       * </pre>
       */
      public protocol_v1.V1Setting.ArgosSetting.OnTimeModeOrBuilder getOnTimeOrBuilder() {
        if (onTimeBuilder_ != null) {
          return onTimeBuilder_.getMessageOrBuilder();
        } else {
          return onTime_ == null ?
              protocol_v1.V1Setting.ArgosSetting.OnTimeMode.getDefaultInstance() : onTime_;
        }
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.OnTimeMode OnTime = 12;</code>
       *
       * <pre>
       * 101 同其他设备的整点
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.ArgosSetting.OnTimeMode, protocol_v1.V1Setting.ArgosSetting.OnTimeMode.Builder, protocol_v1.V1Setting.ArgosSetting.OnTimeModeOrBuilder> 
          getOnTimeFieldBuilder() {
        if (onTimeBuilder_ == null) {
          onTimeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1Setting.ArgosSetting.OnTimeMode, protocol_v1.V1Setting.ArgosSetting.OnTimeMode.Builder, protocol_v1.V1Setting.ArgosSetting.OnTimeModeOrBuilder>(
                  getOnTime(),
                  getParentForChildren(),
                  isClean());
          onTime_ = null;
        }
        return onTimeBuilder_;
      }

      private protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode autoOnTime_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode, protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode.Builder, protocol_v1.V1Setting.ArgosSetting.AutoOnTimeModeOrBuilder> autoOnTimeBuilder_;
      /**
       * <code>optional .protocol_v1.ArgosSetting.AutoOnTimeMode AutoOnTime = 13;</code>
       *
       * <pre>
       * 102 自动计算整点模式
       * </pre>
       */
      public boolean hasAutoOnTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.AutoOnTimeMode AutoOnTime = 13;</code>
       *
       * <pre>
       * 102 自动计算整点模式
       * </pre>
       */
      public protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode getAutoOnTime() {
        if (autoOnTimeBuilder_ == null) {
          return autoOnTime_ == null ? protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode.getDefaultInstance() : autoOnTime_;
        } else {
          return autoOnTimeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.AutoOnTimeMode AutoOnTime = 13;</code>
       *
       * <pre>
       * 102 自动计算整点模式
       * </pre>
       */
      public Builder setAutoOnTime(protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode value) {
        if (autoOnTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          autoOnTime_ = value;
          onChanged();
        } else {
          autoOnTimeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.AutoOnTimeMode AutoOnTime = 13;</code>
       *
       * <pre>
       * 102 自动计算整点模式
       * </pre>
       */
      public Builder setAutoOnTime(
          protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode.Builder builderForValue) {
        if (autoOnTimeBuilder_ == null) {
          autoOnTime_ = builderForValue.build();
          onChanged();
        } else {
          autoOnTimeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.AutoOnTimeMode AutoOnTime = 13;</code>
       *
       * <pre>
       * 102 自动计算整点模式
       * </pre>
       */
      public Builder mergeAutoOnTime(protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode value) {
        if (autoOnTimeBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              autoOnTime_ != null &&
              autoOnTime_ != protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode.getDefaultInstance()) {
            autoOnTime_ =
              protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode.newBuilder(autoOnTime_).mergeFrom(value).buildPartial();
          } else {
            autoOnTime_ = value;
          }
          onChanged();
        } else {
          autoOnTimeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.AutoOnTimeMode AutoOnTime = 13;</code>
       *
       * <pre>
       * 102 自动计算整点模式
       * </pre>
       */
      public Builder clearAutoOnTime() {
        if (autoOnTimeBuilder_ == null) {
          autoOnTime_ = null;
          onChanged();
        } else {
          autoOnTimeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.AutoOnTimeMode AutoOnTime = 13;</code>
       *
       * <pre>
       * 102 自动计算整点模式
       * </pre>
       */
      public protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode.Builder getAutoOnTimeBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getAutoOnTimeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.AutoOnTimeMode AutoOnTime = 13;</code>
       *
       * <pre>
       * 102 自动计算整点模式
       * </pre>
       */
      public protocol_v1.V1Setting.ArgosSetting.AutoOnTimeModeOrBuilder getAutoOnTimeOrBuilder() {
        if (autoOnTimeBuilder_ != null) {
          return autoOnTimeBuilder_.getMessageOrBuilder();
        } else {
          return autoOnTime_ == null ?
              protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode.getDefaultInstance() : autoOnTime_;
        }
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.AutoOnTimeMode AutoOnTime = 13;</code>
       *
       * <pre>
       * 102 自动计算整点模式
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode, protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode.Builder, protocol_v1.V1Setting.ArgosSetting.AutoOnTimeModeOrBuilder> 
          getAutoOnTimeFieldBuilder() {
        if (autoOnTimeBuilder_ == null) {
          autoOnTimeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode, protocol_v1.V1Setting.ArgosSetting.AutoOnTimeMode.Builder, protocol_v1.V1Setting.ArgosSetting.AutoOnTimeModeOrBuilder>(
                  getAutoOnTime(),
                  getParentForChildren(),
                  isClean());
          autoOnTime_ = null;
        }
        return autoOnTimeBuilder_;
      }

      private protocol_v1.V1Setting.VoltageBoostLevel voltageBoost_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.VoltageBoostLevel, protocol_v1.V1Setting.VoltageBoostLevel.Builder, protocol_v1.V1Setting.VoltageBoostLevelOrBuilder> voltageBoostBuilder_;
      /**
       * <code>optional .protocol_v1.VoltageBoostLevel VoltageBoost = 20;</code>
       *
       * <pre>
       * Argos boost,仅支持1级，其中的采样频率无效，通信频率取值范围：45~3600s
       * </pre>
       */
      public boolean hasVoltageBoost() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .protocol_v1.VoltageBoostLevel VoltageBoost = 20;</code>
       *
       * <pre>
       * Argos boost,仅支持1级，其中的采样频率无效，通信频率取值范围：45~3600s
       * </pre>
       */
      public protocol_v1.V1Setting.VoltageBoostLevel getVoltageBoost() {
        if (voltageBoostBuilder_ == null) {
          return voltageBoost_ == null ? protocol_v1.V1Setting.VoltageBoostLevel.getDefaultInstance() : voltageBoost_;
        } else {
          return voltageBoostBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.VoltageBoostLevel VoltageBoost = 20;</code>
       *
       * <pre>
       * Argos boost,仅支持1级，其中的采样频率无效，通信频率取值范围：45~3600s
       * </pre>
       */
      public Builder setVoltageBoost(protocol_v1.V1Setting.VoltageBoostLevel value) {
        if (voltageBoostBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          voltageBoost_ = value;
          onChanged();
        } else {
          voltageBoostBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .protocol_v1.VoltageBoostLevel VoltageBoost = 20;</code>
       *
       * <pre>
       * Argos boost,仅支持1级，其中的采样频率无效，通信频率取值范围：45~3600s
       * </pre>
       */
      public Builder setVoltageBoost(
          protocol_v1.V1Setting.VoltageBoostLevel.Builder builderForValue) {
        if (voltageBoostBuilder_ == null) {
          voltageBoost_ = builderForValue.build();
          onChanged();
        } else {
          voltageBoostBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .protocol_v1.VoltageBoostLevel VoltageBoost = 20;</code>
       *
       * <pre>
       * Argos boost,仅支持1级，其中的采样频率无效，通信频率取值范围：45~3600s
       * </pre>
       */
      public Builder mergeVoltageBoost(protocol_v1.V1Setting.VoltageBoostLevel value) {
        if (voltageBoostBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              voltageBoost_ != null &&
              voltageBoost_ != protocol_v1.V1Setting.VoltageBoostLevel.getDefaultInstance()) {
            voltageBoost_ =
              protocol_v1.V1Setting.VoltageBoostLevel.newBuilder(voltageBoost_).mergeFrom(value).buildPartial();
          } else {
            voltageBoost_ = value;
          }
          onChanged();
        } else {
          voltageBoostBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .protocol_v1.VoltageBoostLevel VoltageBoost = 20;</code>
       *
       * <pre>
       * Argos boost,仅支持1级，其中的采样频率无效，通信频率取值范围：45~3600s
       * </pre>
       */
      public Builder clearVoltageBoost() {
        if (voltageBoostBuilder_ == null) {
          voltageBoost_ = null;
          onChanged();
        } else {
          voltageBoostBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .protocol_v1.VoltageBoostLevel VoltageBoost = 20;</code>
       *
       * <pre>
       * Argos boost,仅支持1级，其中的采样频率无效，通信频率取值范围：45~3600s
       * </pre>
       */
      public protocol_v1.V1Setting.VoltageBoostLevel.Builder getVoltageBoostBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getVoltageBoostFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.VoltageBoostLevel VoltageBoost = 20;</code>
       *
       * <pre>
       * Argos boost,仅支持1级，其中的采样频率无效，通信频率取值范围：45~3600s
       * </pre>
       */
      public protocol_v1.V1Setting.VoltageBoostLevelOrBuilder getVoltageBoostOrBuilder() {
        if (voltageBoostBuilder_ != null) {
          return voltageBoostBuilder_.getMessageOrBuilder();
        } else {
          return voltageBoost_ == null ?
              protocol_v1.V1Setting.VoltageBoostLevel.getDefaultInstance() : voltageBoost_;
        }
      }
      /**
       * <code>optional .protocol_v1.VoltageBoostLevel VoltageBoost = 20;</code>
       *
       * <pre>
       * Argos boost,仅支持1级，其中的采样频率无效，通信频率取值范围：45~3600s
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.VoltageBoostLevel, protocol_v1.V1Setting.VoltageBoostLevel.Builder, protocol_v1.V1Setting.VoltageBoostLevelOrBuilder> 
          getVoltageBoostFieldBuilder() {
        if (voltageBoostBuilder_ == null) {
          voltageBoostBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1Setting.VoltageBoostLevel, protocol_v1.V1Setting.VoltageBoostLevel.Builder, protocol_v1.V1Setting.VoltageBoostLevelOrBuilder>(
                  getVoltageBoost(),
                  getParentForChildren(),
                  isClean());
          voltageBoost_ = null;
        }
        return voltageBoostBuilder_;
      }

      private protocol_v1.V1Setting.ArgosSetting.DataModeConfig dataMode_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.ArgosSetting.DataModeConfig, protocol_v1.V1Setting.ArgosSetting.DataModeConfig.Builder, protocol_v1.V1Setting.ArgosSetting.DataModeConfigOrBuilder> dataModeBuilder_;
      /**
       * <code>optional .protocol_v1.ArgosSetting.DataModeConfig DataMode = 31;</code>
       *
       * <pre>
       * 数据模式
       * </pre>
       */
      public boolean hasDataMode() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.DataModeConfig DataMode = 31;</code>
       *
       * <pre>
       * 数据模式
       * </pre>
       */
      public protocol_v1.V1Setting.ArgosSetting.DataModeConfig getDataMode() {
        if (dataModeBuilder_ == null) {
          return dataMode_ == null ? protocol_v1.V1Setting.ArgosSetting.DataModeConfig.getDefaultInstance() : dataMode_;
        } else {
          return dataModeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.DataModeConfig DataMode = 31;</code>
       *
       * <pre>
       * 数据模式
       * </pre>
       */
      public Builder setDataMode(protocol_v1.V1Setting.ArgosSetting.DataModeConfig value) {
        if (dataModeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dataMode_ = value;
          onChanged();
        } else {
          dataModeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.DataModeConfig DataMode = 31;</code>
       *
       * <pre>
       * 数据模式
       * </pre>
       */
      public Builder setDataMode(
          protocol_v1.V1Setting.ArgosSetting.DataModeConfig.Builder builderForValue) {
        if (dataModeBuilder_ == null) {
          dataMode_ = builderForValue.build();
          onChanged();
        } else {
          dataModeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.DataModeConfig DataMode = 31;</code>
       *
       * <pre>
       * 数据模式
       * </pre>
       */
      public Builder mergeDataMode(protocol_v1.V1Setting.ArgosSetting.DataModeConfig value) {
        if (dataModeBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              dataMode_ != null &&
              dataMode_ != protocol_v1.V1Setting.ArgosSetting.DataModeConfig.getDefaultInstance()) {
            dataMode_ =
              protocol_v1.V1Setting.ArgosSetting.DataModeConfig.newBuilder(dataMode_).mergeFrom(value).buildPartial();
          } else {
            dataMode_ = value;
          }
          onChanged();
        } else {
          dataModeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.DataModeConfig DataMode = 31;</code>
       *
       * <pre>
       * 数据模式
       * </pre>
       */
      public Builder clearDataMode() {
        if (dataModeBuilder_ == null) {
          dataMode_ = null;
          onChanged();
        } else {
          dataModeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.DataModeConfig DataMode = 31;</code>
       *
       * <pre>
       * 数据模式
       * </pre>
       */
      public protocol_v1.V1Setting.ArgosSetting.DataModeConfig.Builder getDataModeBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getDataModeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.DataModeConfig DataMode = 31;</code>
       *
       * <pre>
       * 数据模式
       * </pre>
       */
      public protocol_v1.V1Setting.ArgosSetting.DataModeConfigOrBuilder getDataModeOrBuilder() {
        if (dataModeBuilder_ != null) {
          return dataModeBuilder_.getMessageOrBuilder();
        } else {
          return dataMode_ == null ?
              protocol_v1.V1Setting.ArgosSetting.DataModeConfig.getDefaultInstance() : dataMode_;
        }
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting.DataModeConfig DataMode = 31;</code>
       *
       * <pre>
       * 数据模式
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.ArgosSetting.DataModeConfig, protocol_v1.V1Setting.ArgosSetting.DataModeConfig.Builder, protocol_v1.V1Setting.ArgosSetting.DataModeConfigOrBuilder> 
          getDataModeFieldBuilder() {
        if (dataModeBuilder_ == null) {
          dataModeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1Setting.ArgosSetting.DataModeConfig, protocol_v1.V1Setting.ArgosSetting.DataModeConfig.Builder, protocol_v1.V1Setting.ArgosSetting.DataModeConfigOrBuilder>(
                  getDataMode(),
                  getParentForChildren(),
                  isClean());
          dataMode_ = null;
        }
        return dataModeBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:protocol_v1.ArgosSetting)
    }

    // @@protoc_insertion_point(class_scope:protocol_v1.ArgosSetting)
    private static final protocol_v1.V1Setting.ArgosSetting DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol_v1.V1Setting.ArgosSetting();
    }

    public static protocol_v1.V1Setting.ArgosSetting getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ArgosSetting>
        PARSER = new com.google.protobuf.AbstractParser<ArgosSetting>() {
      public ArgosSetting parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new ArgosSetting(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<ArgosSetting> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ArgosSetting> getParserForType() {
      return PARSER;
    }

    public protocol_v1.V1Setting.ArgosSetting getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MagneticSettingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol_v1.MagneticSetting)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 OutDataRate = 1 [default = 1];</code>
     *
     * <pre>
     * 传感器采样频率，范围：1 ~ 500Hz
     * </pre>
     */
    boolean hasOutDataRate();
    /**
     * <code>optional int32 OutDataRate = 1 [default = 1];</code>
     *
     * <pre>
     * 传感器采样频率，范围：1 ~ 500Hz
     * </pre>
     */
    int getOutDataRate();

    /**
     * <code>optional .protocol_v1.MagneticSetting.NormalSetting Normal = 2;</code>
     *
     * <pre>
     * 普通模式下参数配置。
     * </pre>
     */
    boolean hasNormal();
    /**
     * <code>optional .protocol_v1.MagneticSetting.NormalSetting Normal = 2;</code>
     *
     * <pre>
     * 普通模式下参数配置。
     * </pre>
     */
    protocol_v1.V1Setting.MagneticSetting.NormalSetting getNormal();
    /**
     * <code>optional .protocol_v1.MagneticSetting.NormalSetting Normal = 2;</code>
     *
     * <pre>
     * 普通模式下参数配置。
     * </pre>
     */
    protocol_v1.V1Setting.MagneticSetting.NormalSettingOrBuilder getNormalOrBuilder();

    /**
     * <code>optional .protocol_v1.Origin2Setting Origin = 3;</code>
     *
     * <pre>
     * 原始数据采集模式参数配置。
     * </pre>
     */
    boolean hasOrigin();
    /**
     * <code>optional .protocol_v1.Origin2Setting Origin = 3;</code>
     *
     * <pre>
     * 原始数据采集模式参数配置。
     * </pre>
     */
    protocol_v1.V1Setting.Origin2Setting getOrigin();
    /**
     * <code>optional .protocol_v1.Origin2Setting Origin = 3;</code>
     *
     * <pre>
     * 原始数据采集模式参数配置。
     * </pre>
     */
    protocol_v1.V1Setting.Origin2SettingOrBuilder getOriginOrBuilder();
  }
  /**
   * Protobuf type {@code protocol_v1.MagneticSetting}
   */
  public  static final class MagneticSetting extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protocol_v1.MagneticSetting)
      MagneticSettingOrBuilder {
    // Use MagneticSetting.newBuilder() to construct.
    private MagneticSetting(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private MagneticSetting() {
      outDataRate_ = 1;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MagneticSetting(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              outDataRate_ = input.readInt32();
              break;
            }
            case 18: {
              protocol_v1.V1Setting.MagneticSetting.NormalSetting.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = normal_.toBuilder();
              }
              normal_ = input.readMessage(protocol_v1.V1Setting.MagneticSetting.NormalSetting.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(normal_);
                normal_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              protocol_v1.V1Setting.Origin2Setting.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = origin_.toBuilder();
              }
              origin_ = input.readMessage(protocol_v1.V1Setting.Origin2Setting.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(origin_);
                origin_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol_v1.V1Setting.internal_static_protocol_v1_MagneticSetting_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol_v1.V1Setting.internal_static_protocol_v1_MagneticSetting_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol_v1.V1Setting.MagneticSetting.class, protocol_v1.V1Setting.MagneticSetting.Builder.class);
    }

    public interface NormalSettingOrBuilder extends
        // @@protoc_insertion_point(interface_extends:protocol_v1.MagneticSetting.NormalSetting)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 Mode = 1 [default = 0];</code>
       *
       * <pre>
       * 普通采样配置，类似环境采样
       * </pre>
       */
      boolean hasMode();
      /**
       * <code>optional int32 Mode = 1 [default = 0];</code>
       *
       * <pre>
       * 普通采样配置，类似环境采样
       * </pre>
       */
      int getMode();

      /**
       * <code>optional int32 Interval = 2 [default = 3600];</code>
       *
       * <pre>
       * 采样间隔，范围：60 ~ 86400s,60的整数倍
       * </pre>
       */
      boolean hasInterval();
      /**
       * <code>optional int32 Interval = 2 [default = 3600];</code>
       *
       * <pre>
       * 采样间隔，范围：60 ~ 86400s,60的整数倍
       * </pre>
       */
      int getInterval();
    }
    /**
     * Protobuf type {@code protocol_v1.MagneticSetting.NormalSetting}
     */
    public  static final class NormalSetting extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:protocol_v1.MagneticSetting.NormalSetting)
        NormalSettingOrBuilder {
      // Use NormalSetting.newBuilder() to construct.
      private NormalSetting(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private NormalSetting() {
        mode_ = 0;
        interval_ = 3600;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private NormalSetting(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                mode_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                interval_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_MagneticSetting_NormalSetting_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_MagneticSetting_NormalSetting_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol_v1.V1Setting.MagneticSetting.NormalSetting.class, protocol_v1.V1Setting.MagneticSetting.NormalSetting.Builder.class);
      }

      private int bitField0_;
      public static final int MODE_FIELD_NUMBER = 1;
      private int mode_;
      /**
       * <code>optional int32 Mode = 1 [default = 0];</code>
       *
       * <pre>
       * 普通采样配置，类似环境采样
       * </pre>
       */
      public boolean hasMode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 Mode = 1 [default = 0];</code>
       *
       * <pre>
       * 普通采样配置，类似环境采样
       * </pre>
       */
      public int getMode() {
        return mode_;
      }

      public static final int INTERVAL_FIELD_NUMBER = 2;
      private int interval_;
      /**
       * <code>optional int32 Interval = 2 [default = 3600];</code>
       *
       * <pre>
       * 采样间隔，范围：60 ~ 86400s,60的整数倍
       * </pre>
       */
      public boolean hasInterval() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 Interval = 2 [default = 3600];</code>
       *
       * <pre>
       * 采样间隔，范围：60 ~ 86400s,60的整数倍
       * </pre>
       */
      public int getInterval() {
        return interval_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, mode_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, interval_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, mode_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, interval_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static protocol_v1.V1Setting.MagneticSetting.NormalSetting parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static protocol_v1.V1Setting.MagneticSetting.NormalSetting parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static protocol_v1.V1Setting.MagneticSetting.NormalSetting parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static protocol_v1.V1Setting.MagneticSetting.NormalSetting parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static protocol_v1.V1Setting.MagneticSetting.NormalSetting parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static protocol_v1.V1Setting.MagneticSetting.NormalSetting parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static protocol_v1.V1Setting.MagneticSetting.NormalSetting parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static protocol_v1.V1Setting.MagneticSetting.NormalSetting parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static protocol_v1.V1Setting.MagneticSetting.NormalSetting parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static protocol_v1.V1Setting.MagneticSetting.NormalSetting parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(protocol_v1.V1Setting.MagneticSetting.NormalSetting prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code protocol_v1.MagneticSetting.NormalSetting}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:protocol_v1.MagneticSetting.NormalSetting)
          protocol_v1.V1Setting.MagneticSetting.NormalSettingOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return protocol_v1.V1Setting.internal_static_protocol_v1_MagneticSetting_NormalSetting_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return protocol_v1.V1Setting.internal_static_protocol_v1_MagneticSetting_NormalSetting_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  protocol_v1.V1Setting.MagneticSetting.NormalSetting.class, protocol_v1.V1Setting.MagneticSetting.NormalSetting.Builder.class);
        }

        // Construct using protocol_v1.V1Setting.MagneticSetting.NormalSetting.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          mode_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          interval_ = 3600;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return protocol_v1.V1Setting.internal_static_protocol_v1_MagneticSetting_NormalSetting_descriptor;
        }

        public protocol_v1.V1Setting.MagneticSetting.NormalSetting getDefaultInstanceForType() {
          return protocol_v1.V1Setting.MagneticSetting.NormalSetting.getDefaultInstance();
        }

        public protocol_v1.V1Setting.MagneticSetting.NormalSetting build() {
          protocol_v1.V1Setting.MagneticSetting.NormalSetting result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public protocol_v1.V1Setting.MagneticSetting.NormalSetting buildPartial() {
          protocol_v1.V1Setting.MagneticSetting.NormalSetting result = new protocol_v1.V1Setting.MagneticSetting.NormalSetting(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.mode_ = mode_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.interval_ = interval_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof protocol_v1.V1Setting.MagneticSetting.NormalSetting) {
            return mergeFrom((protocol_v1.V1Setting.MagneticSetting.NormalSetting)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(protocol_v1.V1Setting.MagneticSetting.NormalSetting other) {
          if (other == protocol_v1.V1Setting.MagneticSetting.NormalSetting.getDefaultInstance()) return this;
          if (other.hasMode()) {
            setMode(other.getMode());
          }
          if (other.hasInterval()) {
            setInterval(other.getInterval());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          protocol_v1.V1Setting.MagneticSetting.NormalSetting parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (protocol_v1.V1Setting.MagneticSetting.NormalSetting) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int mode_ ;
        /**
         * <code>optional int32 Mode = 1 [default = 0];</code>
         *
         * <pre>
         * 普通采样配置，类似环境采样
         * </pre>
         */
        public boolean hasMode() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 Mode = 1 [default = 0];</code>
         *
         * <pre>
         * 普通采样配置，类似环境采样
         * </pre>
         */
        public int getMode() {
          return mode_;
        }
        /**
         * <code>optional int32 Mode = 1 [default = 0];</code>
         *
         * <pre>
         * 普通采样配置，类似环境采样
         * </pre>
         */
        public Builder setMode(int value) {
          bitField0_ |= 0x00000001;
          mode_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 Mode = 1 [default = 0];</code>
         *
         * <pre>
         * 普通采样配置，类似环境采样
         * </pre>
         */
        public Builder clearMode() {
          bitField0_ = (bitField0_ & ~0x00000001);
          mode_ = 0;
          onChanged();
          return this;
        }

        private int interval_ = 3600;
        /**
         * <code>optional int32 Interval = 2 [default = 3600];</code>
         *
         * <pre>
         * 采样间隔，范围：60 ~ 86400s,60的整数倍
         * </pre>
         */
        public boolean hasInterval() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 Interval = 2 [default = 3600];</code>
         *
         * <pre>
         * 采样间隔，范围：60 ~ 86400s,60的整数倍
         * </pre>
         */
        public int getInterval() {
          return interval_;
        }
        /**
         * <code>optional int32 Interval = 2 [default = 3600];</code>
         *
         * <pre>
         * 采样间隔，范围：60 ~ 86400s,60的整数倍
         * </pre>
         */
        public Builder setInterval(int value) {
          bitField0_ |= 0x00000002;
          interval_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 Interval = 2 [default = 3600];</code>
         *
         * <pre>
         * 采样间隔，范围：60 ~ 86400s,60的整数倍
         * </pre>
         */
        public Builder clearInterval() {
          bitField0_ = (bitField0_ & ~0x00000002);
          interval_ = 3600;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:protocol_v1.MagneticSetting.NormalSetting)
      }

      // @@protoc_insertion_point(class_scope:protocol_v1.MagneticSetting.NormalSetting)
      private static final protocol_v1.V1Setting.MagneticSetting.NormalSetting DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new protocol_v1.V1Setting.MagneticSetting.NormalSetting();
      }

      public static protocol_v1.V1Setting.MagneticSetting.NormalSetting getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<NormalSetting>
          PARSER = new com.google.protobuf.AbstractParser<NormalSetting>() {
        public NormalSetting parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new NormalSetting(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<NormalSetting> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<NormalSetting> getParserForType() {
        return PARSER;
      }

      public protocol_v1.V1Setting.MagneticSetting.NormalSetting getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int OUTDATARATE_FIELD_NUMBER = 1;
    private int outDataRate_;
    /**
     * <code>optional int32 OutDataRate = 1 [default = 1];</code>
     *
     * <pre>
     * 传感器采样频率，范围：1 ~ 500Hz
     * </pre>
     */
    public boolean hasOutDataRate() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 OutDataRate = 1 [default = 1];</code>
     *
     * <pre>
     * 传感器采样频率，范围：1 ~ 500Hz
     * </pre>
     */
    public int getOutDataRate() {
      return outDataRate_;
    }

    public static final int NORMAL_FIELD_NUMBER = 2;
    private protocol_v1.V1Setting.MagneticSetting.NormalSetting normal_;
    /**
     * <code>optional .protocol_v1.MagneticSetting.NormalSetting Normal = 2;</code>
     *
     * <pre>
     * 普通模式下参数配置。
     * </pre>
     */
    public boolean hasNormal() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .protocol_v1.MagneticSetting.NormalSetting Normal = 2;</code>
     *
     * <pre>
     * 普通模式下参数配置。
     * </pre>
     */
    public protocol_v1.V1Setting.MagneticSetting.NormalSetting getNormal() {
      return normal_ == null ? protocol_v1.V1Setting.MagneticSetting.NormalSetting.getDefaultInstance() : normal_;
    }
    /**
     * <code>optional .protocol_v1.MagneticSetting.NormalSetting Normal = 2;</code>
     *
     * <pre>
     * 普通模式下参数配置。
     * </pre>
     */
    public protocol_v1.V1Setting.MagneticSetting.NormalSettingOrBuilder getNormalOrBuilder() {
      return normal_ == null ? protocol_v1.V1Setting.MagneticSetting.NormalSetting.getDefaultInstance() : normal_;
    }

    public static final int ORIGIN_FIELD_NUMBER = 3;
    private protocol_v1.V1Setting.Origin2Setting origin_;
    /**
     * <code>optional .protocol_v1.Origin2Setting Origin = 3;</code>
     *
     * <pre>
     * 原始数据采集模式参数配置。
     * </pre>
     */
    public boolean hasOrigin() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .protocol_v1.Origin2Setting Origin = 3;</code>
     *
     * <pre>
     * 原始数据采集模式参数配置。
     * </pre>
     */
    public protocol_v1.V1Setting.Origin2Setting getOrigin() {
      return origin_ == null ? protocol_v1.V1Setting.Origin2Setting.getDefaultInstance() : origin_;
    }
    /**
     * <code>optional .protocol_v1.Origin2Setting Origin = 3;</code>
     *
     * <pre>
     * 原始数据采集模式参数配置。
     * </pre>
     */
    public protocol_v1.V1Setting.Origin2SettingOrBuilder getOriginOrBuilder() {
      return origin_ == null ? protocol_v1.V1Setting.Origin2Setting.getDefaultInstance() : origin_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, outDataRate_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getNormal());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, getOrigin());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, outDataRate_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getNormal());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getOrigin());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static protocol_v1.V1Setting.MagneticSetting parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Setting.MagneticSetting parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Setting.MagneticSetting parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Setting.MagneticSetting parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Setting.MagneticSetting parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Setting.MagneticSetting parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Setting.MagneticSetting parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protocol_v1.V1Setting.MagneticSetting parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Setting.MagneticSetting parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Setting.MagneticSetting parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol_v1.V1Setting.MagneticSetting prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol_v1.MagneticSetting}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol_v1.MagneticSetting)
        protocol_v1.V1Setting.MagneticSettingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_MagneticSetting_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_MagneticSetting_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol_v1.V1Setting.MagneticSetting.class, protocol_v1.V1Setting.MagneticSetting.Builder.class);
      }

      // Construct using protocol_v1.V1Setting.MagneticSetting.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getNormalFieldBuilder();
          getOriginFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        outDataRate_ = 1;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (normalBuilder_ == null) {
          normal_ = null;
        } else {
          normalBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (originBuilder_ == null) {
          origin_ = null;
        } else {
          originBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_MagneticSetting_descriptor;
      }

      public protocol_v1.V1Setting.MagneticSetting getDefaultInstanceForType() {
        return protocol_v1.V1Setting.MagneticSetting.getDefaultInstance();
      }

      public protocol_v1.V1Setting.MagneticSetting build() {
        protocol_v1.V1Setting.MagneticSetting result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol_v1.V1Setting.MagneticSetting buildPartial() {
        protocol_v1.V1Setting.MagneticSetting result = new protocol_v1.V1Setting.MagneticSetting(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.outDataRate_ = outDataRate_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (normalBuilder_ == null) {
          result.normal_ = normal_;
        } else {
          result.normal_ = normalBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (originBuilder_ == null) {
          result.origin_ = origin_;
        } else {
          result.origin_ = originBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol_v1.V1Setting.MagneticSetting) {
          return mergeFrom((protocol_v1.V1Setting.MagneticSetting)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol_v1.V1Setting.MagneticSetting other) {
        if (other == protocol_v1.V1Setting.MagneticSetting.getDefaultInstance()) return this;
        if (other.hasOutDataRate()) {
          setOutDataRate(other.getOutDataRate());
        }
        if (other.hasNormal()) {
          mergeNormal(other.getNormal());
        }
        if (other.hasOrigin()) {
          mergeOrigin(other.getOrigin());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol_v1.V1Setting.MagneticSetting parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol_v1.V1Setting.MagneticSetting) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int outDataRate_ = 1;
      /**
       * <code>optional int32 OutDataRate = 1 [default = 1];</code>
       *
       * <pre>
       * 传感器采样频率，范围：1 ~ 500Hz
       * </pre>
       */
      public boolean hasOutDataRate() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 OutDataRate = 1 [default = 1];</code>
       *
       * <pre>
       * 传感器采样频率，范围：1 ~ 500Hz
       * </pre>
       */
      public int getOutDataRate() {
        return outDataRate_;
      }
      /**
       * <code>optional int32 OutDataRate = 1 [default = 1];</code>
       *
       * <pre>
       * 传感器采样频率，范围：1 ~ 500Hz
       * </pre>
       */
      public Builder setOutDataRate(int value) {
        bitField0_ |= 0x00000001;
        outDataRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 OutDataRate = 1 [default = 1];</code>
       *
       * <pre>
       * 传感器采样频率，范围：1 ~ 500Hz
       * </pre>
       */
      public Builder clearOutDataRate() {
        bitField0_ = (bitField0_ & ~0x00000001);
        outDataRate_ = 1;
        onChanged();
        return this;
      }

      private protocol_v1.V1Setting.MagneticSetting.NormalSetting normal_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.MagneticSetting.NormalSetting, protocol_v1.V1Setting.MagneticSetting.NormalSetting.Builder, protocol_v1.V1Setting.MagneticSetting.NormalSettingOrBuilder> normalBuilder_;
      /**
       * <code>optional .protocol_v1.MagneticSetting.NormalSetting Normal = 2;</code>
       *
       * <pre>
       * 普通模式下参数配置。
       * </pre>
       */
      public boolean hasNormal() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .protocol_v1.MagneticSetting.NormalSetting Normal = 2;</code>
       *
       * <pre>
       * 普通模式下参数配置。
       * </pre>
       */
      public protocol_v1.V1Setting.MagneticSetting.NormalSetting getNormal() {
        if (normalBuilder_ == null) {
          return normal_ == null ? protocol_v1.V1Setting.MagneticSetting.NormalSetting.getDefaultInstance() : normal_;
        } else {
          return normalBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.MagneticSetting.NormalSetting Normal = 2;</code>
       *
       * <pre>
       * 普通模式下参数配置。
       * </pre>
       */
      public Builder setNormal(protocol_v1.V1Setting.MagneticSetting.NormalSetting value) {
        if (normalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          normal_ = value;
          onChanged();
        } else {
          normalBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .protocol_v1.MagneticSetting.NormalSetting Normal = 2;</code>
       *
       * <pre>
       * 普通模式下参数配置。
       * </pre>
       */
      public Builder setNormal(
          protocol_v1.V1Setting.MagneticSetting.NormalSetting.Builder builderForValue) {
        if (normalBuilder_ == null) {
          normal_ = builderForValue.build();
          onChanged();
        } else {
          normalBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .protocol_v1.MagneticSetting.NormalSetting Normal = 2;</code>
       *
       * <pre>
       * 普通模式下参数配置。
       * </pre>
       */
      public Builder mergeNormal(protocol_v1.V1Setting.MagneticSetting.NormalSetting value) {
        if (normalBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              normal_ != null &&
              normal_ != protocol_v1.V1Setting.MagneticSetting.NormalSetting.getDefaultInstance()) {
            normal_ =
              protocol_v1.V1Setting.MagneticSetting.NormalSetting.newBuilder(normal_).mergeFrom(value).buildPartial();
          } else {
            normal_ = value;
          }
          onChanged();
        } else {
          normalBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .protocol_v1.MagneticSetting.NormalSetting Normal = 2;</code>
       *
       * <pre>
       * 普通模式下参数配置。
       * </pre>
       */
      public Builder clearNormal() {
        if (normalBuilder_ == null) {
          normal_ = null;
          onChanged();
        } else {
          normalBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .protocol_v1.MagneticSetting.NormalSetting Normal = 2;</code>
       *
       * <pre>
       * 普通模式下参数配置。
       * </pre>
       */
      public protocol_v1.V1Setting.MagneticSetting.NormalSetting.Builder getNormalBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getNormalFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.MagneticSetting.NormalSetting Normal = 2;</code>
       *
       * <pre>
       * 普通模式下参数配置。
       * </pre>
       */
      public protocol_v1.V1Setting.MagneticSetting.NormalSettingOrBuilder getNormalOrBuilder() {
        if (normalBuilder_ != null) {
          return normalBuilder_.getMessageOrBuilder();
        } else {
          return normal_ == null ?
              protocol_v1.V1Setting.MagneticSetting.NormalSetting.getDefaultInstance() : normal_;
        }
      }
      /**
       * <code>optional .protocol_v1.MagneticSetting.NormalSetting Normal = 2;</code>
       *
       * <pre>
       * 普通模式下参数配置。
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.MagneticSetting.NormalSetting, protocol_v1.V1Setting.MagneticSetting.NormalSetting.Builder, protocol_v1.V1Setting.MagneticSetting.NormalSettingOrBuilder> 
          getNormalFieldBuilder() {
        if (normalBuilder_ == null) {
          normalBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1Setting.MagneticSetting.NormalSetting, protocol_v1.V1Setting.MagneticSetting.NormalSetting.Builder, protocol_v1.V1Setting.MagneticSetting.NormalSettingOrBuilder>(
                  getNormal(),
                  getParentForChildren(),
                  isClean());
          normal_ = null;
        }
        return normalBuilder_;
      }

      private protocol_v1.V1Setting.Origin2Setting origin_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.Origin2Setting, protocol_v1.V1Setting.Origin2Setting.Builder, protocol_v1.V1Setting.Origin2SettingOrBuilder> originBuilder_;
      /**
       * <code>optional .protocol_v1.Origin2Setting Origin = 3;</code>
       *
       * <pre>
       * 原始数据采集模式参数配置。
       * </pre>
       */
      public boolean hasOrigin() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .protocol_v1.Origin2Setting Origin = 3;</code>
       *
       * <pre>
       * 原始数据采集模式参数配置。
       * </pre>
       */
      public protocol_v1.V1Setting.Origin2Setting getOrigin() {
        if (originBuilder_ == null) {
          return origin_ == null ? protocol_v1.V1Setting.Origin2Setting.getDefaultInstance() : origin_;
        } else {
          return originBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.Origin2Setting Origin = 3;</code>
       *
       * <pre>
       * 原始数据采集模式参数配置。
       * </pre>
       */
      public Builder setOrigin(protocol_v1.V1Setting.Origin2Setting value) {
        if (originBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          origin_ = value;
          onChanged();
        } else {
          originBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Origin2Setting Origin = 3;</code>
       *
       * <pre>
       * 原始数据采集模式参数配置。
       * </pre>
       */
      public Builder setOrigin(
          protocol_v1.V1Setting.Origin2Setting.Builder builderForValue) {
        if (originBuilder_ == null) {
          origin_ = builderForValue.build();
          onChanged();
        } else {
          originBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Origin2Setting Origin = 3;</code>
       *
       * <pre>
       * 原始数据采集模式参数配置。
       * </pre>
       */
      public Builder mergeOrigin(protocol_v1.V1Setting.Origin2Setting value) {
        if (originBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              origin_ != null &&
              origin_ != protocol_v1.V1Setting.Origin2Setting.getDefaultInstance()) {
            origin_ =
              protocol_v1.V1Setting.Origin2Setting.newBuilder(origin_).mergeFrom(value).buildPartial();
          } else {
            origin_ = value;
          }
          onChanged();
        } else {
          originBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Origin2Setting Origin = 3;</code>
       *
       * <pre>
       * 原始数据采集模式参数配置。
       * </pre>
       */
      public Builder clearOrigin() {
        if (originBuilder_ == null) {
          origin_ = null;
          onChanged();
        } else {
          originBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .protocol_v1.Origin2Setting Origin = 3;</code>
       *
       * <pre>
       * 原始数据采集模式参数配置。
       * </pre>
       */
      public protocol_v1.V1Setting.Origin2Setting.Builder getOriginBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getOriginFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.Origin2Setting Origin = 3;</code>
       *
       * <pre>
       * 原始数据采集模式参数配置。
       * </pre>
       */
      public protocol_v1.V1Setting.Origin2SettingOrBuilder getOriginOrBuilder() {
        if (originBuilder_ != null) {
          return originBuilder_.getMessageOrBuilder();
        } else {
          return origin_ == null ?
              protocol_v1.V1Setting.Origin2Setting.getDefaultInstance() : origin_;
        }
      }
      /**
       * <code>optional .protocol_v1.Origin2Setting Origin = 3;</code>
       *
       * <pre>
       * 原始数据采集模式参数配置。
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.Origin2Setting, protocol_v1.V1Setting.Origin2Setting.Builder, protocol_v1.V1Setting.Origin2SettingOrBuilder> 
          getOriginFieldBuilder() {
        if (originBuilder_ == null) {
          originBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1Setting.Origin2Setting, protocol_v1.V1Setting.Origin2Setting.Builder, protocol_v1.V1Setting.Origin2SettingOrBuilder>(
                  getOrigin(),
                  getParentForChildren(),
                  isClean());
          origin_ = null;
        }
        return originBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:protocol_v1.MagneticSetting)
    }

    // @@protoc_insertion_point(class_scope:protocol_v1.MagneticSetting)
    private static final protocol_v1.V1Setting.MagneticSetting DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol_v1.V1Setting.MagneticSetting();
    }

    public static protocol_v1.V1Setting.MagneticSetting getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<MagneticSetting>
        PARSER = new com.google.protobuf.AbstractParser<MagneticSetting>() {
      public MagneticSetting parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new MagneticSetting(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<MagneticSetting> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MagneticSetting> getParserForType() {
      return PARSER;
    }

    public protocol_v1.V1Setting.MagneticSetting getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SettingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol_v1.Setting)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 EnvSampleMode = 1 [default = 0];</code>
     *
     * <pre>
     * 环境采样模式: 0 - 关闭, 1 - 定时采样
     * </pre>
     */
    boolean hasEnvSampleMode();
    /**
     * <code>optional int32 EnvSampleMode = 1 [default = 0];</code>
     *
     * <pre>
     * 环境采样模式: 0 - 关闭, 1 - 定时采样
     * </pre>
     */
    int getEnvSampleMode();

    /**
     * <code>optional int32 EnvSampleInterval = 2 [default = 0];</code>
     *
     * <pre>
     * 环境采样间隔: 秒
     * </pre>
     */
    boolean hasEnvSampleInterval();
    /**
     * <code>optional int32 EnvSampleInterval = 2 [default = 0];</code>
     *
     * <pre>
     * 环境采样间隔: 秒
     * </pre>
     */
    int getEnvSampleInterval();

    /**
     * <code>optional int32 BehaviorSampleMode = 4 [default = 0];</code>
     *
     * <pre>
     * (第三方)行为采样模式: 0 - 关闭, 1 - 定时采样
     * </pre>
     */
    boolean hasBehaviorSampleMode();
    /**
     * <code>optional int32 BehaviorSampleMode = 4 [default = 0];</code>
     *
     * <pre>
     * (第三方)行为采样模式: 0 - 关闭, 1 - 定时采样
     * </pre>
     */
    int getBehaviorSampleMode();

    /**
     * <code>optional int32 BehaviorSampleInterval = 5 [default = 0];</code>
     *
     * <pre>
     * (第三方)行为采样间隔: 秒
     * </pre>
     */
    boolean hasBehaviorSampleInterval();
    /**
     * <code>optional int32 BehaviorSampleInterval = 5 [default = 0];</code>
     *
     * <pre>
     * (第三方)行为采样间隔: 秒
     * </pre>
     */
    int getBehaviorSampleInterval();

    /**
     * <code>optional int32 GPSSampleMode = 7 [default = 0];</code>
     *
     * <pre>
     * GPS采样模式: 0 - 关闭, 1 - 定时采样, 2 - 持续开启(功耗高, 不推荐)
     * </pre>
     */
    boolean hasGPSSampleMode();
    /**
     * <code>optional int32 GPSSampleMode = 7 [default = 0];</code>
     *
     * <pre>
     * GPS采样模式: 0 - 关闭, 1 - 定时采样, 2 - 持续开启(功耗高, 不推荐)
     * </pre>
     */
    int getGPSSampleMode();

    /**
     * <code>optional int32 GPSSampleInterval = 8 [default = 0];</code>
     *
     * <pre>
     * GPS采样间隔: 秒
     * </pre>
     */
    boolean hasGPSSampleInterval();
    /**
     * <code>optional int32 GPSSampleInterval = 8 [default = 0];</code>
     *
     * <pre>
     * GPS采样间隔: 秒
     * </pre>
     */
    int getGPSSampleInterval();

    /**
     * <code>optional int32 CommunicationMode = 10 [default = 1];</code>
     *
     * <pre>
     * 通信模式: 0 - 未定义, 1 - 周期模式, 2 - 持续在线(适合eDRX), 101 - 整点回传
     * </pre>
     */
    boolean hasCommunicationMode();
    /**
     * <code>optional int32 CommunicationMode = 10 [default = 1];</code>
     *
     * <pre>
     * 通信模式: 0 - 未定义, 1 - 周期模式, 2 - 持续在线(适合eDRX), 101 - 整点回传
     * </pre>
     */
    int getCommunicationMode();

    /**
     * <code>optional int32 CommunicationInterval = 11 [default = 0];</code>
     *
     * <pre>
     * 通信间隔: 秒
     * </pre>
     */
    boolean hasCommunicationInterval();
    /**
     * <code>optional int32 CommunicationInterval = 11 [default = 0];</code>
     *
     * <pre>
     * 通信间隔: 秒
     * </pre>
     */
    int getCommunicationInterval();

    /**
     * <code>optional int32 TriggerMode = 14 [default = 0];</code>
     *
     * <pre>
     * 触发器模式: 0 - 关闭, 1 - 开启
     * </pre>
     */
    boolean hasTriggerMode();
    /**
     * <code>optional int32 TriggerMode = 14 [default = 0];</code>
     *
     * <pre>
     * 触发器模式: 0 - 关闭, 1 - 开启
     * </pre>
     */
    int getTriggerMode();

    /**
     * <code>optional int32 ResetDevice = 16 [default = 0];</code>
     *
     * <pre>
     * 复位请求: 0 - 不复位, 1 - 这次通信结束后立即复位
     * </pre>
     */
    boolean hasResetDevice();
    /**
     * <code>optional int32 ResetDevice = 16 [default = 0];</code>
     *
     * <pre>
     * 复位请求: 0 - 不复位, 1 - 这次通信结束后立即复位
     * </pre>
     */
    int getResetDevice();

    /**
     * <code>optional int32 SchedulePowerOff = 17 [default = 0];</code>
     *
     * <pre>
     * 关机计划: 0 - 不关机, 1 - 每天指定时段关机, 2 - 连续多天关机
     * </pre>
     */
    boolean hasSchedulePowerOff();
    /**
     * <code>optional int32 SchedulePowerOff = 17 [default = 0];</code>
     *
     * <pre>
     * 关机计划: 0 - 不关机, 1 - 每天指定时段关机, 2 - 连续多天关机
     * </pre>
     */
    int getSchedulePowerOff();

    /**
     * <code>optional int32 DailyPowerOffTime = 18 [default = 0];</code>
     *
     * <pre>
     * 每天关机起始时间: UTC时间戳, 只使用小时和分钟
     * </pre>
     */
    boolean hasDailyPowerOffTime();
    /**
     * <code>optional int32 DailyPowerOffTime = 18 [default = 0];</code>
     *
     * <pre>
     * 每天关机起始时间: UTC时间戳, 只使用小时和分钟
     * </pre>
     */
    int getDailyPowerOffTime();

    /**
     * <code>optional int32 DailyPowerOnTime = 19 [default = 0];</code>
     *
     * <pre>
     * 每天关机结束时间: UTC时间戳, 只使用小时和分钟
     * </pre>
     */
    boolean hasDailyPowerOnTime();
    /**
     * <code>optional int32 DailyPowerOnTime = 19 [default = 0];</code>
     *
     * <pre>
     * 每天关机结束时间: UTC时间戳, 只使用小时和分钟
     * </pre>
     */
    int getDailyPowerOnTime();

    /**
     * <code>optional int32 NormalPowerOffTime = 20 [default = 0];</code>
     *
     * <pre>
     * 连续关机起始日期: UTC时间戳
     * </pre>
     */
    boolean hasNormalPowerOffTime();
    /**
     * <code>optional int32 NormalPowerOffTime = 20 [default = 0];</code>
     *
     * <pre>
     * 连续关机起始日期: UTC时间戳
     * </pre>
     */
    int getNormalPowerOffTime();

    /**
     * <code>optional int32 NormalPowerOnTime = 21 [default = 0];</code>
     *
     * <pre>
     * 连续关机结束日期: UTC时间戳
     * </pre>
     */
    boolean hasNormalPowerOnTime();
    /**
     * <code>optional int32 NormalPowerOnTime = 21 [default = 0];</code>
     *
     * <pre>
     * 连续关机结束日期: UTC时间戳
     * </pre>
     */
    int getNormalPowerOnTime();

    /**
     * <code>optional int32 OTAFirmwareVersion = 22 [default = 0];</code>
     *
     * <pre>
     * OTA固件版本
     * </pre>
     */
    boolean hasOTAFirmwareVersion();
    /**
     * <code>optional int32 OTAFirmwareVersion = 22 [default = 0];</code>
     *
     * <pre>
     * OTA固件版本
     * </pre>
     */
    int getOTAFirmwareVersion();

    /**
     * <code>optional string OTAFirmwareID = 23 [default = ""];</code>
     *
     * <pre>
     * OTA固件标识
     * </pre>
     */
    boolean hasOTAFirmwareID();
    /**
     * <code>optional string OTAFirmwareID = 23 [default = ""];</code>
     *
     * <pre>
     * OTA固件标识
     * </pre>
     */
    java.lang.String getOTAFirmwareID();
    /**
     * <code>optional string OTAFirmwareID = 23 [default = ""];</code>
     *
     * <pre>
     * OTA固件标识
     * </pre>
     */
    com.google.protobuf.ByteString
        getOTAFirmwareIDBytes();

    /**
     * <code>optional int32 OTAForceUpgrade = 24 [default = 0];</code>
     *
     * <pre>
     * OTA强制执行(丢弃数据, 立即升级)
     * </pre>
     */
    boolean hasOTAForceUpgrade();
    /**
     * <code>optional int32 OTAForceUpgrade = 24 [default = 0];</code>
     *
     * <pre>
     * OTA强制执行(丢弃数据, 立即升级)
     * </pre>
     */
    int getOTAForceUpgrade();

    /**
     * <code>optional string OTAServerHost = 25 [default = ""];</code>
     *
     * <pre>
     * OTA服务器域名或地址
     * </pre>
     */
    boolean hasOTAServerHost();
    /**
     * <code>optional string OTAServerHost = 25 [default = ""];</code>
     *
     * <pre>
     * OTA服务器域名或地址
     * </pre>
     */
    java.lang.String getOTAServerHost();
    /**
     * <code>optional string OTAServerHost = 25 [default = ""];</code>
     *
     * <pre>
     * OTA服务器域名或地址
     * </pre>
     */
    com.google.protobuf.ByteString
        getOTAServerHostBytes();

    /**
     * <code>optional int32 OTAServerPort = 26 [default = 0];</code>
     *
     * <pre>
     * OTA服务器端口
     * </pre>
     */
    boolean hasOTAServerPort();
    /**
     * <code>optional int32 OTAServerPort = 26 [default = 0];</code>
     *
     * <pre>
     * OTA服务器端口
     * </pre>
     */
    int getOTAServerPort();

    /**
     * <code>optional int32 SMSMode = 27 [default = 0];</code>
     *
     * <pre>
     * 短信上传模式: 0 - 关闭, 1 - 定时上传, 2 - 辅助上传(网络通信失败时上传)
     * </pre>
     */
    boolean hasSMSMode();
    /**
     * <code>optional int32 SMSMode = 27 [default = 0];</code>
     *
     * <pre>
     * 短信上传模式: 0 - 关闭, 1 - 定时上传, 2 - 辅助上传(网络通信失败时上传)
     * </pre>
     */
    int getSMSMode();

    /**
     * <code>optional int32 SMSInterval = 28 [default = 0];</code>
     *
     * <pre>
     * 短信上传间隔: 秒
     * </pre>
     */
    boolean hasSMSInterval();
    /**
     * <code>optional int32 SMSInterval = 28 [default = 0];</code>
     *
     * <pre>
     * 短信上传间隔: 秒
     * </pre>
     */
    int getSMSInterval();

    /**
     * <code>optional int32 AlarmMode = 29 [default = 0];</code>
     *
     * <pre>
     * 报警模式: 0 - 关闭, 1 - 数传报警, 2 - 短信报警, 3 - 数传+短信
     * </pre>
     */
    boolean hasAlarmMode();
    /**
     * <code>optional int32 AlarmMode = 29 [default = 0];</code>
     *
     * <pre>
     * 报警模式: 0 - 关闭, 1 - 数传报警, 2 - 短信报警, 3 - 数传+短信
     * </pre>
     */
    int getAlarmMode();

    /**
     * <code>optional int32 ScheduleSpeaker = 30 [default = 0];</code>
     *
     * <pre>
     * 语音播报计划: 0 - 不播报, 1 - 每天准时播报
     * </pre>
     */
    boolean hasScheduleSpeaker();
    /**
     * <code>optional int32 ScheduleSpeaker = 30 [default = 0];</code>
     *
     * <pre>
     * 语音播报计划: 0 - 不播报, 1 - 每天准时播报
     * </pre>
     */
    int getScheduleSpeaker();

    /**
     * <code>optional int32 SpeakerExitTime = 31 [default = 0];</code>
     *
     * <pre>
     * 每天出栏播报时间: UTC时间戳, 只使用小时和分钟
     * </pre>
     */
    boolean hasSpeakerExitTime();
    /**
     * <code>optional int32 SpeakerExitTime = 31 [default = 0];</code>
     *
     * <pre>
     * 每天出栏播报时间: UTC时间戳, 只使用小时和分钟
     * </pre>
     */
    int getSpeakerExitTime();

    /**
     * <code>optional int32 SpeakerEnterTime = 32 [default = 0];</code>
     *
     * <pre>
     * 每天进栏播报时间: UTC时间戳, 只使用小时和分钟
     * </pre>
     */
    boolean hasSpeakerEnterTime();
    /**
     * <code>optional int32 SpeakerEnterTime = 32 [default = 0];</code>
     *
     * <pre>
     * 每天进栏播报时间: UTC时间戳, 只使用小时和分钟
     * </pre>
     */
    int getSpeakerEnterTime();

    /**
     * <code>optional string CommunicationTimeTable = 102 [default = ""];</code>
     *
     * <pre>
     * 整点回传时间表
     * </pre>
     */
    boolean hasCommunicationTimeTable();
    /**
     * <code>optional string CommunicationTimeTable = 102 [default = ""];</code>
     *
     * <pre>
     * 整点回传时间表
     * </pre>
     */
    java.lang.String getCommunicationTimeTable();
    /**
     * <code>optional string CommunicationTimeTable = 102 [default = ""];</code>
     *
     * <pre>
     * 整点回传时间表
     * </pre>
     */
    com.google.protobuf.ByteString
        getCommunicationTimeTableBytes();

    /**
     * <code>repeated .protocol_v1.TimeRange OriginTime = 105;</code>
     *
     * <pre>
     * repeated TimeRange PowerOffTime = 103; // 【废弃】计划关机时间范围
     * optional int32 PowerOffMode = 104 [default=0]; // 【废弃】0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
     * </pre>
     */
    java.util.List<protocol_v1.V1Setting.TimeRange> 
        getOriginTimeList();
    /**
     * <code>repeated .protocol_v1.TimeRange OriginTime = 105;</code>
     *
     * <pre>
     * repeated TimeRange PowerOffTime = 103; // 【废弃】计划关机时间范围
     * optional int32 PowerOffMode = 104 [default=0]; // 【废弃】0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
     * </pre>
     */
    protocol_v1.V1Setting.TimeRange getOriginTime(int index);
    /**
     * <code>repeated .protocol_v1.TimeRange OriginTime = 105;</code>
     *
     * <pre>
     * repeated TimeRange PowerOffTime = 103; // 【废弃】计划关机时间范围
     * optional int32 PowerOffMode = 104 [default=0]; // 【废弃】0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
     * </pre>
     */
    int getOriginTimeCount();
    /**
     * <code>repeated .protocol_v1.TimeRange OriginTime = 105;</code>
     *
     * <pre>
     * repeated TimeRange PowerOffTime = 103; // 【废弃】计划关机时间范围
     * optional int32 PowerOffMode = 104 [default=0]; // 【废弃】0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
     * </pre>
     */
    java.util.List<? extends protocol_v1.V1Setting.TimeRangeOrBuilder> 
        getOriginTimeOrBuilderList();
    /**
     * <code>repeated .protocol_v1.TimeRange OriginTime = 105;</code>
     *
     * <pre>
     * repeated TimeRange PowerOffTime = 103; // 【废弃】计划关机时间范围
     * optional int32 PowerOffMode = 104 [default=0]; // 【废弃】0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
     * </pre>
     */
    protocol_v1.V1Setting.TimeRangeOrBuilder getOriginTimeOrBuilder(
        int index);

    /**
     * <code>optional int32 OriginMode = 106 [default = 0];</code>
     *
     * <pre>
     * 0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
     * </pre>
     */
    boolean hasOriginMode();
    /**
     * <code>optional int32 OriginMode = 106 [default = 0];</code>
     *
     * <pre>
     * 0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
     * </pre>
     */
    int getOriginMode();

    /**
     * <code>optional int32 EstrusSampleMode = 107 [default = 0];</code>
     *
     * <pre>
     * 发情中间结果模式: 0 - 关闭, 1 - 定时采样
     * </pre>
     */
    boolean hasEstrusSampleMode();
    /**
     * <code>optional int32 EstrusSampleMode = 107 [default = 0];</code>
     *
     * <pre>
     * 发情中间结果模式: 0 - 关闭, 1 - 定时采样
     * </pre>
     */
    int getEstrusSampleMode();

    /**
     * <code>optional int32 EstrusSampleInterval = 108 [default = 0];</code>
     *
     * <pre>
     * 发情中间结果间隔: 秒
     * </pre>
     */
    boolean hasEstrusSampleInterval();
    /**
     * <code>optional int32 EstrusSampleInterval = 108 [default = 0];</code>
     *
     * <pre>
     * 发情中间结果间隔: 秒
     * </pre>
     */
    int getEstrusSampleInterval();

    /**
     * <code>optional int32 Behavior2SampleMode = 109 [default = 0];</code>
     *
     * <pre>
     * 行为采样模式: 0 - 关闭, 1 - 定时采样
     * </pre>
     */
    boolean hasBehavior2SampleMode();
    /**
     * <code>optional int32 Behavior2SampleMode = 109 [default = 0];</code>
     *
     * <pre>
     * 行为采样模式: 0 - 关闭, 1 - 定时采样
     * </pre>
     */
    int getBehavior2SampleMode();

    /**
     * <code>optional int32 Behavior2SampleInterval = 110 [default = 0];</code>
     *
     * <pre>
     * 行为采样间隔: 秒
     * </pre>
     */
    boolean hasBehavior2SampleInterval();
    /**
     * <code>optional int32 Behavior2SampleInterval = 110 [default = 0];</code>
     *
     * <pre>
     * 行为采样间隔: 秒
     * </pre>
     */
    int getBehavior2SampleInterval();

    /**
     * <code>optional .protocol_v1.GprsPowerSaving GprsPowerSaving = 111;</code>
     *
     * <pre>
     * 上传节电模式
     * </pre>
     */
    boolean hasGprsPowerSaving();
    /**
     * <code>optional .protocol_v1.GprsPowerSaving GprsPowerSaving = 111;</code>
     *
     * <pre>
     * 上传节电模式
     * </pre>
     */
    protocol_v1.V1Setting.GprsPowerSaving getGprsPowerSaving();
    /**
     * <code>optional .protocol_v1.GprsPowerSaving GprsPowerSaving = 111;</code>
     *
     * <pre>
     * 上传节电模式
     * </pre>
     */
    protocol_v1.V1Setting.GprsPowerSavingOrBuilder getGprsPowerSavingOrBuilder();

    /**
     * <code>repeated .protocol_v1.VoltageBoostLevel VoltageBoost = 112;</code>
     *
     * <pre>
     * 电压Boost配置, 按电压门限由高到低排列, 最多支持4级
     * </pre>
     */
    java.util.List<protocol_v1.V1Setting.VoltageBoostLevel> 
        getVoltageBoostList();
    /**
     * <code>repeated .protocol_v1.VoltageBoostLevel VoltageBoost = 112;</code>
     *
     * <pre>
     * 电压Boost配置, 按电压门限由高到低排列, 最多支持4级
     * </pre>
     */
    protocol_v1.V1Setting.VoltageBoostLevel getVoltageBoost(int index);
    /**
     * <code>repeated .protocol_v1.VoltageBoostLevel VoltageBoost = 112;</code>
     *
     * <pre>
     * 电压Boost配置, 按电压门限由高到低排列, 最多支持4级
     * </pre>
     */
    int getVoltageBoostCount();
    /**
     * <code>repeated .protocol_v1.VoltageBoostLevel VoltageBoost = 112;</code>
     *
     * <pre>
     * 电压Boost配置, 按电压门限由高到低排列, 最多支持4级
     * </pre>
     */
    java.util.List<? extends protocol_v1.V1Setting.VoltageBoostLevelOrBuilder> 
        getVoltageBoostOrBuilderList();
    /**
     * <code>repeated .protocol_v1.VoltageBoostLevel VoltageBoost = 112;</code>
     *
     * <pre>
     * 电压Boost配置, 按电压门限由高到低排列, 最多支持4级
     * </pre>
     */
    protocol_v1.V1Setting.VoltageBoostLevelOrBuilder getVoltageBoostOrBuilder(
        int index);

    /**
     * <code>optional .protocol_v1.SpeedBoostLevel SpeedBoost = 113;</code>
     *
     * <pre>
     * 速度Boost配置
     * </pre>
     */
    boolean hasSpeedBoost();
    /**
     * <code>optional .protocol_v1.SpeedBoostLevel SpeedBoost = 113;</code>
     *
     * <pre>
     * 速度Boost配置
     * </pre>
     */
    protocol_v1.V1Setting.SpeedBoostLevel getSpeedBoost();
    /**
     * <code>optional .protocol_v1.SpeedBoostLevel SpeedBoost = 113;</code>
     *
     * <pre>
     * 速度Boost配置
     * </pre>
     */
    protocol_v1.V1Setting.SpeedBoostLevelOrBuilder getSpeedBoostOrBuilder();

    /**
     * <code>optional int32 RandomSecond = 114 [default = 0];</code>
     *
     * <pre>
     * 随机秒数, 回传时间增加随机秒数
     * </pre>
     */
    boolean hasRandomSecond();
    /**
     * <code>optional int32 RandomSecond = 114 [default = 0];</code>
     *
     * <pre>
     * 随机秒数, 回传时间增加随机秒数
     * </pre>
     */
    int getRandomSecond();

    /**
     * <code>optional uint32 BehaviorSampleStrategy = 115 [default = 0];</code>
     *
     * <pre>
     * 行为采样位掩码: bit0 - ODBA, bit1 - ODBAxyz + MeanDLxyz, bit2 - 行为分析, bit3 - 发情检测, bit4 - 计步器
     * </pre>
     */
    boolean hasBehaviorSampleStrategy();
    /**
     * <code>optional uint32 BehaviorSampleStrategy = 115 [default = 0];</code>
     *
     * <pre>
     * 行为采样位掩码: bit0 - ODBA, bit1 - ODBAxyz + MeanDLxyz, bit2 - 行为分析, bit3 - 发情检测, bit4 - 计步器
     * </pre>
     */
    int getBehaviorSampleStrategy();

    /**
     * <code>repeated string UserPhoneNumber = 116;</code>
     *
     * <pre>
     * 用户电话号码, 唤醒白名单&amp;报警接收机号码
     * </pre>
     */
    com.google.protobuf.ProtocolStringList
        getUserPhoneNumberList();
    /**
     * <code>repeated string UserPhoneNumber = 116;</code>
     *
     * <pre>
     * 用户电话号码, 唤醒白名单&amp;报警接收机号码
     * </pre>
     */
    int getUserPhoneNumberCount();
    /**
     * <code>repeated string UserPhoneNumber = 116;</code>
     *
     * <pre>
     * 用户电话号码, 唤醒白名单&amp;报警接收机号码
     * </pre>
     */
    java.lang.String getUserPhoneNumber(int index);
    /**
     * <code>repeated string UserPhoneNumber = 116;</code>
     *
     * <pre>
     * 用户电话号码, 唤醒白名单&amp;报警接收机号码
     * </pre>
     */
    com.google.protobuf.ByteString
        getUserPhoneNumberBytes(int index);

    /**
     * <code>optional int32 HubMode = 120 [default = 0];</code>
     *
     * <pre>
     * 0: disable, 1: ble hub
     * </pre>
     */
    boolean hasHubMode();
    /**
     * <code>optional int32 HubMode = 120 [default = 0];</code>
     *
     * <pre>
     * 0: disable, 1: ble hub
     * </pre>
     */
    int getHubMode();

    /**
     * <code>optional uint32 HashSecond = 121 [default = 0];</code>
     *
     * <pre>
     * setting hash, 目前为setting修改时间(updated_at)的秒, 为unix time
     * </pre>
     */
    boolean hasHashSecond();
    /**
     * <code>optional uint32 HashSecond = 121 [default = 0];</code>
     *
     * <pre>
     * setting hash, 目前为setting修改时间(updated_at)的秒, 为unix time
     * </pre>
     */
    int getHashSecond();

    /**
     * <code>optional uint32 HashMillisecond = 122 [default = 0];</code>
     *
     * <pre>
     * setting hash, 目前为setting修改时间(updated_at)的毫秒
     * </pre>
     */
    boolean hasHashMillisecond();
    /**
     * <code>optional uint32 HashMillisecond = 122 [default = 0];</code>
     *
     * <pre>
     * setting hash, 目前为setting修改时间(updated_at)的毫秒
     * </pre>
     */
    int getHashMillisecond();

    /**
     * <code>optional int32 CellularLocationMode = 124;</code>
     *
     * <pre>
     * 基站定位开关： 0 - 关闭,  非0 - 开启
     * </pre>
     */
    boolean hasCellularLocationMode();
    /**
     * <code>optional int32 CellularLocationMode = 124;</code>
     *
     * <pre>
     * 基站定位开关： 0 - 关闭,  非0 - 开启
     * </pre>
     */
    int getCellularLocationMode();

    /**
     * <code>optional .protocol_v1.Switch StepsSwitch = 125;</code>
     *
     * <pre>
     * 步数与odba配置
     * </pre>
     */
    boolean hasStepsSwitch();
    /**
     * <code>optional .protocol_v1.Switch StepsSwitch = 125;</code>
     *
     * <pre>
     * 步数与odba配置
     * </pre>
     */
    protocol_v1.V1Switch.Switch getStepsSwitch();
    /**
     * <code>optional .protocol_v1.Switch StepsSwitch = 125;</code>
     *
     * <pre>
     * 步数与odba配置
     * </pre>
     */
    protocol_v1.V1Switch.SwitchOrBuilder getStepsSwitchOrBuilder();

    /**
     * <code>optional .protocol_v1.Switch ActionSwitch = 126;</code>
     *
     * <pre>
     * 步数与odba配置
     * </pre>
     */
    boolean hasActionSwitch();
    /**
     * <code>optional .protocol_v1.Switch ActionSwitch = 126;</code>
     *
     * <pre>
     * 步数与odba配置
     * </pre>
     */
    protocol_v1.V1Switch.Switch getActionSwitch();
    /**
     * <code>optional .protocol_v1.Switch ActionSwitch = 126;</code>
     *
     * <pre>
     * 步数与odba配置
     * </pre>
     */
    protocol_v1.V1Switch.SwitchOrBuilder getActionSwitchOrBuilder();

    /**
     * <code>optional int32 WorkMode = 130 [default = 0];</code>
     *
     * <pre>
     * 0: 待定, 2: 失活模式 (1,3暂不支持)
     * </pre>
     */
    boolean hasWorkMode();
    /**
     * <code>optional int32 WorkMode = 130 [default = 0];</code>
     *
     * <pre>
     * 0: 待定, 2: 失活模式 (1,3暂不支持)
     * </pre>
     */
    int getWorkMode();

    /**
     * <code>optional .protocol_v1.Origin2Setting Origin2Setting = 140;</code>
     *
     * <pre>
     * 原始数据采集参数
     * </pre>
     */
    boolean hasOrigin2Setting();
    /**
     * <code>optional .protocol_v1.Origin2Setting Origin2Setting = 140;</code>
     *
     * <pre>
     * 原始数据采集参数
     * </pre>
     */
    protocol_v1.V1Setting.Origin2Setting getOrigin2Setting();
    /**
     * <code>optional .protocol_v1.Origin2Setting Origin2Setting = 140;</code>
     *
     * <pre>
     * 原始数据采集参数
     * </pre>
     */
    protocol_v1.V1Setting.Origin2SettingOrBuilder getOrigin2SettingOrBuilder();

    /**
     * <code>optional .protocol_v1.BeaconLocationSetting BeaconLocationSetting = 141;</code>
     *
     * <pre>
     * 信标定位参数
     * </pre>
     */
    boolean hasBeaconLocationSetting();
    /**
     * <code>optional .protocol_v1.BeaconLocationSetting BeaconLocationSetting = 141;</code>
     *
     * <pre>
     * 信标定位参数
     * </pre>
     */
    protocol_v1.V1Setting.BeaconLocationSetting getBeaconLocationSetting();
    /**
     * <code>optional .protocol_v1.BeaconLocationSetting BeaconLocationSetting = 141;</code>
     *
     * <pre>
     * 信标定位参数
     * </pre>
     */
    protocol_v1.V1Setting.BeaconLocationSettingOrBuilder getBeaconLocationSettingOrBuilder();

    /**
     * <code>optional .protocol_v1.PowerOffSetting PowerOffSetting = 142;</code>
     *
     * <pre>
     * 计划关机参数
     * </pre>
     */
    boolean hasPowerOffSetting();
    /**
     * <code>optional .protocol_v1.PowerOffSetting PowerOffSetting = 142;</code>
     *
     * <pre>
     * 计划关机参数
     * </pre>
     */
    protocol_v1.V1Setting.PowerOffSetting getPowerOffSetting();
    /**
     * <code>optional .protocol_v1.PowerOffSetting PowerOffSetting = 142;</code>
     *
     * <pre>
     * 计划关机参数
     * </pre>
     */
    protocol_v1.V1Setting.PowerOffSettingOrBuilder getPowerOffSettingOrBuilder();

    /**
     * <code>optional .protocol_v1.ArgosSetting ArgosSetting = 143;</code>
     *
     * <pre>
     *  argos发送配置
     * </pre>
     */
    boolean hasArgosSetting();
    /**
     * <code>optional .protocol_v1.ArgosSetting ArgosSetting = 143;</code>
     *
     * <pre>
     *  argos发送配置
     * </pre>
     */
    protocol_v1.V1Setting.ArgosSetting getArgosSetting();
    /**
     * <code>optional .protocol_v1.ArgosSetting ArgosSetting = 143;</code>
     *
     * <pre>
     *  argos发送配置
     * </pre>
     */
    protocol_v1.V1Setting.ArgosSettingOrBuilder getArgosSettingOrBuilder();

    /**
     * <code>optional .protocol_v1.MagneticSetting Magnetic = 144;</code>
     *
     * <pre>
     * 地磁配置
     * </pre>
     */
    boolean hasMagnetic();
    /**
     * <code>optional .protocol_v1.MagneticSetting Magnetic = 144;</code>
     *
     * <pre>
     * 地磁配置
     * </pre>
     */
    protocol_v1.V1Setting.MagneticSetting getMagnetic();
    /**
     * <code>optional .protocol_v1.MagneticSetting Magnetic = 144;</code>
     *
     * <pre>
     * 地磁配置
     * </pre>
     */
    protocol_v1.V1Setting.MagneticSettingOrBuilder getMagneticOrBuilder();

    /**
     * <code>optional int32 AccOutDataRate = 145 [default = 25];</code>
     *
     * <pre>
     * 加速度传感器采样频率，范围：1 ~ 500Hz
     * </pre>
     */
    boolean hasAccOutDataRate();
    /**
     * <code>optional int32 AccOutDataRate = 145 [default = 25];</code>
     *
     * <pre>
     * 加速度传感器采样频率，范围：1 ~ 500Hz
     * </pre>
     */
    int getAccOutDataRate();

    /**
     * <code>optional .protocol_v1.AlgorithmVersion AlgorithmVersion = 150;</code>
     *
     * <pre>
     * 当前算法版本
     * </pre>
     */
    boolean hasAlgorithmVersion();
    /**
     * <code>optional .protocol_v1.AlgorithmVersion AlgorithmVersion = 150;</code>
     *
     * <pre>
     * 当前算法版本
     * </pre>
     */
    protocol_v1.V1Algorithm.AlgorithmVersion getAlgorithmVersion();
    /**
     * <code>optional .protocol_v1.AlgorithmVersion AlgorithmVersion = 150;</code>
     *
     * <pre>
     * 当前算法版本
     * </pre>
     */
    protocol_v1.V1Algorithm.AlgorithmVersionOrBuilder getAlgorithmVersionOrBuilder();
  }
  /**
   * Protobuf type {@code protocol_v1.Setting}
   */
  public  static final class Setting extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protocol_v1.Setting)
      SettingOrBuilder {
    // Use Setting.newBuilder() to construct.
    private Setting(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Setting() {
      envSampleMode_ = 0;
      envSampleInterval_ = 0;
      behaviorSampleMode_ = 0;
      behaviorSampleInterval_ = 0;
      gPSSampleMode_ = 0;
      gPSSampleInterval_ = 0;
      communicationMode_ = 1;
      communicationInterval_ = 0;
      triggerMode_ = 0;
      resetDevice_ = 0;
      schedulePowerOff_ = 0;
      dailyPowerOffTime_ = 0;
      dailyPowerOnTime_ = 0;
      normalPowerOffTime_ = 0;
      normalPowerOnTime_ = 0;
      oTAFirmwareVersion_ = 0;
      oTAFirmwareID_ = "";
      oTAForceUpgrade_ = 0;
      oTAServerHost_ = "";
      oTAServerPort_ = 0;
      sMSMode_ = 0;
      sMSInterval_ = 0;
      alarmMode_ = 0;
      scheduleSpeaker_ = 0;
      speakerExitTime_ = 0;
      speakerEnterTime_ = 0;
      communicationTimeTable_ = "";
      originTime_ = java.util.Collections.emptyList();
      originMode_ = 0;
      estrusSampleMode_ = 0;
      estrusSampleInterval_ = 0;
      behavior2SampleMode_ = 0;
      behavior2SampleInterval_ = 0;
      voltageBoost_ = java.util.Collections.emptyList();
      randomSecond_ = 0;
      behaviorSampleStrategy_ = 0;
      userPhoneNumber_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      hubMode_ = 0;
      hashSecond_ = 0;
      hashMillisecond_ = 0;
      cellularLocationMode_ = 0;
      workMode_ = 0;
      accOutDataRate_ = 25;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Setting(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              envSampleMode_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              envSampleInterval_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              behaviorSampleMode_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              behaviorSampleInterval_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              gPSSampleMode_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000020;
              gPSSampleInterval_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000040;
              communicationMode_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000080;
              communicationInterval_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000100;
              triggerMode_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00000200;
              resetDevice_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00000400;
              schedulePowerOff_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00000800;
              dailyPowerOffTime_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00001000;
              dailyPowerOnTime_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00002000;
              normalPowerOffTime_ = input.readInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00004000;
              normalPowerOnTime_ = input.readInt32();
              break;
            }
            case 176: {
              bitField0_ |= 0x00008000;
              oTAFirmwareVersion_ = input.readInt32();
              break;
            }
            case 186: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00010000;
              oTAFirmwareID_ = bs;
              break;
            }
            case 192: {
              bitField0_ |= 0x00020000;
              oTAForceUpgrade_ = input.readInt32();
              break;
            }
            case 202: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00040000;
              oTAServerHost_ = bs;
              break;
            }
            case 208: {
              bitField0_ |= 0x00080000;
              oTAServerPort_ = input.readInt32();
              break;
            }
            case 216: {
              bitField0_ |= 0x00100000;
              sMSMode_ = input.readInt32();
              break;
            }
            case 224: {
              bitField0_ |= 0x00200000;
              sMSInterval_ = input.readInt32();
              break;
            }
            case 232: {
              bitField0_ |= 0x00400000;
              alarmMode_ = input.readInt32();
              break;
            }
            case 240: {
              bitField0_ |= 0x00800000;
              scheduleSpeaker_ = input.readInt32();
              break;
            }
            case 248: {
              bitField0_ |= 0x01000000;
              speakerExitTime_ = input.readInt32();
              break;
            }
            case 256: {
              bitField0_ |= 0x02000000;
              speakerEnterTime_ = input.readInt32();
              break;
            }
            case 818: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x04000000;
              communicationTimeTable_ = bs;
              break;
            }
            case 842: {
              if (!((mutable_bitField0_ & 0x08000000) == 0x08000000)) {
                originTime_ = new java.util.ArrayList<protocol_v1.V1Setting.TimeRange>();
                mutable_bitField0_ |= 0x08000000;
              }
              originTime_.add(input.readMessage(protocol_v1.V1Setting.TimeRange.parser(), extensionRegistry));
              break;
            }
            case 848: {
              bitField0_ |= 0x08000000;
              originMode_ = input.readInt32();
              break;
            }
            case 856: {
              bitField0_ |= 0x10000000;
              estrusSampleMode_ = input.readInt32();
              break;
            }
            case 864: {
              bitField0_ |= 0x20000000;
              estrusSampleInterval_ = input.readInt32();
              break;
            }
            case 872: {
              bitField0_ |= 0x40000000;
              behavior2SampleMode_ = input.readInt32();
              break;
            }
            case 880: {
              bitField0_ |= 0x80000000;
              behavior2SampleInterval_ = input.readInt32();
              break;
            }
            case 890: {
              protocol_v1.V1Setting.GprsPowerSaving.Builder subBuilder = null;
              if (((bitField1_ & 0x00000001) == 0x00000001)) {
                subBuilder = gprsPowerSaving_.toBuilder();
              }
              gprsPowerSaving_ = input.readMessage(protocol_v1.V1Setting.GprsPowerSaving.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gprsPowerSaving_);
                gprsPowerSaving_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000001;
              break;
            }
            case 898: {
              if (!((mutable_bitField1_ & 0x00000004) == 0x00000004)) {
                voltageBoost_ = new java.util.ArrayList<protocol_v1.V1Setting.VoltageBoostLevel>();
                mutable_bitField1_ |= 0x00000004;
              }
              voltageBoost_.add(input.readMessage(protocol_v1.V1Setting.VoltageBoostLevel.parser(), extensionRegistry));
              break;
            }
            case 906: {
              protocol_v1.V1Setting.SpeedBoostLevel.Builder subBuilder = null;
              if (((bitField1_ & 0x00000002) == 0x00000002)) {
                subBuilder = speedBoost_.toBuilder();
              }
              speedBoost_ = input.readMessage(protocol_v1.V1Setting.SpeedBoostLevel.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(speedBoost_);
                speedBoost_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000002;
              break;
            }
            case 912: {
              bitField1_ |= 0x00000004;
              randomSecond_ = input.readInt32();
              break;
            }
            case 920: {
              bitField1_ |= 0x00000008;
              behaviorSampleStrategy_ = input.readUInt32();
              break;
            }
            case 930: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField1_ & 0x00000040) == 0x00000040)) {
                userPhoneNumber_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField1_ |= 0x00000040;
              }
              userPhoneNumber_.add(bs);
              break;
            }
            case 960: {
              bitField1_ |= 0x00000010;
              hubMode_ = input.readInt32();
              break;
            }
            case 968: {
              bitField1_ |= 0x00000020;
              hashSecond_ = input.readUInt32();
              break;
            }
            case 976: {
              bitField1_ |= 0x00000040;
              hashMillisecond_ = input.readUInt32();
              break;
            }
            case 992: {
              bitField1_ |= 0x00000080;
              cellularLocationMode_ = input.readInt32();
              break;
            }
            case 1002: {
              protocol_v1.V1Switch.Switch.Builder subBuilder = null;
              if (((bitField1_ & 0x00000100) == 0x00000100)) {
                subBuilder = stepsSwitch_.toBuilder();
              }
              stepsSwitch_ = input.readMessage(protocol_v1.V1Switch.Switch.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(stepsSwitch_);
                stepsSwitch_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000100;
              break;
            }
            case 1010: {
              protocol_v1.V1Switch.Switch.Builder subBuilder = null;
              if (((bitField1_ & 0x00000200) == 0x00000200)) {
                subBuilder = actionSwitch_.toBuilder();
              }
              actionSwitch_ = input.readMessage(protocol_v1.V1Switch.Switch.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(actionSwitch_);
                actionSwitch_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000200;
              break;
            }
            case 1040: {
              bitField1_ |= 0x00000400;
              workMode_ = input.readInt32();
              break;
            }
            case 1122: {
              protocol_v1.V1Setting.Origin2Setting.Builder subBuilder = null;
              if (((bitField1_ & 0x00000800) == 0x00000800)) {
                subBuilder = origin2Setting_.toBuilder();
              }
              origin2Setting_ = input.readMessage(protocol_v1.V1Setting.Origin2Setting.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(origin2Setting_);
                origin2Setting_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000800;
              break;
            }
            case 1130: {
              protocol_v1.V1Setting.BeaconLocationSetting.Builder subBuilder = null;
              if (((bitField1_ & 0x00001000) == 0x00001000)) {
                subBuilder = beaconLocationSetting_.toBuilder();
              }
              beaconLocationSetting_ = input.readMessage(protocol_v1.V1Setting.BeaconLocationSetting.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(beaconLocationSetting_);
                beaconLocationSetting_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00001000;
              break;
            }
            case 1138: {
              protocol_v1.V1Setting.PowerOffSetting.Builder subBuilder = null;
              if (((bitField1_ & 0x00002000) == 0x00002000)) {
                subBuilder = powerOffSetting_.toBuilder();
              }
              powerOffSetting_ = input.readMessage(protocol_v1.V1Setting.PowerOffSetting.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(powerOffSetting_);
                powerOffSetting_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00002000;
              break;
            }
            case 1146: {
              protocol_v1.V1Setting.ArgosSetting.Builder subBuilder = null;
              if (((bitField1_ & 0x00004000) == 0x00004000)) {
                subBuilder = argosSetting_.toBuilder();
              }
              argosSetting_ = input.readMessage(protocol_v1.V1Setting.ArgosSetting.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(argosSetting_);
                argosSetting_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00004000;
              break;
            }
            case 1154: {
              protocol_v1.V1Setting.MagneticSetting.Builder subBuilder = null;
              if (((bitField1_ & 0x00008000) == 0x00008000)) {
                subBuilder = magnetic_.toBuilder();
              }
              magnetic_ = input.readMessage(protocol_v1.V1Setting.MagneticSetting.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(magnetic_);
                magnetic_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00008000;
              break;
            }
            case 1160: {
              bitField1_ |= 0x00010000;
              accOutDataRate_ = input.readInt32();
              break;
            }
            case 1202: {
              protocol_v1.V1Algorithm.AlgorithmVersion.Builder subBuilder = null;
              if (((bitField1_ & 0x00020000) == 0x00020000)) {
                subBuilder = algorithmVersion_.toBuilder();
              }
              algorithmVersion_ = input.readMessage(protocol_v1.V1Algorithm.AlgorithmVersion.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(algorithmVersion_);
                algorithmVersion_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00020000;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x08000000) == 0x08000000)) {
          originTime_ = java.util.Collections.unmodifiableList(originTime_);
        }
        if (((mutable_bitField1_ & 0x00000004) == 0x00000004)) {
          voltageBoost_ = java.util.Collections.unmodifiableList(voltageBoost_);
        }
        if (((mutable_bitField1_ & 0x00000040) == 0x00000040)) {
          userPhoneNumber_ = userPhoneNumber_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol_v1.V1Setting.internal_static_protocol_v1_Setting_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol_v1.V1Setting.internal_static_protocol_v1_Setting_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol_v1.V1Setting.Setting.class, protocol_v1.V1Setting.Setting.Builder.class);
    }

    private int bitField0_;
    private int bitField1_;
    public static final int ENVSAMPLEMODE_FIELD_NUMBER = 1;
    private int envSampleMode_;
    /**
     * <code>optional int32 EnvSampleMode = 1 [default = 0];</code>
     *
     * <pre>
     * 环境采样模式: 0 - 关闭, 1 - 定时采样
     * </pre>
     */
    public boolean hasEnvSampleMode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 EnvSampleMode = 1 [default = 0];</code>
     *
     * <pre>
     * 环境采样模式: 0 - 关闭, 1 - 定时采样
     * </pre>
     */
    public int getEnvSampleMode() {
      return envSampleMode_;
    }

    public static final int ENVSAMPLEINTERVAL_FIELD_NUMBER = 2;
    private int envSampleInterval_;
    /**
     * <code>optional int32 EnvSampleInterval = 2 [default = 0];</code>
     *
     * <pre>
     * 环境采样间隔: 秒
     * </pre>
     */
    public boolean hasEnvSampleInterval() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 EnvSampleInterval = 2 [default = 0];</code>
     *
     * <pre>
     * 环境采样间隔: 秒
     * </pre>
     */
    public int getEnvSampleInterval() {
      return envSampleInterval_;
    }

    public static final int BEHAVIORSAMPLEMODE_FIELD_NUMBER = 4;
    private int behaviorSampleMode_;
    /**
     * <code>optional int32 BehaviorSampleMode = 4 [default = 0];</code>
     *
     * <pre>
     * (第三方)行为采样模式: 0 - 关闭, 1 - 定时采样
     * </pre>
     */
    public boolean hasBehaviorSampleMode() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 BehaviorSampleMode = 4 [default = 0];</code>
     *
     * <pre>
     * (第三方)行为采样模式: 0 - 关闭, 1 - 定时采样
     * </pre>
     */
    public int getBehaviorSampleMode() {
      return behaviorSampleMode_;
    }

    public static final int BEHAVIORSAMPLEINTERVAL_FIELD_NUMBER = 5;
    private int behaviorSampleInterval_;
    /**
     * <code>optional int32 BehaviorSampleInterval = 5 [default = 0];</code>
     *
     * <pre>
     * (第三方)行为采样间隔: 秒
     * </pre>
     */
    public boolean hasBehaviorSampleInterval() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 BehaviorSampleInterval = 5 [default = 0];</code>
     *
     * <pre>
     * (第三方)行为采样间隔: 秒
     * </pre>
     */
    public int getBehaviorSampleInterval() {
      return behaviorSampleInterval_;
    }

    public static final int GPSSAMPLEMODE_FIELD_NUMBER = 7;
    private int gPSSampleMode_;
    /**
     * <code>optional int32 GPSSampleMode = 7 [default = 0];</code>
     *
     * <pre>
     * GPS采样模式: 0 - 关闭, 1 - 定时采样, 2 - 持续开启(功耗高, 不推荐)
     * </pre>
     */
    public boolean hasGPSSampleMode() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 GPSSampleMode = 7 [default = 0];</code>
     *
     * <pre>
     * GPS采样模式: 0 - 关闭, 1 - 定时采样, 2 - 持续开启(功耗高, 不推荐)
     * </pre>
     */
    public int getGPSSampleMode() {
      return gPSSampleMode_;
    }

    public static final int GPSSAMPLEINTERVAL_FIELD_NUMBER = 8;
    private int gPSSampleInterval_;
    /**
     * <code>optional int32 GPSSampleInterval = 8 [default = 0];</code>
     *
     * <pre>
     * GPS采样间隔: 秒
     * </pre>
     */
    public boolean hasGPSSampleInterval() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 GPSSampleInterval = 8 [default = 0];</code>
     *
     * <pre>
     * GPS采样间隔: 秒
     * </pre>
     */
    public int getGPSSampleInterval() {
      return gPSSampleInterval_;
    }

    public static final int COMMUNICATIONMODE_FIELD_NUMBER = 10;
    private int communicationMode_;
    /**
     * <code>optional int32 CommunicationMode = 10 [default = 1];</code>
     *
     * <pre>
     * 通信模式: 0 - 未定义, 1 - 周期模式, 2 - 持续在线(适合eDRX), 101 - 整点回传
     * </pre>
     */
    public boolean hasCommunicationMode() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 CommunicationMode = 10 [default = 1];</code>
     *
     * <pre>
     * 通信模式: 0 - 未定义, 1 - 周期模式, 2 - 持续在线(适合eDRX), 101 - 整点回传
     * </pre>
     */
    public int getCommunicationMode() {
      return communicationMode_;
    }

    public static final int COMMUNICATIONINTERVAL_FIELD_NUMBER = 11;
    private int communicationInterval_;
    /**
     * <code>optional int32 CommunicationInterval = 11 [default = 0];</code>
     *
     * <pre>
     * 通信间隔: 秒
     * </pre>
     */
    public boolean hasCommunicationInterval() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 CommunicationInterval = 11 [default = 0];</code>
     *
     * <pre>
     * 通信间隔: 秒
     * </pre>
     */
    public int getCommunicationInterval() {
      return communicationInterval_;
    }

    public static final int TRIGGERMODE_FIELD_NUMBER = 14;
    private int triggerMode_;
    /**
     * <code>optional int32 TriggerMode = 14 [default = 0];</code>
     *
     * <pre>
     * 触发器模式: 0 - 关闭, 1 - 开启
     * </pre>
     */
    public boolean hasTriggerMode() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 TriggerMode = 14 [default = 0];</code>
     *
     * <pre>
     * 触发器模式: 0 - 关闭, 1 - 开启
     * </pre>
     */
    public int getTriggerMode() {
      return triggerMode_;
    }

    public static final int RESETDEVICE_FIELD_NUMBER = 16;
    private int resetDevice_;
    /**
     * <code>optional int32 ResetDevice = 16 [default = 0];</code>
     *
     * <pre>
     * 复位请求: 0 - 不复位, 1 - 这次通信结束后立即复位
     * </pre>
     */
    public boolean hasResetDevice() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 ResetDevice = 16 [default = 0];</code>
     *
     * <pre>
     * 复位请求: 0 - 不复位, 1 - 这次通信结束后立即复位
     * </pre>
     */
    public int getResetDevice() {
      return resetDevice_;
    }

    public static final int SCHEDULEPOWEROFF_FIELD_NUMBER = 17;
    private int schedulePowerOff_;
    /**
     * <code>optional int32 SchedulePowerOff = 17 [default = 0];</code>
     *
     * <pre>
     * 关机计划: 0 - 不关机, 1 - 每天指定时段关机, 2 - 连续多天关机
     * </pre>
     */
    public boolean hasSchedulePowerOff() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 SchedulePowerOff = 17 [default = 0];</code>
     *
     * <pre>
     * 关机计划: 0 - 不关机, 1 - 每天指定时段关机, 2 - 连续多天关机
     * </pre>
     */
    public int getSchedulePowerOff() {
      return schedulePowerOff_;
    }

    public static final int DAILYPOWEROFFTIME_FIELD_NUMBER = 18;
    private int dailyPowerOffTime_;
    /**
     * <code>optional int32 DailyPowerOffTime = 18 [default = 0];</code>
     *
     * <pre>
     * 每天关机起始时间: UTC时间戳, 只使用小时和分钟
     * </pre>
     */
    public boolean hasDailyPowerOffTime() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 DailyPowerOffTime = 18 [default = 0];</code>
     *
     * <pre>
     * 每天关机起始时间: UTC时间戳, 只使用小时和分钟
     * </pre>
     */
    public int getDailyPowerOffTime() {
      return dailyPowerOffTime_;
    }

    public static final int DAILYPOWERONTIME_FIELD_NUMBER = 19;
    private int dailyPowerOnTime_;
    /**
     * <code>optional int32 DailyPowerOnTime = 19 [default = 0];</code>
     *
     * <pre>
     * 每天关机结束时间: UTC时间戳, 只使用小时和分钟
     * </pre>
     */
    public boolean hasDailyPowerOnTime() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 DailyPowerOnTime = 19 [default = 0];</code>
     *
     * <pre>
     * 每天关机结束时间: UTC时间戳, 只使用小时和分钟
     * </pre>
     */
    public int getDailyPowerOnTime() {
      return dailyPowerOnTime_;
    }

    public static final int NORMALPOWEROFFTIME_FIELD_NUMBER = 20;
    private int normalPowerOffTime_;
    /**
     * <code>optional int32 NormalPowerOffTime = 20 [default = 0];</code>
     *
     * <pre>
     * 连续关机起始日期: UTC时间戳
     * </pre>
     */
    public boolean hasNormalPowerOffTime() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 NormalPowerOffTime = 20 [default = 0];</code>
     *
     * <pre>
     * 连续关机起始日期: UTC时间戳
     * </pre>
     */
    public int getNormalPowerOffTime() {
      return normalPowerOffTime_;
    }

    public static final int NORMALPOWERONTIME_FIELD_NUMBER = 21;
    private int normalPowerOnTime_;
    /**
     * <code>optional int32 NormalPowerOnTime = 21 [default = 0];</code>
     *
     * <pre>
     * 连续关机结束日期: UTC时间戳
     * </pre>
     */
    public boolean hasNormalPowerOnTime() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 NormalPowerOnTime = 21 [default = 0];</code>
     *
     * <pre>
     * 连续关机结束日期: UTC时间戳
     * </pre>
     */
    public int getNormalPowerOnTime() {
      return normalPowerOnTime_;
    }

    public static final int OTAFIRMWAREVERSION_FIELD_NUMBER = 22;
    private int oTAFirmwareVersion_;
    /**
     * <code>optional int32 OTAFirmwareVersion = 22 [default = 0];</code>
     *
     * <pre>
     * OTA固件版本
     * </pre>
     */
    public boolean hasOTAFirmwareVersion() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 OTAFirmwareVersion = 22 [default = 0];</code>
     *
     * <pre>
     * OTA固件版本
     * </pre>
     */
    public int getOTAFirmwareVersion() {
      return oTAFirmwareVersion_;
    }

    public static final int OTAFIRMWAREID_FIELD_NUMBER = 23;
    private volatile java.lang.Object oTAFirmwareID_;
    /**
     * <code>optional string OTAFirmwareID = 23 [default = ""];</code>
     *
     * <pre>
     * OTA固件标识
     * </pre>
     */
    public boolean hasOTAFirmwareID() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional string OTAFirmwareID = 23 [default = ""];</code>
     *
     * <pre>
     * OTA固件标识
     * </pre>
     */
    public java.lang.String getOTAFirmwareID() {
      java.lang.Object ref = oTAFirmwareID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          oTAFirmwareID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string OTAFirmwareID = 23 [default = ""];</code>
     *
     * <pre>
     * OTA固件标识
     * </pre>
     */
    public com.google.protobuf.ByteString
        getOTAFirmwareIDBytes() {
      java.lang.Object ref = oTAFirmwareID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        oTAFirmwareID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OTAFORCEUPGRADE_FIELD_NUMBER = 24;
    private int oTAForceUpgrade_;
    /**
     * <code>optional int32 OTAForceUpgrade = 24 [default = 0];</code>
     *
     * <pre>
     * OTA强制执行(丢弃数据, 立即升级)
     * </pre>
     */
    public boolean hasOTAForceUpgrade() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 OTAForceUpgrade = 24 [default = 0];</code>
     *
     * <pre>
     * OTA强制执行(丢弃数据, 立即升级)
     * </pre>
     */
    public int getOTAForceUpgrade() {
      return oTAForceUpgrade_;
    }

    public static final int OTASERVERHOST_FIELD_NUMBER = 25;
    private volatile java.lang.Object oTAServerHost_;
    /**
     * <code>optional string OTAServerHost = 25 [default = ""];</code>
     *
     * <pre>
     * OTA服务器域名或地址
     * </pre>
     */
    public boolean hasOTAServerHost() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional string OTAServerHost = 25 [default = ""];</code>
     *
     * <pre>
     * OTA服务器域名或地址
     * </pre>
     */
    public java.lang.String getOTAServerHost() {
      java.lang.Object ref = oTAServerHost_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          oTAServerHost_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string OTAServerHost = 25 [default = ""];</code>
     *
     * <pre>
     * OTA服务器域名或地址
     * </pre>
     */
    public com.google.protobuf.ByteString
        getOTAServerHostBytes() {
      java.lang.Object ref = oTAServerHost_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        oTAServerHost_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OTASERVERPORT_FIELD_NUMBER = 26;
    private int oTAServerPort_;
    /**
     * <code>optional int32 OTAServerPort = 26 [default = 0];</code>
     *
     * <pre>
     * OTA服务器端口
     * </pre>
     */
    public boolean hasOTAServerPort() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int32 OTAServerPort = 26 [default = 0];</code>
     *
     * <pre>
     * OTA服务器端口
     * </pre>
     */
    public int getOTAServerPort() {
      return oTAServerPort_;
    }

    public static final int SMSMODE_FIELD_NUMBER = 27;
    private int sMSMode_;
    /**
     * <code>optional int32 SMSMode = 27 [default = 0];</code>
     *
     * <pre>
     * 短信上传模式: 0 - 关闭, 1 - 定时上传, 2 - 辅助上传(网络通信失败时上传)
     * </pre>
     */
    public boolean hasSMSMode() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int32 SMSMode = 27 [default = 0];</code>
     *
     * <pre>
     * 短信上传模式: 0 - 关闭, 1 - 定时上传, 2 - 辅助上传(网络通信失败时上传)
     * </pre>
     */
    public int getSMSMode() {
      return sMSMode_;
    }

    public static final int SMSINTERVAL_FIELD_NUMBER = 28;
    private int sMSInterval_;
    /**
     * <code>optional int32 SMSInterval = 28 [default = 0];</code>
     *
     * <pre>
     * 短信上传间隔: 秒
     * </pre>
     */
    public boolean hasSMSInterval() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int32 SMSInterval = 28 [default = 0];</code>
     *
     * <pre>
     * 短信上传间隔: 秒
     * </pre>
     */
    public int getSMSInterval() {
      return sMSInterval_;
    }

    public static final int ALARMMODE_FIELD_NUMBER = 29;
    private int alarmMode_;
    /**
     * <code>optional int32 AlarmMode = 29 [default = 0];</code>
     *
     * <pre>
     * 报警模式: 0 - 关闭, 1 - 数传报警, 2 - 短信报警, 3 - 数传+短信
     * </pre>
     */
    public boolean hasAlarmMode() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int32 AlarmMode = 29 [default = 0];</code>
     *
     * <pre>
     * 报警模式: 0 - 关闭, 1 - 数传报警, 2 - 短信报警, 3 - 数传+短信
     * </pre>
     */
    public int getAlarmMode() {
      return alarmMode_;
    }

    public static final int SCHEDULESPEAKER_FIELD_NUMBER = 30;
    private int scheduleSpeaker_;
    /**
     * <code>optional int32 ScheduleSpeaker = 30 [default = 0];</code>
     *
     * <pre>
     * 语音播报计划: 0 - 不播报, 1 - 每天准时播报
     * </pre>
     */
    public boolean hasScheduleSpeaker() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int32 ScheduleSpeaker = 30 [default = 0];</code>
     *
     * <pre>
     * 语音播报计划: 0 - 不播报, 1 - 每天准时播报
     * </pre>
     */
    public int getScheduleSpeaker() {
      return scheduleSpeaker_;
    }

    public static final int SPEAKEREXITTIME_FIELD_NUMBER = 31;
    private int speakerExitTime_;
    /**
     * <code>optional int32 SpeakerExitTime = 31 [default = 0];</code>
     *
     * <pre>
     * 每天出栏播报时间: UTC时间戳, 只使用小时和分钟
     * </pre>
     */
    public boolean hasSpeakerExitTime() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int32 SpeakerExitTime = 31 [default = 0];</code>
     *
     * <pre>
     * 每天出栏播报时间: UTC时间戳, 只使用小时和分钟
     * </pre>
     */
    public int getSpeakerExitTime() {
      return speakerExitTime_;
    }

    public static final int SPEAKERENTERTIME_FIELD_NUMBER = 32;
    private int speakerEnterTime_;
    /**
     * <code>optional int32 SpeakerEnterTime = 32 [default = 0];</code>
     *
     * <pre>
     * 每天进栏播报时间: UTC时间戳, 只使用小时和分钟
     * </pre>
     */
    public boolean hasSpeakerEnterTime() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional int32 SpeakerEnterTime = 32 [default = 0];</code>
     *
     * <pre>
     * 每天进栏播报时间: UTC时间戳, 只使用小时和分钟
     * </pre>
     */
    public int getSpeakerEnterTime() {
      return speakerEnterTime_;
    }

    public static final int COMMUNICATIONTIMETABLE_FIELD_NUMBER = 102;
    private volatile java.lang.Object communicationTimeTable_;
    /**
     * <code>optional string CommunicationTimeTable = 102 [default = ""];</code>
     *
     * <pre>
     * 整点回传时间表
     * </pre>
     */
    public boolean hasCommunicationTimeTable() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional string CommunicationTimeTable = 102 [default = ""];</code>
     *
     * <pre>
     * 整点回传时间表
     * </pre>
     */
    public java.lang.String getCommunicationTimeTable() {
      java.lang.Object ref = communicationTimeTable_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          communicationTimeTable_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string CommunicationTimeTable = 102 [default = ""];</code>
     *
     * <pre>
     * 整点回传时间表
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCommunicationTimeTableBytes() {
      java.lang.Object ref = communicationTimeTable_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        communicationTimeTable_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ORIGINTIME_FIELD_NUMBER = 105;
    private java.util.List<protocol_v1.V1Setting.TimeRange> originTime_;
    /**
     * <code>repeated .protocol_v1.TimeRange OriginTime = 105;</code>
     *
     * <pre>
     * repeated TimeRange PowerOffTime = 103; // 【废弃】计划关机时间范围
     * optional int32 PowerOffMode = 104 [default=0]; // 【废弃】0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
     * </pre>
     */
    public java.util.List<protocol_v1.V1Setting.TimeRange> getOriginTimeList() {
      return originTime_;
    }
    /**
     * <code>repeated .protocol_v1.TimeRange OriginTime = 105;</code>
     *
     * <pre>
     * repeated TimeRange PowerOffTime = 103; // 【废弃】计划关机时间范围
     * optional int32 PowerOffMode = 104 [default=0]; // 【废弃】0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
     * </pre>
     */
    public java.util.List<? extends protocol_v1.V1Setting.TimeRangeOrBuilder> 
        getOriginTimeOrBuilderList() {
      return originTime_;
    }
    /**
     * <code>repeated .protocol_v1.TimeRange OriginTime = 105;</code>
     *
     * <pre>
     * repeated TimeRange PowerOffTime = 103; // 【废弃】计划关机时间范围
     * optional int32 PowerOffMode = 104 [default=0]; // 【废弃】0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
     * </pre>
     */
    public int getOriginTimeCount() {
      return originTime_.size();
    }
    /**
     * <code>repeated .protocol_v1.TimeRange OriginTime = 105;</code>
     *
     * <pre>
     * repeated TimeRange PowerOffTime = 103; // 【废弃】计划关机时间范围
     * optional int32 PowerOffMode = 104 [default=0]; // 【废弃】0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
     * </pre>
     */
    public protocol_v1.V1Setting.TimeRange getOriginTime(int index) {
      return originTime_.get(index);
    }
    /**
     * <code>repeated .protocol_v1.TimeRange OriginTime = 105;</code>
     *
     * <pre>
     * repeated TimeRange PowerOffTime = 103; // 【废弃】计划关机时间范围
     * optional int32 PowerOffMode = 104 [default=0]; // 【废弃】0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
     * </pre>
     */
    public protocol_v1.V1Setting.TimeRangeOrBuilder getOriginTimeOrBuilder(
        int index) {
      return originTime_.get(index);
    }

    public static final int ORIGINMODE_FIELD_NUMBER = 106;
    private int originMode_;
    /**
     * <code>optional int32 OriginMode = 106 [default = 0];</code>
     *
     * <pre>
     * 0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
     * </pre>
     */
    public boolean hasOriginMode() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional int32 OriginMode = 106 [default = 0];</code>
     *
     * <pre>
     * 0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
     * </pre>
     */
    public int getOriginMode() {
      return originMode_;
    }

    public static final int ESTRUSSAMPLEMODE_FIELD_NUMBER = 107;
    private int estrusSampleMode_;
    /**
     * <code>optional int32 EstrusSampleMode = 107 [default = 0];</code>
     *
     * <pre>
     * 发情中间结果模式: 0 - 关闭, 1 - 定时采样
     * </pre>
     */
    public boolean hasEstrusSampleMode() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional int32 EstrusSampleMode = 107 [default = 0];</code>
     *
     * <pre>
     * 发情中间结果模式: 0 - 关闭, 1 - 定时采样
     * </pre>
     */
    public int getEstrusSampleMode() {
      return estrusSampleMode_;
    }

    public static final int ESTRUSSAMPLEINTERVAL_FIELD_NUMBER = 108;
    private int estrusSampleInterval_;
    /**
     * <code>optional int32 EstrusSampleInterval = 108 [default = 0];</code>
     *
     * <pre>
     * 发情中间结果间隔: 秒
     * </pre>
     */
    public boolean hasEstrusSampleInterval() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional int32 EstrusSampleInterval = 108 [default = 0];</code>
     *
     * <pre>
     * 发情中间结果间隔: 秒
     * </pre>
     */
    public int getEstrusSampleInterval() {
      return estrusSampleInterval_;
    }

    public static final int BEHAVIOR2SAMPLEMODE_FIELD_NUMBER = 109;
    private int behavior2SampleMode_;
    /**
     * <code>optional int32 Behavior2SampleMode = 109 [default = 0];</code>
     *
     * <pre>
     * 行为采样模式: 0 - 关闭, 1 - 定时采样
     * </pre>
     */
    public boolean hasBehavior2SampleMode() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional int32 Behavior2SampleMode = 109 [default = 0];</code>
     *
     * <pre>
     * 行为采样模式: 0 - 关闭, 1 - 定时采样
     * </pre>
     */
    public int getBehavior2SampleMode() {
      return behavior2SampleMode_;
    }

    public static final int BEHAVIOR2SAMPLEINTERVAL_FIELD_NUMBER = 110;
    private int behavior2SampleInterval_;
    /**
     * <code>optional int32 Behavior2SampleInterval = 110 [default = 0];</code>
     *
     * <pre>
     * 行为采样间隔: 秒
     * </pre>
     */
    public boolean hasBehavior2SampleInterval() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional int32 Behavior2SampleInterval = 110 [default = 0];</code>
     *
     * <pre>
     * 行为采样间隔: 秒
     * </pre>
     */
    public int getBehavior2SampleInterval() {
      return behavior2SampleInterval_;
    }

    public static final int GPRSPOWERSAVING_FIELD_NUMBER = 111;
    private protocol_v1.V1Setting.GprsPowerSaving gprsPowerSaving_;
    /**
     * <code>optional .protocol_v1.GprsPowerSaving GprsPowerSaving = 111;</code>
     *
     * <pre>
     * 上传节电模式
     * </pre>
     */
    public boolean hasGprsPowerSaving() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .protocol_v1.GprsPowerSaving GprsPowerSaving = 111;</code>
     *
     * <pre>
     * 上传节电模式
     * </pre>
     */
    public protocol_v1.V1Setting.GprsPowerSaving getGprsPowerSaving() {
      return gprsPowerSaving_ == null ? protocol_v1.V1Setting.GprsPowerSaving.getDefaultInstance() : gprsPowerSaving_;
    }
    /**
     * <code>optional .protocol_v1.GprsPowerSaving GprsPowerSaving = 111;</code>
     *
     * <pre>
     * 上传节电模式
     * </pre>
     */
    public protocol_v1.V1Setting.GprsPowerSavingOrBuilder getGprsPowerSavingOrBuilder() {
      return gprsPowerSaving_ == null ? protocol_v1.V1Setting.GprsPowerSaving.getDefaultInstance() : gprsPowerSaving_;
    }

    public static final int VOLTAGEBOOST_FIELD_NUMBER = 112;
    private java.util.List<protocol_v1.V1Setting.VoltageBoostLevel> voltageBoost_;
    /**
     * <code>repeated .protocol_v1.VoltageBoostLevel VoltageBoost = 112;</code>
     *
     * <pre>
     * 电压Boost配置, 按电压门限由高到低排列, 最多支持4级
     * </pre>
     */
    public java.util.List<protocol_v1.V1Setting.VoltageBoostLevel> getVoltageBoostList() {
      return voltageBoost_;
    }
    /**
     * <code>repeated .protocol_v1.VoltageBoostLevel VoltageBoost = 112;</code>
     *
     * <pre>
     * 电压Boost配置, 按电压门限由高到低排列, 最多支持4级
     * </pre>
     */
    public java.util.List<? extends protocol_v1.V1Setting.VoltageBoostLevelOrBuilder> 
        getVoltageBoostOrBuilderList() {
      return voltageBoost_;
    }
    /**
     * <code>repeated .protocol_v1.VoltageBoostLevel VoltageBoost = 112;</code>
     *
     * <pre>
     * 电压Boost配置, 按电压门限由高到低排列, 最多支持4级
     * </pre>
     */
    public int getVoltageBoostCount() {
      return voltageBoost_.size();
    }
    /**
     * <code>repeated .protocol_v1.VoltageBoostLevel VoltageBoost = 112;</code>
     *
     * <pre>
     * 电压Boost配置, 按电压门限由高到低排列, 最多支持4级
     * </pre>
     */
    public protocol_v1.V1Setting.VoltageBoostLevel getVoltageBoost(int index) {
      return voltageBoost_.get(index);
    }
    /**
     * <code>repeated .protocol_v1.VoltageBoostLevel VoltageBoost = 112;</code>
     *
     * <pre>
     * 电压Boost配置, 按电压门限由高到低排列, 最多支持4级
     * </pre>
     */
    public protocol_v1.V1Setting.VoltageBoostLevelOrBuilder getVoltageBoostOrBuilder(
        int index) {
      return voltageBoost_.get(index);
    }

    public static final int SPEEDBOOST_FIELD_NUMBER = 113;
    private protocol_v1.V1Setting.SpeedBoostLevel speedBoost_;
    /**
     * <code>optional .protocol_v1.SpeedBoostLevel SpeedBoost = 113;</code>
     *
     * <pre>
     * 速度Boost配置
     * </pre>
     */
    public boolean hasSpeedBoost() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .protocol_v1.SpeedBoostLevel SpeedBoost = 113;</code>
     *
     * <pre>
     * 速度Boost配置
     * </pre>
     */
    public protocol_v1.V1Setting.SpeedBoostLevel getSpeedBoost() {
      return speedBoost_ == null ? protocol_v1.V1Setting.SpeedBoostLevel.getDefaultInstance() : speedBoost_;
    }
    /**
     * <code>optional .protocol_v1.SpeedBoostLevel SpeedBoost = 113;</code>
     *
     * <pre>
     * 速度Boost配置
     * </pre>
     */
    public protocol_v1.V1Setting.SpeedBoostLevelOrBuilder getSpeedBoostOrBuilder() {
      return speedBoost_ == null ? protocol_v1.V1Setting.SpeedBoostLevel.getDefaultInstance() : speedBoost_;
    }

    public static final int RANDOMSECOND_FIELD_NUMBER = 114;
    private int randomSecond_;
    /**
     * <code>optional int32 RandomSecond = 114 [default = 0];</code>
     *
     * <pre>
     * 随机秒数, 回传时间增加随机秒数
     * </pre>
     */
    public boolean hasRandomSecond() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 RandomSecond = 114 [default = 0];</code>
     *
     * <pre>
     * 随机秒数, 回传时间增加随机秒数
     * </pre>
     */
    public int getRandomSecond() {
      return randomSecond_;
    }

    public static final int BEHAVIORSAMPLESTRATEGY_FIELD_NUMBER = 115;
    private int behaviorSampleStrategy_;
    /**
     * <code>optional uint32 BehaviorSampleStrategy = 115 [default = 0];</code>
     *
     * <pre>
     * 行为采样位掩码: bit0 - ODBA, bit1 - ODBAxyz + MeanDLxyz, bit2 - 行为分析, bit3 - 发情检测, bit4 - 计步器
     * </pre>
     */
    public boolean hasBehaviorSampleStrategy() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 BehaviorSampleStrategy = 115 [default = 0];</code>
     *
     * <pre>
     * 行为采样位掩码: bit0 - ODBA, bit1 - ODBAxyz + MeanDLxyz, bit2 - 行为分析, bit3 - 发情检测, bit4 - 计步器
     * </pre>
     */
    public int getBehaviorSampleStrategy() {
      return behaviorSampleStrategy_;
    }

    public static final int USERPHONENUMBER_FIELD_NUMBER = 116;
    private com.google.protobuf.LazyStringList userPhoneNumber_;
    /**
     * <code>repeated string UserPhoneNumber = 116;</code>
     *
     * <pre>
     * 用户电话号码, 唤醒白名单&amp;报警接收机号码
     * </pre>
     */
    public com.google.protobuf.ProtocolStringList
        getUserPhoneNumberList() {
      return userPhoneNumber_;
    }
    /**
     * <code>repeated string UserPhoneNumber = 116;</code>
     *
     * <pre>
     * 用户电话号码, 唤醒白名单&amp;报警接收机号码
     * </pre>
     */
    public int getUserPhoneNumberCount() {
      return userPhoneNumber_.size();
    }
    /**
     * <code>repeated string UserPhoneNumber = 116;</code>
     *
     * <pre>
     * 用户电话号码, 唤醒白名单&amp;报警接收机号码
     * </pre>
     */
    public java.lang.String getUserPhoneNumber(int index) {
      return userPhoneNumber_.get(index);
    }
    /**
     * <code>repeated string UserPhoneNumber = 116;</code>
     *
     * <pre>
     * 用户电话号码, 唤醒白名单&amp;报警接收机号码
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUserPhoneNumberBytes(int index) {
      return userPhoneNumber_.getByteString(index);
    }

    public static final int HUBMODE_FIELD_NUMBER = 120;
    private int hubMode_;
    /**
     * <code>optional int32 HubMode = 120 [default = 0];</code>
     *
     * <pre>
     * 0: disable, 1: ble hub
     * </pre>
     */
    public boolean hasHubMode() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 HubMode = 120 [default = 0];</code>
     *
     * <pre>
     * 0: disable, 1: ble hub
     * </pre>
     */
    public int getHubMode() {
      return hubMode_;
    }

    public static final int HASHSECOND_FIELD_NUMBER = 121;
    private int hashSecond_;
    /**
     * <code>optional uint32 HashSecond = 121 [default = 0];</code>
     *
     * <pre>
     * setting hash, 目前为setting修改时间(updated_at)的秒, 为unix time
     * </pre>
     */
    public boolean hasHashSecond() {
      return ((bitField1_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 HashSecond = 121 [default = 0];</code>
     *
     * <pre>
     * setting hash, 目前为setting修改时间(updated_at)的秒, 为unix time
     * </pre>
     */
    public int getHashSecond() {
      return hashSecond_;
    }

    public static final int HASHMILLISECOND_FIELD_NUMBER = 122;
    private int hashMillisecond_;
    /**
     * <code>optional uint32 HashMillisecond = 122 [default = 0];</code>
     *
     * <pre>
     * setting hash, 目前为setting修改时间(updated_at)的毫秒
     * </pre>
     */
    public boolean hasHashMillisecond() {
      return ((bitField1_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 HashMillisecond = 122 [default = 0];</code>
     *
     * <pre>
     * setting hash, 目前为setting修改时间(updated_at)的毫秒
     * </pre>
     */
    public int getHashMillisecond() {
      return hashMillisecond_;
    }

    public static final int CELLULARLOCATIONMODE_FIELD_NUMBER = 124;
    private int cellularLocationMode_;
    /**
     * <code>optional int32 CellularLocationMode = 124;</code>
     *
     * <pre>
     * 基站定位开关： 0 - 关闭,  非0 - 开启
     * </pre>
     */
    public boolean hasCellularLocationMode() {
      return ((bitField1_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 CellularLocationMode = 124;</code>
     *
     * <pre>
     * 基站定位开关： 0 - 关闭,  非0 - 开启
     * </pre>
     */
    public int getCellularLocationMode() {
      return cellularLocationMode_;
    }

    public static final int STEPSSWITCH_FIELD_NUMBER = 125;
    private protocol_v1.V1Switch.Switch stepsSwitch_;
    /**
     * <code>optional .protocol_v1.Switch StepsSwitch = 125;</code>
     *
     * <pre>
     * 步数与odba配置
     * </pre>
     */
    public boolean hasStepsSwitch() {
      return ((bitField1_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .protocol_v1.Switch StepsSwitch = 125;</code>
     *
     * <pre>
     * 步数与odba配置
     * </pre>
     */
    public protocol_v1.V1Switch.Switch getStepsSwitch() {
      return stepsSwitch_ == null ? protocol_v1.V1Switch.Switch.getDefaultInstance() : stepsSwitch_;
    }
    /**
     * <code>optional .protocol_v1.Switch StepsSwitch = 125;</code>
     *
     * <pre>
     * 步数与odba配置
     * </pre>
     */
    public protocol_v1.V1Switch.SwitchOrBuilder getStepsSwitchOrBuilder() {
      return stepsSwitch_ == null ? protocol_v1.V1Switch.Switch.getDefaultInstance() : stepsSwitch_;
    }

    public static final int ACTIONSWITCH_FIELD_NUMBER = 126;
    private protocol_v1.V1Switch.Switch actionSwitch_;
    /**
     * <code>optional .protocol_v1.Switch ActionSwitch = 126;</code>
     *
     * <pre>
     * 步数与odba配置
     * </pre>
     */
    public boolean hasActionSwitch() {
      return ((bitField1_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .protocol_v1.Switch ActionSwitch = 126;</code>
     *
     * <pre>
     * 步数与odba配置
     * </pre>
     */
    public protocol_v1.V1Switch.Switch getActionSwitch() {
      return actionSwitch_ == null ? protocol_v1.V1Switch.Switch.getDefaultInstance() : actionSwitch_;
    }
    /**
     * <code>optional .protocol_v1.Switch ActionSwitch = 126;</code>
     *
     * <pre>
     * 步数与odba配置
     * </pre>
     */
    public protocol_v1.V1Switch.SwitchOrBuilder getActionSwitchOrBuilder() {
      return actionSwitch_ == null ? protocol_v1.V1Switch.Switch.getDefaultInstance() : actionSwitch_;
    }

    public static final int WORKMODE_FIELD_NUMBER = 130;
    private int workMode_;
    /**
     * <code>optional int32 WorkMode = 130 [default = 0];</code>
     *
     * <pre>
     * 0: 待定, 2: 失活模式 (1,3暂不支持)
     * </pre>
     */
    public boolean hasWorkMode() {
      return ((bitField1_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 WorkMode = 130 [default = 0];</code>
     *
     * <pre>
     * 0: 待定, 2: 失活模式 (1,3暂不支持)
     * </pre>
     */
    public int getWorkMode() {
      return workMode_;
    }

    public static final int ORIGIN2SETTING_FIELD_NUMBER = 140;
    private protocol_v1.V1Setting.Origin2Setting origin2Setting_;
    /**
     * <code>optional .protocol_v1.Origin2Setting Origin2Setting = 140;</code>
     *
     * <pre>
     * 原始数据采集参数
     * </pre>
     */
    public boolean hasOrigin2Setting() {
      return ((bitField1_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .protocol_v1.Origin2Setting Origin2Setting = 140;</code>
     *
     * <pre>
     * 原始数据采集参数
     * </pre>
     */
    public protocol_v1.V1Setting.Origin2Setting getOrigin2Setting() {
      return origin2Setting_ == null ? protocol_v1.V1Setting.Origin2Setting.getDefaultInstance() : origin2Setting_;
    }
    /**
     * <code>optional .protocol_v1.Origin2Setting Origin2Setting = 140;</code>
     *
     * <pre>
     * 原始数据采集参数
     * </pre>
     */
    public protocol_v1.V1Setting.Origin2SettingOrBuilder getOrigin2SettingOrBuilder() {
      return origin2Setting_ == null ? protocol_v1.V1Setting.Origin2Setting.getDefaultInstance() : origin2Setting_;
    }

    public static final int BEACONLOCATIONSETTING_FIELD_NUMBER = 141;
    private protocol_v1.V1Setting.BeaconLocationSetting beaconLocationSetting_;
    /**
     * <code>optional .protocol_v1.BeaconLocationSetting BeaconLocationSetting = 141;</code>
     *
     * <pre>
     * 信标定位参数
     * </pre>
     */
    public boolean hasBeaconLocationSetting() {
      return ((bitField1_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .protocol_v1.BeaconLocationSetting BeaconLocationSetting = 141;</code>
     *
     * <pre>
     * 信标定位参数
     * </pre>
     */
    public protocol_v1.V1Setting.BeaconLocationSetting getBeaconLocationSetting() {
      return beaconLocationSetting_ == null ? protocol_v1.V1Setting.BeaconLocationSetting.getDefaultInstance() : beaconLocationSetting_;
    }
    /**
     * <code>optional .protocol_v1.BeaconLocationSetting BeaconLocationSetting = 141;</code>
     *
     * <pre>
     * 信标定位参数
     * </pre>
     */
    public protocol_v1.V1Setting.BeaconLocationSettingOrBuilder getBeaconLocationSettingOrBuilder() {
      return beaconLocationSetting_ == null ? protocol_v1.V1Setting.BeaconLocationSetting.getDefaultInstance() : beaconLocationSetting_;
    }

    public static final int POWEROFFSETTING_FIELD_NUMBER = 142;
    private protocol_v1.V1Setting.PowerOffSetting powerOffSetting_;
    /**
     * <code>optional .protocol_v1.PowerOffSetting PowerOffSetting = 142;</code>
     *
     * <pre>
     * 计划关机参数
     * </pre>
     */
    public boolean hasPowerOffSetting() {
      return ((bitField1_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .protocol_v1.PowerOffSetting PowerOffSetting = 142;</code>
     *
     * <pre>
     * 计划关机参数
     * </pre>
     */
    public protocol_v1.V1Setting.PowerOffSetting getPowerOffSetting() {
      return powerOffSetting_ == null ? protocol_v1.V1Setting.PowerOffSetting.getDefaultInstance() : powerOffSetting_;
    }
    /**
     * <code>optional .protocol_v1.PowerOffSetting PowerOffSetting = 142;</code>
     *
     * <pre>
     * 计划关机参数
     * </pre>
     */
    public protocol_v1.V1Setting.PowerOffSettingOrBuilder getPowerOffSettingOrBuilder() {
      return powerOffSetting_ == null ? protocol_v1.V1Setting.PowerOffSetting.getDefaultInstance() : powerOffSetting_;
    }

    public static final int ARGOSSETTING_FIELD_NUMBER = 143;
    private protocol_v1.V1Setting.ArgosSetting argosSetting_;
    /**
     * <code>optional .protocol_v1.ArgosSetting ArgosSetting = 143;</code>
     *
     * <pre>
     *  argos发送配置
     * </pre>
     */
    public boolean hasArgosSetting() {
      return ((bitField1_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional .protocol_v1.ArgosSetting ArgosSetting = 143;</code>
     *
     * <pre>
     *  argos发送配置
     * </pre>
     */
    public protocol_v1.V1Setting.ArgosSetting getArgosSetting() {
      return argosSetting_ == null ? protocol_v1.V1Setting.ArgosSetting.getDefaultInstance() : argosSetting_;
    }
    /**
     * <code>optional .protocol_v1.ArgosSetting ArgosSetting = 143;</code>
     *
     * <pre>
     *  argos发送配置
     * </pre>
     */
    public protocol_v1.V1Setting.ArgosSettingOrBuilder getArgosSettingOrBuilder() {
      return argosSetting_ == null ? protocol_v1.V1Setting.ArgosSetting.getDefaultInstance() : argosSetting_;
    }

    public static final int MAGNETIC_FIELD_NUMBER = 144;
    private protocol_v1.V1Setting.MagneticSetting magnetic_;
    /**
     * <code>optional .protocol_v1.MagneticSetting Magnetic = 144;</code>
     *
     * <pre>
     * 地磁配置
     * </pre>
     */
    public boolean hasMagnetic() {
      return ((bitField1_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional .protocol_v1.MagneticSetting Magnetic = 144;</code>
     *
     * <pre>
     * 地磁配置
     * </pre>
     */
    public protocol_v1.V1Setting.MagneticSetting getMagnetic() {
      return magnetic_ == null ? protocol_v1.V1Setting.MagneticSetting.getDefaultInstance() : magnetic_;
    }
    /**
     * <code>optional .protocol_v1.MagneticSetting Magnetic = 144;</code>
     *
     * <pre>
     * 地磁配置
     * </pre>
     */
    public protocol_v1.V1Setting.MagneticSettingOrBuilder getMagneticOrBuilder() {
      return magnetic_ == null ? protocol_v1.V1Setting.MagneticSetting.getDefaultInstance() : magnetic_;
    }

    public static final int ACCOUTDATARATE_FIELD_NUMBER = 145;
    private int accOutDataRate_;
    /**
     * <code>optional int32 AccOutDataRate = 145 [default = 25];</code>
     *
     * <pre>
     * 加速度传感器采样频率，范围：1 ~ 500Hz
     * </pre>
     */
    public boolean hasAccOutDataRate() {
      return ((bitField1_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 AccOutDataRate = 145 [default = 25];</code>
     *
     * <pre>
     * 加速度传感器采样频率，范围：1 ~ 500Hz
     * </pre>
     */
    public int getAccOutDataRate() {
      return accOutDataRate_;
    }

    public static final int ALGORITHMVERSION_FIELD_NUMBER = 150;
    private protocol_v1.V1Algorithm.AlgorithmVersion algorithmVersion_;
    /**
     * <code>optional .protocol_v1.AlgorithmVersion AlgorithmVersion = 150;</code>
     *
     * <pre>
     * 当前算法版本
     * </pre>
     */
    public boolean hasAlgorithmVersion() {
      return ((bitField1_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional .protocol_v1.AlgorithmVersion AlgorithmVersion = 150;</code>
     *
     * <pre>
     * 当前算法版本
     * </pre>
     */
    public protocol_v1.V1Algorithm.AlgorithmVersion getAlgorithmVersion() {
      return algorithmVersion_ == null ? protocol_v1.V1Algorithm.AlgorithmVersion.getDefaultInstance() : algorithmVersion_;
    }
    /**
     * <code>optional .protocol_v1.AlgorithmVersion AlgorithmVersion = 150;</code>
     *
     * <pre>
     * 当前算法版本
     * </pre>
     */
    public protocol_v1.V1Algorithm.AlgorithmVersionOrBuilder getAlgorithmVersionOrBuilder() {
      return algorithmVersion_ == null ? protocol_v1.V1Algorithm.AlgorithmVersion.getDefaultInstance() : algorithmVersion_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getOriginTimeCount(); i++) {
        if (!getOriginTime(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasPowerOffSetting()) {
        if (!getPowerOffSetting().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, envSampleMode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, envSampleInterval_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, behaviorSampleMode_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, behaviorSampleInterval_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(7, gPSSampleMode_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(8, gPSSampleInterval_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(10, communicationMode_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(11, communicationInterval_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(14, triggerMode_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(16, resetDevice_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(17, schedulePowerOff_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(18, dailyPowerOffTime_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(19, dailyPowerOnTime_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(20, normalPowerOffTime_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(21, normalPowerOnTime_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(22, oTAFirmwareVersion_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 23, oTAFirmwareID_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(24, oTAForceUpgrade_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 25, oTAServerHost_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(26, oTAServerPort_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(27, sMSMode_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(28, sMSInterval_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(29, alarmMode_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeInt32(30, scheduleSpeaker_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(31, speakerExitTime_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeInt32(32, speakerEnterTime_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 102, communicationTimeTable_);
      }
      for (int i = 0; i < originTime_.size(); i++) {
        output.writeMessage(105, originTime_.get(i));
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeInt32(106, originMode_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeInt32(107, estrusSampleMode_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeInt32(108, estrusSampleInterval_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeInt32(109, behavior2SampleMode_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeInt32(110, behavior2SampleInterval_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(111, getGprsPowerSaving());
      }
      for (int i = 0; i < voltageBoost_.size(); i++) {
        output.writeMessage(112, voltageBoost_.get(i));
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(113, getSpeedBoost());
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(114, randomSecond_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(115, behaviorSampleStrategy_);
      }
      for (int i = 0; i < userPhoneNumber_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 116, userPhoneNumber_.getRaw(i));
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(120, hubMode_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(121, hashSecond_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(122, hashMillisecond_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(124, cellularLocationMode_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(125, getStepsSwitch());
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(126, getActionSwitch());
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(130, workMode_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(140, getOrigin2Setting());
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(141, getBeaconLocationSetting());
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(142, getPowerOffSetting());
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        output.writeMessage(143, getArgosSetting());
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        output.writeMessage(144, getMagnetic());
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(145, accOutDataRate_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        output.writeMessage(150, getAlgorithmVersion());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, envSampleMode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, envSampleInterval_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, behaviorSampleMode_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, behaviorSampleInterval_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, gPSSampleMode_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, gPSSampleInterval_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, communicationMode_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, communicationInterval_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, triggerMode_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, resetDevice_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, schedulePowerOff_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, dailyPowerOffTime_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, dailyPowerOnTime_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, normalPowerOffTime_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, normalPowerOnTime_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, oTAFirmwareVersion_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(23, oTAFirmwareID_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, oTAForceUpgrade_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(25, oTAServerHost_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(26, oTAServerPort_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(27, sMSMode_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(28, sMSInterval_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(29, alarmMode_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(30, scheduleSpeaker_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(31, speakerExitTime_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(32, speakerEnterTime_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(102, communicationTimeTable_);
      }
      for (int i = 0; i < originTime_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(105, originTime_.get(i));
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(106, originMode_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(107, estrusSampleMode_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(108, estrusSampleInterval_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(109, behavior2SampleMode_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(110, behavior2SampleInterval_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(111, getGprsPowerSaving());
      }
      for (int i = 0; i < voltageBoost_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(112, voltageBoost_.get(i));
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(113, getSpeedBoost());
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(114, randomSecond_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(115, behaviorSampleStrategy_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < userPhoneNumber_.size(); i++) {
          dataSize += computeStringSizeNoTag(userPhoneNumber_.getRaw(i));
        }
        size += dataSize;
        size += 2 * getUserPhoneNumberList().size();
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(120, hubMode_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(121, hashSecond_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(122, hashMillisecond_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(124, cellularLocationMode_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(125, getStepsSwitch());
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(126, getActionSwitch());
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(130, workMode_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(140, getOrigin2Setting());
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(141, getBeaconLocationSetting());
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(142, getPowerOffSetting());
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(143, getArgosSetting());
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(144, getMagnetic());
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(145, accOutDataRate_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(150, getAlgorithmVersion());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static protocol_v1.V1Setting.Setting parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Setting.Setting parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Setting.Setting parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Setting.Setting parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Setting.Setting parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Setting.Setting parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Setting.Setting parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protocol_v1.V1Setting.Setting parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Setting.Setting parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Setting.Setting parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol_v1.V1Setting.Setting prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol_v1.Setting}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol_v1.Setting)
        protocol_v1.V1Setting.SettingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_Setting_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_Setting_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol_v1.V1Setting.Setting.class, protocol_v1.V1Setting.Setting.Builder.class);
      }

      // Construct using protocol_v1.V1Setting.Setting.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getOriginTimeFieldBuilder();
          getGprsPowerSavingFieldBuilder();
          getVoltageBoostFieldBuilder();
          getSpeedBoostFieldBuilder();
          getStepsSwitchFieldBuilder();
          getActionSwitchFieldBuilder();
          getOrigin2SettingFieldBuilder();
          getBeaconLocationSettingFieldBuilder();
          getPowerOffSettingFieldBuilder();
          getArgosSettingFieldBuilder();
          getMagneticFieldBuilder();
          getAlgorithmVersionFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        envSampleMode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        envSampleInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        behaviorSampleMode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        behaviorSampleInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        gPSSampleMode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        gPSSampleInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        communicationMode_ = 1;
        bitField0_ = (bitField0_ & ~0x00000040);
        communicationInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        triggerMode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        resetDevice_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        schedulePowerOff_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        dailyPowerOffTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        dailyPowerOnTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        normalPowerOffTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        normalPowerOnTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        oTAFirmwareVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        oTAFirmwareID_ = "";
        bitField0_ = (bitField0_ & ~0x00010000);
        oTAForceUpgrade_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        oTAServerHost_ = "";
        bitField0_ = (bitField0_ & ~0x00040000);
        oTAServerPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        sMSMode_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        sMSInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        alarmMode_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        scheduleSpeaker_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        speakerExitTime_ = 0;
        bitField0_ = (bitField0_ & ~0x01000000);
        speakerEnterTime_ = 0;
        bitField0_ = (bitField0_ & ~0x02000000);
        communicationTimeTable_ = "";
        bitField0_ = (bitField0_ & ~0x04000000);
        if (originTimeBuilder_ == null) {
          originTime_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x08000000);
        } else {
          originTimeBuilder_.clear();
        }
        originMode_ = 0;
        bitField0_ = (bitField0_ & ~0x10000000);
        estrusSampleMode_ = 0;
        bitField0_ = (bitField0_ & ~0x20000000);
        estrusSampleInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x40000000);
        behavior2SampleMode_ = 0;
        bitField0_ = (bitField0_ & ~0x80000000);
        behavior2SampleInterval_ = 0;
        bitField1_ = (bitField1_ & ~0x00000001);
        if (gprsPowerSavingBuilder_ == null) {
          gprsPowerSaving_ = null;
        } else {
          gprsPowerSavingBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000002);
        if (voltageBoostBuilder_ == null) {
          voltageBoost_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000004);
        } else {
          voltageBoostBuilder_.clear();
        }
        if (speedBoostBuilder_ == null) {
          speedBoost_ = null;
        } else {
          speedBoostBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000008);
        randomSecond_ = 0;
        bitField1_ = (bitField1_ & ~0x00000010);
        behaviorSampleStrategy_ = 0;
        bitField1_ = (bitField1_ & ~0x00000020);
        userPhoneNumber_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField1_ = (bitField1_ & ~0x00000040);
        hubMode_ = 0;
        bitField1_ = (bitField1_ & ~0x00000080);
        hashSecond_ = 0;
        bitField1_ = (bitField1_ & ~0x00000100);
        hashMillisecond_ = 0;
        bitField1_ = (bitField1_ & ~0x00000200);
        cellularLocationMode_ = 0;
        bitField1_ = (bitField1_ & ~0x00000400);
        if (stepsSwitchBuilder_ == null) {
          stepsSwitch_ = null;
        } else {
          stepsSwitchBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000800);
        if (actionSwitchBuilder_ == null) {
          actionSwitch_ = null;
        } else {
          actionSwitchBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00001000);
        workMode_ = 0;
        bitField1_ = (bitField1_ & ~0x00002000);
        if (origin2SettingBuilder_ == null) {
          origin2Setting_ = null;
        } else {
          origin2SettingBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00004000);
        if (beaconLocationSettingBuilder_ == null) {
          beaconLocationSetting_ = null;
        } else {
          beaconLocationSettingBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00008000);
        if (powerOffSettingBuilder_ == null) {
          powerOffSetting_ = null;
        } else {
          powerOffSettingBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00010000);
        if (argosSettingBuilder_ == null) {
          argosSetting_ = null;
        } else {
          argosSettingBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00020000);
        if (magneticBuilder_ == null) {
          magnetic_ = null;
        } else {
          magneticBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00040000);
        accOutDataRate_ = 25;
        bitField1_ = (bitField1_ & ~0x00080000);
        if (algorithmVersionBuilder_ == null) {
          algorithmVersion_ = null;
        } else {
          algorithmVersionBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00100000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_Setting_descriptor;
      }

      public protocol_v1.V1Setting.Setting getDefaultInstanceForType() {
        return protocol_v1.V1Setting.Setting.getDefaultInstance();
      }

      public protocol_v1.V1Setting.Setting build() {
        protocol_v1.V1Setting.Setting result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol_v1.V1Setting.Setting buildPartial() {
        protocol_v1.V1Setting.Setting result = new protocol_v1.V1Setting.Setting(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.envSampleMode_ = envSampleMode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.envSampleInterval_ = envSampleInterval_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.behaviorSampleMode_ = behaviorSampleMode_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.behaviorSampleInterval_ = behaviorSampleInterval_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.gPSSampleMode_ = gPSSampleMode_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.gPSSampleInterval_ = gPSSampleInterval_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.communicationMode_ = communicationMode_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.communicationInterval_ = communicationInterval_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.triggerMode_ = triggerMode_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.resetDevice_ = resetDevice_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.schedulePowerOff_ = schedulePowerOff_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.dailyPowerOffTime_ = dailyPowerOffTime_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.dailyPowerOnTime_ = dailyPowerOnTime_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.normalPowerOffTime_ = normalPowerOffTime_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.normalPowerOnTime_ = normalPowerOnTime_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.oTAFirmwareVersion_ = oTAFirmwareVersion_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.oTAFirmwareID_ = oTAFirmwareID_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.oTAForceUpgrade_ = oTAForceUpgrade_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.oTAServerHost_ = oTAServerHost_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.oTAServerPort_ = oTAServerPort_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.sMSMode_ = sMSMode_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.sMSInterval_ = sMSInterval_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.alarmMode_ = alarmMode_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.scheduleSpeaker_ = scheduleSpeaker_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.speakerExitTime_ = speakerExitTime_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.speakerEnterTime_ = speakerEnterTime_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.communicationTimeTable_ = communicationTimeTable_;
        if (originTimeBuilder_ == null) {
          if (((bitField0_ & 0x08000000) == 0x08000000)) {
            originTime_ = java.util.Collections.unmodifiableList(originTime_);
            bitField0_ = (bitField0_ & ~0x08000000);
          }
          result.originTime_ = originTime_;
        } else {
          result.originTime_ = originTimeBuilder_.build();
        }
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.originMode_ = originMode_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.estrusSampleMode_ = estrusSampleMode_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.estrusSampleInterval_ = estrusSampleInterval_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x40000000;
        }
        result.behavior2SampleMode_ = behavior2SampleMode_;
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x80000000;
        }
        result.behavior2SampleInterval_ = behavior2SampleInterval_;
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField1_ |= 0x00000001;
        }
        if (gprsPowerSavingBuilder_ == null) {
          result.gprsPowerSaving_ = gprsPowerSaving_;
        } else {
          result.gprsPowerSaving_ = gprsPowerSavingBuilder_.build();
        }
        if (voltageBoostBuilder_ == null) {
          if (((bitField1_ & 0x00000004) == 0x00000004)) {
            voltageBoost_ = java.util.Collections.unmodifiableList(voltageBoost_);
            bitField1_ = (bitField1_ & ~0x00000004);
          }
          result.voltageBoost_ = voltageBoost_;
        } else {
          result.voltageBoost_ = voltageBoostBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000008) == 0x00000008)) {
          to_bitField1_ |= 0x00000002;
        }
        if (speedBoostBuilder_ == null) {
          result.speedBoost_ = speedBoost_;
        } else {
          result.speedBoost_ = speedBoostBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000010) == 0x00000010)) {
          to_bitField1_ |= 0x00000004;
        }
        result.randomSecond_ = randomSecond_;
        if (((from_bitField1_ & 0x00000020) == 0x00000020)) {
          to_bitField1_ |= 0x00000008;
        }
        result.behaviorSampleStrategy_ = behaviorSampleStrategy_;
        if (((bitField1_ & 0x00000040) == 0x00000040)) {
          userPhoneNumber_ = userPhoneNumber_.getUnmodifiableView();
          bitField1_ = (bitField1_ & ~0x00000040);
        }
        result.userPhoneNumber_ = userPhoneNumber_;
        if (((from_bitField1_ & 0x00000080) == 0x00000080)) {
          to_bitField1_ |= 0x00000010;
        }
        result.hubMode_ = hubMode_;
        if (((from_bitField1_ & 0x00000100) == 0x00000100)) {
          to_bitField1_ |= 0x00000020;
        }
        result.hashSecond_ = hashSecond_;
        if (((from_bitField1_ & 0x00000200) == 0x00000200)) {
          to_bitField1_ |= 0x00000040;
        }
        result.hashMillisecond_ = hashMillisecond_;
        if (((from_bitField1_ & 0x00000400) == 0x00000400)) {
          to_bitField1_ |= 0x00000080;
        }
        result.cellularLocationMode_ = cellularLocationMode_;
        if (((from_bitField1_ & 0x00000800) == 0x00000800)) {
          to_bitField1_ |= 0x00000100;
        }
        if (stepsSwitchBuilder_ == null) {
          result.stepsSwitch_ = stepsSwitch_;
        } else {
          result.stepsSwitch_ = stepsSwitchBuilder_.build();
        }
        if (((from_bitField1_ & 0x00001000) == 0x00001000)) {
          to_bitField1_ |= 0x00000200;
        }
        if (actionSwitchBuilder_ == null) {
          result.actionSwitch_ = actionSwitch_;
        } else {
          result.actionSwitch_ = actionSwitchBuilder_.build();
        }
        if (((from_bitField1_ & 0x00002000) == 0x00002000)) {
          to_bitField1_ |= 0x00000400;
        }
        result.workMode_ = workMode_;
        if (((from_bitField1_ & 0x00004000) == 0x00004000)) {
          to_bitField1_ |= 0x00000800;
        }
        if (origin2SettingBuilder_ == null) {
          result.origin2Setting_ = origin2Setting_;
        } else {
          result.origin2Setting_ = origin2SettingBuilder_.build();
        }
        if (((from_bitField1_ & 0x00008000) == 0x00008000)) {
          to_bitField1_ |= 0x00001000;
        }
        if (beaconLocationSettingBuilder_ == null) {
          result.beaconLocationSetting_ = beaconLocationSetting_;
        } else {
          result.beaconLocationSetting_ = beaconLocationSettingBuilder_.build();
        }
        if (((from_bitField1_ & 0x00010000) == 0x00010000)) {
          to_bitField1_ |= 0x00002000;
        }
        if (powerOffSettingBuilder_ == null) {
          result.powerOffSetting_ = powerOffSetting_;
        } else {
          result.powerOffSetting_ = powerOffSettingBuilder_.build();
        }
        if (((from_bitField1_ & 0x00020000) == 0x00020000)) {
          to_bitField1_ |= 0x00004000;
        }
        if (argosSettingBuilder_ == null) {
          result.argosSetting_ = argosSetting_;
        } else {
          result.argosSetting_ = argosSettingBuilder_.build();
        }
        if (((from_bitField1_ & 0x00040000) == 0x00040000)) {
          to_bitField1_ |= 0x00008000;
        }
        if (magneticBuilder_ == null) {
          result.magnetic_ = magnetic_;
        } else {
          result.magnetic_ = magneticBuilder_.build();
        }
        if (((from_bitField1_ & 0x00080000) == 0x00080000)) {
          to_bitField1_ |= 0x00010000;
        }
        result.accOutDataRate_ = accOutDataRate_;
        if (((from_bitField1_ & 0x00100000) == 0x00100000)) {
          to_bitField1_ |= 0x00020000;
        }
        if (algorithmVersionBuilder_ == null) {
          result.algorithmVersion_ = algorithmVersion_;
        } else {
          result.algorithmVersion_ = algorithmVersionBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol_v1.V1Setting.Setting) {
          return mergeFrom((protocol_v1.V1Setting.Setting)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol_v1.V1Setting.Setting other) {
        if (other == protocol_v1.V1Setting.Setting.getDefaultInstance()) return this;
        if (other.hasEnvSampleMode()) {
          setEnvSampleMode(other.getEnvSampleMode());
        }
        if (other.hasEnvSampleInterval()) {
          setEnvSampleInterval(other.getEnvSampleInterval());
        }
        if (other.hasBehaviorSampleMode()) {
          setBehaviorSampleMode(other.getBehaviorSampleMode());
        }
        if (other.hasBehaviorSampleInterval()) {
          setBehaviorSampleInterval(other.getBehaviorSampleInterval());
        }
        if (other.hasGPSSampleMode()) {
          setGPSSampleMode(other.getGPSSampleMode());
        }
        if (other.hasGPSSampleInterval()) {
          setGPSSampleInterval(other.getGPSSampleInterval());
        }
        if (other.hasCommunicationMode()) {
          setCommunicationMode(other.getCommunicationMode());
        }
        if (other.hasCommunicationInterval()) {
          setCommunicationInterval(other.getCommunicationInterval());
        }
        if (other.hasTriggerMode()) {
          setTriggerMode(other.getTriggerMode());
        }
        if (other.hasResetDevice()) {
          setResetDevice(other.getResetDevice());
        }
        if (other.hasSchedulePowerOff()) {
          setSchedulePowerOff(other.getSchedulePowerOff());
        }
        if (other.hasDailyPowerOffTime()) {
          setDailyPowerOffTime(other.getDailyPowerOffTime());
        }
        if (other.hasDailyPowerOnTime()) {
          setDailyPowerOnTime(other.getDailyPowerOnTime());
        }
        if (other.hasNormalPowerOffTime()) {
          setNormalPowerOffTime(other.getNormalPowerOffTime());
        }
        if (other.hasNormalPowerOnTime()) {
          setNormalPowerOnTime(other.getNormalPowerOnTime());
        }
        if (other.hasOTAFirmwareVersion()) {
          setOTAFirmwareVersion(other.getOTAFirmwareVersion());
        }
        if (other.hasOTAFirmwareID()) {
          bitField0_ |= 0x00010000;
          oTAFirmwareID_ = other.oTAFirmwareID_;
          onChanged();
        }
        if (other.hasOTAForceUpgrade()) {
          setOTAForceUpgrade(other.getOTAForceUpgrade());
        }
        if (other.hasOTAServerHost()) {
          bitField0_ |= 0x00040000;
          oTAServerHost_ = other.oTAServerHost_;
          onChanged();
        }
        if (other.hasOTAServerPort()) {
          setOTAServerPort(other.getOTAServerPort());
        }
        if (other.hasSMSMode()) {
          setSMSMode(other.getSMSMode());
        }
        if (other.hasSMSInterval()) {
          setSMSInterval(other.getSMSInterval());
        }
        if (other.hasAlarmMode()) {
          setAlarmMode(other.getAlarmMode());
        }
        if (other.hasScheduleSpeaker()) {
          setScheduleSpeaker(other.getScheduleSpeaker());
        }
        if (other.hasSpeakerExitTime()) {
          setSpeakerExitTime(other.getSpeakerExitTime());
        }
        if (other.hasSpeakerEnterTime()) {
          setSpeakerEnterTime(other.getSpeakerEnterTime());
        }
        if (other.hasCommunicationTimeTable()) {
          bitField0_ |= 0x04000000;
          communicationTimeTable_ = other.communicationTimeTable_;
          onChanged();
        }
        if (originTimeBuilder_ == null) {
          if (!other.originTime_.isEmpty()) {
            if (originTime_.isEmpty()) {
              originTime_ = other.originTime_;
              bitField0_ = (bitField0_ & ~0x08000000);
            } else {
              ensureOriginTimeIsMutable();
              originTime_.addAll(other.originTime_);
            }
            onChanged();
          }
        } else {
          if (!other.originTime_.isEmpty()) {
            if (originTimeBuilder_.isEmpty()) {
              originTimeBuilder_.dispose();
              originTimeBuilder_ = null;
              originTime_ = other.originTime_;
              bitField0_ = (bitField0_ & ~0x08000000);
              originTimeBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getOriginTimeFieldBuilder() : null;
            } else {
              originTimeBuilder_.addAllMessages(other.originTime_);
            }
          }
        }
        if (other.hasOriginMode()) {
          setOriginMode(other.getOriginMode());
        }
        if (other.hasEstrusSampleMode()) {
          setEstrusSampleMode(other.getEstrusSampleMode());
        }
        if (other.hasEstrusSampleInterval()) {
          setEstrusSampleInterval(other.getEstrusSampleInterval());
        }
        if (other.hasBehavior2SampleMode()) {
          setBehavior2SampleMode(other.getBehavior2SampleMode());
        }
        if (other.hasBehavior2SampleInterval()) {
          setBehavior2SampleInterval(other.getBehavior2SampleInterval());
        }
        if (other.hasGprsPowerSaving()) {
          mergeGprsPowerSaving(other.getGprsPowerSaving());
        }
        if (voltageBoostBuilder_ == null) {
          if (!other.voltageBoost_.isEmpty()) {
            if (voltageBoost_.isEmpty()) {
              voltageBoost_ = other.voltageBoost_;
              bitField1_ = (bitField1_ & ~0x00000004);
            } else {
              ensureVoltageBoostIsMutable();
              voltageBoost_.addAll(other.voltageBoost_);
            }
            onChanged();
          }
        } else {
          if (!other.voltageBoost_.isEmpty()) {
            if (voltageBoostBuilder_.isEmpty()) {
              voltageBoostBuilder_.dispose();
              voltageBoostBuilder_ = null;
              voltageBoost_ = other.voltageBoost_;
              bitField1_ = (bitField1_ & ~0x00000004);
              voltageBoostBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getVoltageBoostFieldBuilder() : null;
            } else {
              voltageBoostBuilder_.addAllMessages(other.voltageBoost_);
            }
          }
        }
        if (other.hasSpeedBoost()) {
          mergeSpeedBoost(other.getSpeedBoost());
        }
        if (other.hasRandomSecond()) {
          setRandomSecond(other.getRandomSecond());
        }
        if (other.hasBehaviorSampleStrategy()) {
          setBehaviorSampleStrategy(other.getBehaviorSampleStrategy());
        }
        if (!other.userPhoneNumber_.isEmpty()) {
          if (userPhoneNumber_.isEmpty()) {
            userPhoneNumber_ = other.userPhoneNumber_;
            bitField1_ = (bitField1_ & ~0x00000040);
          } else {
            ensureUserPhoneNumberIsMutable();
            userPhoneNumber_.addAll(other.userPhoneNumber_);
          }
          onChanged();
        }
        if (other.hasHubMode()) {
          setHubMode(other.getHubMode());
        }
        if (other.hasHashSecond()) {
          setHashSecond(other.getHashSecond());
        }
        if (other.hasHashMillisecond()) {
          setHashMillisecond(other.getHashMillisecond());
        }
        if (other.hasCellularLocationMode()) {
          setCellularLocationMode(other.getCellularLocationMode());
        }
        if (other.hasStepsSwitch()) {
          mergeStepsSwitch(other.getStepsSwitch());
        }
        if (other.hasActionSwitch()) {
          mergeActionSwitch(other.getActionSwitch());
        }
        if (other.hasWorkMode()) {
          setWorkMode(other.getWorkMode());
        }
        if (other.hasOrigin2Setting()) {
          mergeOrigin2Setting(other.getOrigin2Setting());
        }
        if (other.hasBeaconLocationSetting()) {
          mergeBeaconLocationSetting(other.getBeaconLocationSetting());
        }
        if (other.hasPowerOffSetting()) {
          mergePowerOffSetting(other.getPowerOffSetting());
        }
        if (other.hasArgosSetting()) {
          mergeArgosSetting(other.getArgosSetting());
        }
        if (other.hasMagnetic()) {
          mergeMagnetic(other.getMagnetic());
        }
        if (other.hasAccOutDataRate()) {
          setAccOutDataRate(other.getAccOutDataRate());
        }
        if (other.hasAlgorithmVersion()) {
          mergeAlgorithmVersion(other.getAlgorithmVersion());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getOriginTimeCount(); i++) {
          if (!getOriginTime(i).isInitialized()) {
            return false;
          }
        }
        if (hasPowerOffSetting()) {
          if (!getPowerOffSetting().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol_v1.V1Setting.Setting parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol_v1.V1Setting.Setting) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      private int envSampleMode_ ;
      /**
       * <code>optional int32 EnvSampleMode = 1 [default = 0];</code>
       *
       * <pre>
       * 环境采样模式: 0 - 关闭, 1 - 定时采样
       * </pre>
       */
      public boolean hasEnvSampleMode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 EnvSampleMode = 1 [default = 0];</code>
       *
       * <pre>
       * 环境采样模式: 0 - 关闭, 1 - 定时采样
       * </pre>
       */
      public int getEnvSampleMode() {
        return envSampleMode_;
      }
      /**
       * <code>optional int32 EnvSampleMode = 1 [default = 0];</code>
       *
       * <pre>
       * 环境采样模式: 0 - 关闭, 1 - 定时采样
       * </pre>
       */
      public Builder setEnvSampleMode(int value) {
        bitField0_ |= 0x00000001;
        envSampleMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 EnvSampleMode = 1 [default = 0];</code>
       *
       * <pre>
       * 环境采样模式: 0 - 关闭, 1 - 定时采样
       * </pre>
       */
      public Builder clearEnvSampleMode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        envSampleMode_ = 0;
        onChanged();
        return this;
      }

      private int envSampleInterval_ ;
      /**
       * <code>optional int32 EnvSampleInterval = 2 [default = 0];</code>
       *
       * <pre>
       * 环境采样间隔: 秒
       * </pre>
       */
      public boolean hasEnvSampleInterval() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 EnvSampleInterval = 2 [default = 0];</code>
       *
       * <pre>
       * 环境采样间隔: 秒
       * </pre>
       */
      public int getEnvSampleInterval() {
        return envSampleInterval_;
      }
      /**
       * <code>optional int32 EnvSampleInterval = 2 [default = 0];</code>
       *
       * <pre>
       * 环境采样间隔: 秒
       * </pre>
       */
      public Builder setEnvSampleInterval(int value) {
        bitField0_ |= 0x00000002;
        envSampleInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 EnvSampleInterval = 2 [default = 0];</code>
       *
       * <pre>
       * 环境采样间隔: 秒
       * </pre>
       */
      public Builder clearEnvSampleInterval() {
        bitField0_ = (bitField0_ & ~0x00000002);
        envSampleInterval_ = 0;
        onChanged();
        return this;
      }

      private int behaviorSampleMode_ ;
      /**
       * <code>optional int32 BehaviorSampleMode = 4 [default = 0];</code>
       *
       * <pre>
       * (第三方)行为采样模式: 0 - 关闭, 1 - 定时采样
       * </pre>
       */
      public boolean hasBehaviorSampleMode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 BehaviorSampleMode = 4 [default = 0];</code>
       *
       * <pre>
       * (第三方)行为采样模式: 0 - 关闭, 1 - 定时采样
       * </pre>
       */
      public int getBehaviorSampleMode() {
        return behaviorSampleMode_;
      }
      /**
       * <code>optional int32 BehaviorSampleMode = 4 [default = 0];</code>
       *
       * <pre>
       * (第三方)行为采样模式: 0 - 关闭, 1 - 定时采样
       * </pre>
       */
      public Builder setBehaviorSampleMode(int value) {
        bitField0_ |= 0x00000004;
        behaviorSampleMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 BehaviorSampleMode = 4 [default = 0];</code>
       *
       * <pre>
       * (第三方)行为采样模式: 0 - 关闭, 1 - 定时采样
       * </pre>
       */
      public Builder clearBehaviorSampleMode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        behaviorSampleMode_ = 0;
        onChanged();
        return this;
      }

      private int behaviorSampleInterval_ ;
      /**
       * <code>optional int32 BehaviorSampleInterval = 5 [default = 0];</code>
       *
       * <pre>
       * (第三方)行为采样间隔: 秒
       * </pre>
       */
      public boolean hasBehaviorSampleInterval() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 BehaviorSampleInterval = 5 [default = 0];</code>
       *
       * <pre>
       * (第三方)行为采样间隔: 秒
       * </pre>
       */
      public int getBehaviorSampleInterval() {
        return behaviorSampleInterval_;
      }
      /**
       * <code>optional int32 BehaviorSampleInterval = 5 [default = 0];</code>
       *
       * <pre>
       * (第三方)行为采样间隔: 秒
       * </pre>
       */
      public Builder setBehaviorSampleInterval(int value) {
        bitField0_ |= 0x00000008;
        behaviorSampleInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 BehaviorSampleInterval = 5 [default = 0];</code>
       *
       * <pre>
       * (第三方)行为采样间隔: 秒
       * </pre>
       */
      public Builder clearBehaviorSampleInterval() {
        bitField0_ = (bitField0_ & ~0x00000008);
        behaviorSampleInterval_ = 0;
        onChanged();
        return this;
      }

      private int gPSSampleMode_ ;
      /**
       * <code>optional int32 GPSSampleMode = 7 [default = 0];</code>
       *
       * <pre>
       * GPS采样模式: 0 - 关闭, 1 - 定时采样, 2 - 持续开启(功耗高, 不推荐)
       * </pre>
       */
      public boolean hasGPSSampleMode() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 GPSSampleMode = 7 [default = 0];</code>
       *
       * <pre>
       * GPS采样模式: 0 - 关闭, 1 - 定时采样, 2 - 持续开启(功耗高, 不推荐)
       * </pre>
       */
      public int getGPSSampleMode() {
        return gPSSampleMode_;
      }
      /**
       * <code>optional int32 GPSSampleMode = 7 [default = 0];</code>
       *
       * <pre>
       * GPS采样模式: 0 - 关闭, 1 - 定时采样, 2 - 持续开启(功耗高, 不推荐)
       * </pre>
       */
      public Builder setGPSSampleMode(int value) {
        bitField0_ |= 0x00000010;
        gPSSampleMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 GPSSampleMode = 7 [default = 0];</code>
       *
       * <pre>
       * GPS采样模式: 0 - 关闭, 1 - 定时采样, 2 - 持续开启(功耗高, 不推荐)
       * </pre>
       */
      public Builder clearGPSSampleMode() {
        bitField0_ = (bitField0_ & ~0x00000010);
        gPSSampleMode_ = 0;
        onChanged();
        return this;
      }

      private int gPSSampleInterval_ ;
      /**
       * <code>optional int32 GPSSampleInterval = 8 [default = 0];</code>
       *
       * <pre>
       * GPS采样间隔: 秒
       * </pre>
       */
      public boolean hasGPSSampleInterval() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 GPSSampleInterval = 8 [default = 0];</code>
       *
       * <pre>
       * GPS采样间隔: 秒
       * </pre>
       */
      public int getGPSSampleInterval() {
        return gPSSampleInterval_;
      }
      /**
       * <code>optional int32 GPSSampleInterval = 8 [default = 0];</code>
       *
       * <pre>
       * GPS采样间隔: 秒
       * </pre>
       */
      public Builder setGPSSampleInterval(int value) {
        bitField0_ |= 0x00000020;
        gPSSampleInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 GPSSampleInterval = 8 [default = 0];</code>
       *
       * <pre>
       * GPS采样间隔: 秒
       * </pre>
       */
      public Builder clearGPSSampleInterval() {
        bitField0_ = (bitField0_ & ~0x00000020);
        gPSSampleInterval_ = 0;
        onChanged();
        return this;
      }

      private int communicationMode_ = 1;
      /**
       * <code>optional int32 CommunicationMode = 10 [default = 1];</code>
       *
       * <pre>
       * 通信模式: 0 - 未定义, 1 - 周期模式, 2 - 持续在线(适合eDRX), 101 - 整点回传
       * </pre>
       */
      public boolean hasCommunicationMode() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 CommunicationMode = 10 [default = 1];</code>
       *
       * <pre>
       * 通信模式: 0 - 未定义, 1 - 周期模式, 2 - 持续在线(适合eDRX), 101 - 整点回传
       * </pre>
       */
      public int getCommunicationMode() {
        return communicationMode_;
      }
      /**
       * <code>optional int32 CommunicationMode = 10 [default = 1];</code>
       *
       * <pre>
       * 通信模式: 0 - 未定义, 1 - 周期模式, 2 - 持续在线(适合eDRX), 101 - 整点回传
       * </pre>
       */
      public Builder setCommunicationMode(int value) {
        bitField0_ |= 0x00000040;
        communicationMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 CommunicationMode = 10 [default = 1];</code>
       *
       * <pre>
       * 通信模式: 0 - 未定义, 1 - 周期模式, 2 - 持续在线(适合eDRX), 101 - 整点回传
       * </pre>
       */
      public Builder clearCommunicationMode() {
        bitField0_ = (bitField0_ & ~0x00000040);
        communicationMode_ = 1;
        onChanged();
        return this;
      }

      private int communicationInterval_ ;
      /**
       * <code>optional int32 CommunicationInterval = 11 [default = 0];</code>
       *
       * <pre>
       * 通信间隔: 秒
       * </pre>
       */
      public boolean hasCommunicationInterval() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 CommunicationInterval = 11 [default = 0];</code>
       *
       * <pre>
       * 通信间隔: 秒
       * </pre>
       */
      public int getCommunicationInterval() {
        return communicationInterval_;
      }
      /**
       * <code>optional int32 CommunicationInterval = 11 [default = 0];</code>
       *
       * <pre>
       * 通信间隔: 秒
       * </pre>
       */
      public Builder setCommunicationInterval(int value) {
        bitField0_ |= 0x00000080;
        communicationInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 CommunicationInterval = 11 [default = 0];</code>
       *
       * <pre>
       * 通信间隔: 秒
       * </pre>
       */
      public Builder clearCommunicationInterval() {
        bitField0_ = (bitField0_ & ~0x00000080);
        communicationInterval_ = 0;
        onChanged();
        return this;
      }

      private int triggerMode_ ;
      /**
       * <code>optional int32 TriggerMode = 14 [default = 0];</code>
       *
       * <pre>
       * 触发器模式: 0 - 关闭, 1 - 开启
       * </pre>
       */
      public boolean hasTriggerMode() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 TriggerMode = 14 [default = 0];</code>
       *
       * <pre>
       * 触发器模式: 0 - 关闭, 1 - 开启
       * </pre>
       */
      public int getTriggerMode() {
        return triggerMode_;
      }
      /**
       * <code>optional int32 TriggerMode = 14 [default = 0];</code>
       *
       * <pre>
       * 触发器模式: 0 - 关闭, 1 - 开启
       * </pre>
       */
      public Builder setTriggerMode(int value) {
        bitField0_ |= 0x00000100;
        triggerMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 TriggerMode = 14 [default = 0];</code>
       *
       * <pre>
       * 触发器模式: 0 - 关闭, 1 - 开启
       * </pre>
       */
      public Builder clearTriggerMode() {
        bitField0_ = (bitField0_ & ~0x00000100);
        triggerMode_ = 0;
        onChanged();
        return this;
      }

      private int resetDevice_ ;
      /**
       * <code>optional int32 ResetDevice = 16 [default = 0];</code>
       *
       * <pre>
       * 复位请求: 0 - 不复位, 1 - 这次通信结束后立即复位
       * </pre>
       */
      public boolean hasResetDevice() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 ResetDevice = 16 [default = 0];</code>
       *
       * <pre>
       * 复位请求: 0 - 不复位, 1 - 这次通信结束后立即复位
       * </pre>
       */
      public int getResetDevice() {
        return resetDevice_;
      }
      /**
       * <code>optional int32 ResetDevice = 16 [default = 0];</code>
       *
       * <pre>
       * 复位请求: 0 - 不复位, 1 - 这次通信结束后立即复位
       * </pre>
       */
      public Builder setResetDevice(int value) {
        bitField0_ |= 0x00000200;
        resetDevice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ResetDevice = 16 [default = 0];</code>
       *
       * <pre>
       * 复位请求: 0 - 不复位, 1 - 这次通信结束后立即复位
       * </pre>
       */
      public Builder clearResetDevice() {
        bitField0_ = (bitField0_ & ~0x00000200);
        resetDevice_ = 0;
        onChanged();
        return this;
      }

      private int schedulePowerOff_ ;
      /**
       * <code>optional int32 SchedulePowerOff = 17 [default = 0];</code>
       *
       * <pre>
       * 关机计划: 0 - 不关机, 1 - 每天指定时段关机, 2 - 连续多天关机
       * </pre>
       */
      public boolean hasSchedulePowerOff() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 SchedulePowerOff = 17 [default = 0];</code>
       *
       * <pre>
       * 关机计划: 0 - 不关机, 1 - 每天指定时段关机, 2 - 连续多天关机
       * </pre>
       */
      public int getSchedulePowerOff() {
        return schedulePowerOff_;
      }
      /**
       * <code>optional int32 SchedulePowerOff = 17 [default = 0];</code>
       *
       * <pre>
       * 关机计划: 0 - 不关机, 1 - 每天指定时段关机, 2 - 连续多天关机
       * </pre>
       */
      public Builder setSchedulePowerOff(int value) {
        bitField0_ |= 0x00000400;
        schedulePowerOff_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 SchedulePowerOff = 17 [default = 0];</code>
       *
       * <pre>
       * 关机计划: 0 - 不关机, 1 - 每天指定时段关机, 2 - 连续多天关机
       * </pre>
       */
      public Builder clearSchedulePowerOff() {
        bitField0_ = (bitField0_ & ~0x00000400);
        schedulePowerOff_ = 0;
        onChanged();
        return this;
      }

      private int dailyPowerOffTime_ ;
      /**
       * <code>optional int32 DailyPowerOffTime = 18 [default = 0];</code>
       *
       * <pre>
       * 每天关机起始时间: UTC时间戳, 只使用小时和分钟
       * </pre>
       */
      public boolean hasDailyPowerOffTime() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 DailyPowerOffTime = 18 [default = 0];</code>
       *
       * <pre>
       * 每天关机起始时间: UTC时间戳, 只使用小时和分钟
       * </pre>
       */
      public int getDailyPowerOffTime() {
        return dailyPowerOffTime_;
      }
      /**
       * <code>optional int32 DailyPowerOffTime = 18 [default = 0];</code>
       *
       * <pre>
       * 每天关机起始时间: UTC时间戳, 只使用小时和分钟
       * </pre>
       */
      public Builder setDailyPowerOffTime(int value) {
        bitField0_ |= 0x00000800;
        dailyPowerOffTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 DailyPowerOffTime = 18 [default = 0];</code>
       *
       * <pre>
       * 每天关机起始时间: UTC时间戳, 只使用小时和分钟
       * </pre>
       */
      public Builder clearDailyPowerOffTime() {
        bitField0_ = (bitField0_ & ~0x00000800);
        dailyPowerOffTime_ = 0;
        onChanged();
        return this;
      }

      private int dailyPowerOnTime_ ;
      /**
       * <code>optional int32 DailyPowerOnTime = 19 [default = 0];</code>
       *
       * <pre>
       * 每天关机结束时间: UTC时间戳, 只使用小时和分钟
       * </pre>
       */
      public boolean hasDailyPowerOnTime() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 DailyPowerOnTime = 19 [default = 0];</code>
       *
       * <pre>
       * 每天关机结束时间: UTC时间戳, 只使用小时和分钟
       * </pre>
       */
      public int getDailyPowerOnTime() {
        return dailyPowerOnTime_;
      }
      /**
       * <code>optional int32 DailyPowerOnTime = 19 [default = 0];</code>
       *
       * <pre>
       * 每天关机结束时间: UTC时间戳, 只使用小时和分钟
       * </pre>
       */
      public Builder setDailyPowerOnTime(int value) {
        bitField0_ |= 0x00001000;
        dailyPowerOnTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 DailyPowerOnTime = 19 [default = 0];</code>
       *
       * <pre>
       * 每天关机结束时间: UTC时间戳, 只使用小时和分钟
       * </pre>
       */
      public Builder clearDailyPowerOnTime() {
        bitField0_ = (bitField0_ & ~0x00001000);
        dailyPowerOnTime_ = 0;
        onChanged();
        return this;
      }

      private int normalPowerOffTime_ ;
      /**
       * <code>optional int32 NormalPowerOffTime = 20 [default = 0];</code>
       *
       * <pre>
       * 连续关机起始日期: UTC时间戳
       * </pre>
       */
      public boolean hasNormalPowerOffTime() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 NormalPowerOffTime = 20 [default = 0];</code>
       *
       * <pre>
       * 连续关机起始日期: UTC时间戳
       * </pre>
       */
      public int getNormalPowerOffTime() {
        return normalPowerOffTime_;
      }
      /**
       * <code>optional int32 NormalPowerOffTime = 20 [default = 0];</code>
       *
       * <pre>
       * 连续关机起始日期: UTC时间戳
       * </pre>
       */
      public Builder setNormalPowerOffTime(int value) {
        bitField0_ |= 0x00002000;
        normalPowerOffTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 NormalPowerOffTime = 20 [default = 0];</code>
       *
       * <pre>
       * 连续关机起始日期: UTC时间戳
       * </pre>
       */
      public Builder clearNormalPowerOffTime() {
        bitField0_ = (bitField0_ & ~0x00002000);
        normalPowerOffTime_ = 0;
        onChanged();
        return this;
      }

      private int normalPowerOnTime_ ;
      /**
       * <code>optional int32 NormalPowerOnTime = 21 [default = 0];</code>
       *
       * <pre>
       * 连续关机结束日期: UTC时间戳
       * </pre>
       */
      public boolean hasNormalPowerOnTime() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 NormalPowerOnTime = 21 [default = 0];</code>
       *
       * <pre>
       * 连续关机结束日期: UTC时间戳
       * </pre>
       */
      public int getNormalPowerOnTime() {
        return normalPowerOnTime_;
      }
      /**
       * <code>optional int32 NormalPowerOnTime = 21 [default = 0];</code>
       *
       * <pre>
       * 连续关机结束日期: UTC时间戳
       * </pre>
       */
      public Builder setNormalPowerOnTime(int value) {
        bitField0_ |= 0x00004000;
        normalPowerOnTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 NormalPowerOnTime = 21 [default = 0];</code>
       *
       * <pre>
       * 连续关机结束日期: UTC时间戳
       * </pre>
       */
      public Builder clearNormalPowerOnTime() {
        bitField0_ = (bitField0_ & ~0x00004000);
        normalPowerOnTime_ = 0;
        onChanged();
        return this;
      }

      private int oTAFirmwareVersion_ ;
      /**
       * <code>optional int32 OTAFirmwareVersion = 22 [default = 0];</code>
       *
       * <pre>
       * OTA固件版本
       * </pre>
       */
      public boolean hasOTAFirmwareVersion() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 OTAFirmwareVersion = 22 [default = 0];</code>
       *
       * <pre>
       * OTA固件版本
       * </pre>
       */
      public int getOTAFirmwareVersion() {
        return oTAFirmwareVersion_;
      }
      /**
       * <code>optional int32 OTAFirmwareVersion = 22 [default = 0];</code>
       *
       * <pre>
       * OTA固件版本
       * </pre>
       */
      public Builder setOTAFirmwareVersion(int value) {
        bitField0_ |= 0x00008000;
        oTAFirmwareVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 OTAFirmwareVersion = 22 [default = 0];</code>
       *
       * <pre>
       * OTA固件版本
       * </pre>
       */
      public Builder clearOTAFirmwareVersion() {
        bitField0_ = (bitField0_ & ~0x00008000);
        oTAFirmwareVersion_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object oTAFirmwareID_ = "";
      /**
       * <code>optional string OTAFirmwareID = 23 [default = ""];</code>
       *
       * <pre>
       * OTA固件标识
       * </pre>
       */
      public boolean hasOTAFirmwareID() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional string OTAFirmwareID = 23 [default = ""];</code>
       *
       * <pre>
       * OTA固件标识
       * </pre>
       */
      public java.lang.String getOTAFirmwareID() {
        java.lang.Object ref = oTAFirmwareID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            oTAFirmwareID_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string OTAFirmwareID = 23 [default = ""];</code>
       *
       * <pre>
       * OTA固件标识
       * </pre>
       */
      public com.google.protobuf.ByteString
          getOTAFirmwareIDBytes() {
        java.lang.Object ref = oTAFirmwareID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          oTAFirmwareID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string OTAFirmwareID = 23 [default = ""];</code>
       *
       * <pre>
       * OTA固件标识
       * </pre>
       */
      public Builder setOTAFirmwareID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        oTAFirmwareID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string OTAFirmwareID = 23 [default = ""];</code>
       *
       * <pre>
       * OTA固件标识
       * </pre>
       */
      public Builder clearOTAFirmwareID() {
        bitField0_ = (bitField0_ & ~0x00010000);
        oTAFirmwareID_ = getDefaultInstance().getOTAFirmwareID();
        onChanged();
        return this;
      }
      /**
       * <code>optional string OTAFirmwareID = 23 [default = ""];</code>
       *
       * <pre>
       * OTA固件标识
       * </pre>
       */
      public Builder setOTAFirmwareIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        oTAFirmwareID_ = value;
        onChanged();
        return this;
      }

      private int oTAForceUpgrade_ ;
      /**
       * <code>optional int32 OTAForceUpgrade = 24 [default = 0];</code>
       *
       * <pre>
       * OTA强制执行(丢弃数据, 立即升级)
       * </pre>
       */
      public boolean hasOTAForceUpgrade() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 OTAForceUpgrade = 24 [default = 0];</code>
       *
       * <pre>
       * OTA强制执行(丢弃数据, 立即升级)
       * </pre>
       */
      public int getOTAForceUpgrade() {
        return oTAForceUpgrade_;
      }
      /**
       * <code>optional int32 OTAForceUpgrade = 24 [default = 0];</code>
       *
       * <pre>
       * OTA强制执行(丢弃数据, 立即升级)
       * </pre>
       */
      public Builder setOTAForceUpgrade(int value) {
        bitField0_ |= 0x00020000;
        oTAForceUpgrade_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 OTAForceUpgrade = 24 [default = 0];</code>
       *
       * <pre>
       * OTA强制执行(丢弃数据, 立即升级)
       * </pre>
       */
      public Builder clearOTAForceUpgrade() {
        bitField0_ = (bitField0_ & ~0x00020000);
        oTAForceUpgrade_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object oTAServerHost_ = "";
      /**
       * <code>optional string OTAServerHost = 25 [default = ""];</code>
       *
       * <pre>
       * OTA服务器域名或地址
       * </pre>
       */
      public boolean hasOTAServerHost() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional string OTAServerHost = 25 [default = ""];</code>
       *
       * <pre>
       * OTA服务器域名或地址
       * </pre>
       */
      public java.lang.String getOTAServerHost() {
        java.lang.Object ref = oTAServerHost_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            oTAServerHost_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string OTAServerHost = 25 [default = ""];</code>
       *
       * <pre>
       * OTA服务器域名或地址
       * </pre>
       */
      public com.google.protobuf.ByteString
          getOTAServerHostBytes() {
        java.lang.Object ref = oTAServerHost_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          oTAServerHost_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string OTAServerHost = 25 [default = ""];</code>
       *
       * <pre>
       * OTA服务器域名或地址
       * </pre>
       */
      public Builder setOTAServerHost(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00040000;
        oTAServerHost_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string OTAServerHost = 25 [default = ""];</code>
       *
       * <pre>
       * OTA服务器域名或地址
       * </pre>
       */
      public Builder clearOTAServerHost() {
        bitField0_ = (bitField0_ & ~0x00040000);
        oTAServerHost_ = getDefaultInstance().getOTAServerHost();
        onChanged();
        return this;
      }
      /**
       * <code>optional string OTAServerHost = 25 [default = ""];</code>
       *
       * <pre>
       * OTA服务器域名或地址
       * </pre>
       */
      public Builder setOTAServerHostBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00040000;
        oTAServerHost_ = value;
        onChanged();
        return this;
      }

      private int oTAServerPort_ ;
      /**
       * <code>optional int32 OTAServerPort = 26 [default = 0];</code>
       *
       * <pre>
       * OTA服务器端口
       * </pre>
       */
      public boolean hasOTAServerPort() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 OTAServerPort = 26 [default = 0];</code>
       *
       * <pre>
       * OTA服务器端口
       * </pre>
       */
      public int getOTAServerPort() {
        return oTAServerPort_;
      }
      /**
       * <code>optional int32 OTAServerPort = 26 [default = 0];</code>
       *
       * <pre>
       * OTA服务器端口
       * </pre>
       */
      public Builder setOTAServerPort(int value) {
        bitField0_ |= 0x00080000;
        oTAServerPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 OTAServerPort = 26 [default = 0];</code>
       *
       * <pre>
       * OTA服务器端口
       * </pre>
       */
      public Builder clearOTAServerPort() {
        bitField0_ = (bitField0_ & ~0x00080000);
        oTAServerPort_ = 0;
        onChanged();
        return this;
      }

      private int sMSMode_ ;
      /**
       * <code>optional int32 SMSMode = 27 [default = 0];</code>
       *
       * <pre>
       * 短信上传模式: 0 - 关闭, 1 - 定时上传, 2 - 辅助上传(网络通信失败时上传)
       * </pre>
       */
      public boolean hasSMSMode() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int32 SMSMode = 27 [default = 0];</code>
       *
       * <pre>
       * 短信上传模式: 0 - 关闭, 1 - 定时上传, 2 - 辅助上传(网络通信失败时上传)
       * </pre>
       */
      public int getSMSMode() {
        return sMSMode_;
      }
      /**
       * <code>optional int32 SMSMode = 27 [default = 0];</code>
       *
       * <pre>
       * 短信上传模式: 0 - 关闭, 1 - 定时上传, 2 - 辅助上传(网络通信失败时上传)
       * </pre>
       */
      public Builder setSMSMode(int value) {
        bitField0_ |= 0x00100000;
        sMSMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 SMSMode = 27 [default = 0];</code>
       *
       * <pre>
       * 短信上传模式: 0 - 关闭, 1 - 定时上传, 2 - 辅助上传(网络通信失败时上传)
       * </pre>
       */
      public Builder clearSMSMode() {
        bitField0_ = (bitField0_ & ~0x00100000);
        sMSMode_ = 0;
        onChanged();
        return this;
      }

      private int sMSInterval_ ;
      /**
       * <code>optional int32 SMSInterval = 28 [default = 0];</code>
       *
       * <pre>
       * 短信上传间隔: 秒
       * </pre>
       */
      public boolean hasSMSInterval() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int32 SMSInterval = 28 [default = 0];</code>
       *
       * <pre>
       * 短信上传间隔: 秒
       * </pre>
       */
      public int getSMSInterval() {
        return sMSInterval_;
      }
      /**
       * <code>optional int32 SMSInterval = 28 [default = 0];</code>
       *
       * <pre>
       * 短信上传间隔: 秒
       * </pre>
       */
      public Builder setSMSInterval(int value) {
        bitField0_ |= 0x00200000;
        sMSInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 SMSInterval = 28 [default = 0];</code>
       *
       * <pre>
       * 短信上传间隔: 秒
       * </pre>
       */
      public Builder clearSMSInterval() {
        bitField0_ = (bitField0_ & ~0x00200000);
        sMSInterval_ = 0;
        onChanged();
        return this;
      }

      private int alarmMode_ ;
      /**
       * <code>optional int32 AlarmMode = 29 [default = 0];</code>
       *
       * <pre>
       * 报警模式: 0 - 关闭, 1 - 数传报警, 2 - 短信报警, 3 - 数传+短信
       * </pre>
       */
      public boolean hasAlarmMode() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int32 AlarmMode = 29 [default = 0];</code>
       *
       * <pre>
       * 报警模式: 0 - 关闭, 1 - 数传报警, 2 - 短信报警, 3 - 数传+短信
       * </pre>
       */
      public int getAlarmMode() {
        return alarmMode_;
      }
      /**
       * <code>optional int32 AlarmMode = 29 [default = 0];</code>
       *
       * <pre>
       * 报警模式: 0 - 关闭, 1 - 数传报警, 2 - 短信报警, 3 - 数传+短信
       * </pre>
       */
      public Builder setAlarmMode(int value) {
        bitField0_ |= 0x00400000;
        alarmMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 AlarmMode = 29 [default = 0];</code>
       *
       * <pre>
       * 报警模式: 0 - 关闭, 1 - 数传报警, 2 - 短信报警, 3 - 数传+短信
       * </pre>
       */
      public Builder clearAlarmMode() {
        bitField0_ = (bitField0_ & ~0x00400000);
        alarmMode_ = 0;
        onChanged();
        return this;
      }

      private int scheduleSpeaker_ ;
      /**
       * <code>optional int32 ScheduleSpeaker = 30 [default = 0];</code>
       *
       * <pre>
       * 语音播报计划: 0 - 不播报, 1 - 每天准时播报
       * </pre>
       */
      public boolean hasScheduleSpeaker() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int32 ScheduleSpeaker = 30 [default = 0];</code>
       *
       * <pre>
       * 语音播报计划: 0 - 不播报, 1 - 每天准时播报
       * </pre>
       */
      public int getScheduleSpeaker() {
        return scheduleSpeaker_;
      }
      /**
       * <code>optional int32 ScheduleSpeaker = 30 [default = 0];</code>
       *
       * <pre>
       * 语音播报计划: 0 - 不播报, 1 - 每天准时播报
       * </pre>
       */
      public Builder setScheduleSpeaker(int value) {
        bitField0_ |= 0x00800000;
        scheduleSpeaker_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ScheduleSpeaker = 30 [default = 0];</code>
       *
       * <pre>
       * 语音播报计划: 0 - 不播报, 1 - 每天准时播报
       * </pre>
       */
      public Builder clearScheduleSpeaker() {
        bitField0_ = (bitField0_ & ~0x00800000);
        scheduleSpeaker_ = 0;
        onChanged();
        return this;
      }

      private int speakerExitTime_ ;
      /**
       * <code>optional int32 SpeakerExitTime = 31 [default = 0];</code>
       *
       * <pre>
       * 每天出栏播报时间: UTC时间戳, 只使用小时和分钟
       * </pre>
       */
      public boolean hasSpeakerExitTime() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int32 SpeakerExitTime = 31 [default = 0];</code>
       *
       * <pre>
       * 每天出栏播报时间: UTC时间戳, 只使用小时和分钟
       * </pre>
       */
      public int getSpeakerExitTime() {
        return speakerExitTime_;
      }
      /**
       * <code>optional int32 SpeakerExitTime = 31 [default = 0];</code>
       *
       * <pre>
       * 每天出栏播报时间: UTC时间戳, 只使用小时和分钟
       * </pre>
       */
      public Builder setSpeakerExitTime(int value) {
        bitField0_ |= 0x01000000;
        speakerExitTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 SpeakerExitTime = 31 [default = 0];</code>
       *
       * <pre>
       * 每天出栏播报时间: UTC时间戳, 只使用小时和分钟
       * </pre>
       */
      public Builder clearSpeakerExitTime() {
        bitField0_ = (bitField0_ & ~0x01000000);
        speakerExitTime_ = 0;
        onChanged();
        return this;
      }

      private int speakerEnterTime_ ;
      /**
       * <code>optional int32 SpeakerEnterTime = 32 [default = 0];</code>
       *
       * <pre>
       * 每天进栏播报时间: UTC时间戳, 只使用小时和分钟
       * </pre>
       */
      public boolean hasSpeakerEnterTime() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int32 SpeakerEnterTime = 32 [default = 0];</code>
       *
       * <pre>
       * 每天进栏播报时间: UTC时间戳, 只使用小时和分钟
       * </pre>
       */
      public int getSpeakerEnterTime() {
        return speakerEnterTime_;
      }
      /**
       * <code>optional int32 SpeakerEnterTime = 32 [default = 0];</code>
       *
       * <pre>
       * 每天进栏播报时间: UTC时间戳, 只使用小时和分钟
       * </pre>
       */
      public Builder setSpeakerEnterTime(int value) {
        bitField0_ |= 0x02000000;
        speakerEnterTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 SpeakerEnterTime = 32 [default = 0];</code>
       *
       * <pre>
       * 每天进栏播报时间: UTC时间戳, 只使用小时和分钟
       * </pre>
       */
      public Builder clearSpeakerEnterTime() {
        bitField0_ = (bitField0_ & ~0x02000000);
        speakerEnterTime_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object communicationTimeTable_ = "";
      /**
       * <code>optional string CommunicationTimeTable = 102 [default = ""];</code>
       *
       * <pre>
       * 整点回传时间表
       * </pre>
       */
      public boolean hasCommunicationTimeTable() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional string CommunicationTimeTable = 102 [default = ""];</code>
       *
       * <pre>
       * 整点回传时间表
       * </pre>
       */
      public java.lang.String getCommunicationTimeTable() {
        java.lang.Object ref = communicationTimeTable_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            communicationTimeTable_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string CommunicationTimeTable = 102 [default = ""];</code>
       *
       * <pre>
       * 整点回传时间表
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCommunicationTimeTableBytes() {
        java.lang.Object ref = communicationTimeTable_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          communicationTimeTable_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string CommunicationTimeTable = 102 [default = ""];</code>
       *
       * <pre>
       * 整点回传时间表
       * </pre>
       */
      public Builder setCommunicationTimeTable(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x04000000;
        communicationTimeTable_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string CommunicationTimeTable = 102 [default = ""];</code>
       *
       * <pre>
       * 整点回传时间表
       * </pre>
       */
      public Builder clearCommunicationTimeTable() {
        bitField0_ = (bitField0_ & ~0x04000000);
        communicationTimeTable_ = getDefaultInstance().getCommunicationTimeTable();
        onChanged();
        return this;
      }
      /**
       * <code>optional string CommunicationTimeTable = 102 [default = ""];</code>
       *
       * <pre>
       * 整点回传时间表
       * </pre>
       */
      public Builder setCommunicationTimeTableBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x04000000;
        communicationTimeTable_ = value;
        onChanged();
        return this;
      }

      private java.util.List<protocol_v1.V1Setting.TimeRange> originTime_ =
        java.util.Collections.emptyList();
      private void ensureOriginTimeIsMutable() {
        if (!((bitField0_ & 0x08000000) == 0x08000000)) {
          originTime_ = new java.util.ArrayList<protocol_v1.V1Setting.TimeRange>(originTime_);
          bitField0_ |= 0x08000000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protocol_v1.V1Setting.TimeRange, protocol_v1.V1Setting.TimeRange.Builder, protocol_v1.V1Setting.TimeRangeOrBuilder> originTimeBuilder_;

      /**
       * <code>repeated .protocol_v1.TimeRange OriginTime = 105;</code>
       *
       * <pre>
       * repeated TimeRange PowerOffTime = 103; // 【废弃】计划关机时间范围
       * optional int32 PowerOffMode = 104 [default=0]; // 【废弃】0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
       * </pre>
       */
      public java.util.List<protocol_v1.V1Setting.TimeRange> getOriginTimeList() {
        if (originTimeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(originTime_);
        } else {
          return originTimeBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protocol_v1.TimeRange OriginTime = 105;</code>
       *
       * <pre>
       * repeated TimeRange PowerOffTime = 103; // 【废弃】计划关机时间范围
       * optional int32 PowerOffMode = 104 [default=0]; // 【废弃】0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
       * </pre>
       */
      public int getOriginTimeCount() {
        if (originTimeBuilder_ == null) {
          return originTime_.size();
        } else {
          return originTimeBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protocol_v1.TimeRange OriginTime = 105;</code>
       *
       * <pre>
       * repeated TimeRange PowerOffTime = 103; // 【废弃】计划关机时间范围
       * optional int32 PowerOffMode = 104 [default=0]; // 【废弃】0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
       * </pre>
       */
      public protocol_v1.V1Setting.TimeRange getOriginTime(int index) {
        if (originTimeBuilder_ == null) {
          return originTime_.get(index);
        } else {
          return originTimeBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protocol_v1.TimeRange OriginTime = 105;</code>
       *
       * <pre>
       * repeated TimeRange PowerOffTime = 103; // 【废弃】计划关机时间范围
       * optional int32 PowerOffMode = 104 [default=0]; // 【废弃】0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
       * </pre>
       */
      public Builder setOriginTime(
          int index, protocol_v1.V1Setting.TimeRange value) {
        if (originTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOriginTimeIsMutable();
          originTime_.set(index, value);
          onChanged();
        } else {
          originTimeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.TimeRange OriginTime = 105;</code>
       *
       * <pre>
       * repeated TimeRange PowerOffTime = 103; // 【废弃】计划关机时间范围
       * optional int32 PowerOffMode = 104 [default=0]; // 【废弃】0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
       * </pre>
       */
      public Builder setOriginTime(
          int index, protocol_v1.V1Setting.TimeRange.Builder builderForValue) {
        if (originTimeBuilder_ == null) {
          ensureOriginTimeIsMutable();
          originTime_.set(index, builderForValue.build());
          onChanged();
        } else {
          originTimeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.TimeRange OriginTime = 105;</code>
       *
       * <pre>
       * repeated TimeRange PowerOffTime = 103; // 【废弃】计划关机时间范围
       * optional int32 PowerOffMode = 104 [default=0]; // 【废弃】0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
       * </pre>
       */
      public Builder addOriginTime(protocol_v1.V1Setting.TimeRange value) {
        if (originTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOriginTimeIsMutable();
          originTime_.add(value);
          onChanged();
        } else {
          originTimeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.TimeRange OriginTime = 105;</code>
       *
       * <pre>
       * repeated TimeRange PowerOffTime = 103; // 【废弃】计划关机时间范围
       * optional int32 PowerOffMode = 104 [default=0]; // 【废弃】0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
       * </pre>
       */
      public Builder addOriginTime(
          int index, protocol_v1.V1Setting.TimeRange value) {
        if (originTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOriginTimeIsMutable();
          originTime_.add(index, value);
          onChanged();
        } else {
          originTimeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.TimeRange OriginTime = 105;</code>
       *
       * <pre>
       * repeated TimeRange PowerOffTime = 103; // 【废弃】计划关机时间范围
       * optional int32 PowerOffMode = 104 [default=0]; // 【废弃】0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
       * </pre>
       */
      public Builder addOriginTime(
          protocol_v1.V1Setting.TimeRange.Builder builderForValue) {
        if (originTimeBuilder_ == null) {
          ensureOriginTimeIsMutable();
          originTime_.add(builderForValue.build());
          onChanged();
        } else {
          originTimeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.TimeRange OriginTime = 105;</code>
       *
       * <pre>
       * repeated TimeRange PowerOffTime = 103; // 【废弃】计划关机时间范围
       * optional int32 PowerOffMode = 104 [default=0]; // 【废弃】0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
       * </pre>
       */
      public Builder addOriginTime(
          int index, protocol_v1.V1Setting.TimeRange.Builder builderForValue) {
        if (originTimeBuilder_ == null) {
          ensureOriginTimeIsMutable();
          originTime_.add(index, builderForValue.build());
          onChanged();
        } else {
          originTimeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.TimeRange OriginTime = 105;</code>
       *
       * <pre>
       * repeated TimeRange PowerOffTime = 103; // 【废弃】计划关机时间范围
       * optional int32 PowerOffMode = 104 [default=0]; // 【废弃】0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
       * </pre>
       */
      public Builder addAllOriginTime(
          java.lang.Iterable<? extends protocol_v1.V1Setting.TimeRange> values) {
        if (originTimeBuilder_ == null) {
          ensureOriginTimeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, originTime_);
          onChanged();
        } else {
          originTimeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.TimeRange OriginTime = 105;</code>
       *
       * <pre>
       * repeated TimeRange PowerOffTime = 103; // 【废弃】计划关机时间范围
       * optional int32 PowerOffMode = 104 [default=0]; // 【废弃】0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
       * </pre>
       */
      public Builder clearOriginTime() {
        if (originTimeBuilder_ == null) {
          originTime_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x08000000);
          onChanged();
        } else {
          originTimeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.TimeRange OriginTime = 105;</code>
       *
       * <pre>
       * repeated TimeRange PowerOffTime = 103; // 【废弃】计划关机时间范围
       * optional int32 PowerOffMode = 104 [default=0]; // 【废弃】0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
       * </pre>
       */
      public Builder removeOriginTime(int index) {
        if (originTimeBuilder_ == null) {
          ensureOriginTimeIsMutable();
          originTime_.remove(index);
          onChanged();
        } else {
          originTimeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.TimeRange OriginTime = 105;</code>
       *
       * <pre>
       * repeated TimeRange PowerOffTime = 103; // 【废弃】计划关机时间范围
       * optional int32 PowerOffMode = 104 [default=0]; // 【废弃】0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
       * </pre>
       */
      public protocol_v1.V1Setting.TimeRange.Builder getOriginTimeBuilder(
          int index) {
        return getOriginTimeFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protocol_v1.TimeRange OriginTime = 105;</code>
       *
       * <pre>
       * repeated TimeRange PowerOffTime = 103; // 【废弃】计划关机时间范围
       * optional int32 PowerOffMode = 104 [default=0]; // 【废弃】0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
       * </pre>
       */
      public protocol_v1.V1Setting.TimeRangeOrBuilder getOriginTimeOrBuilder(
          int index) {
        if (originTimeBuilder_ == null) {
          return originTime_.get(index);  } else {
          return originTimeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protocol_v1.TimeRange OriginTime = 105;</code>
       *
       * <pre>
       * repeated TimeRange PowerOffTime = 103; // 【废弃】计划关机时间范围
       * optional int32 PowerOffMode = 104 [default=0]; // 【废弃】0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
       * </pre>
       */
      public java.util.List<? extends protocol_v1.V1Setting.TimeRangeOrBuilder> 
           getOriginTimeOrBuilderList() {
        if (originTimeBuilder_ != null) {
          return originTimeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(originTime_);
        }
      }
      /**
       * <code>repeated .protocol_v1.TimeRange OriginTime = 105;</code>
       *
       * <pre>
       * repeated TimeRange PowerOffTime = 103; // 【废弃】计划关机时间范围
       * optional int32 PowerOffMode = 104 [default=0]; // 【废弃】0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
       * </pre>
       */
      public protocol_v1.V1Setting.TimeRange.Builder addOriginTimeBuilder() {
        return getOriginTimeFieldBuilder().addBuilder(
            protocol_v1.V1Setting.TimeRange.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol_v1.TimeRange OriginTime = 105;</code>
       *
       * <pre>
       * repeated TimeRange PowerOffTime = 103; // 【废弃】计划关机时间范围
       * optional int32 PowerOffMode = 104 [default=0]; // 【废弃】0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
       * </pre>
       */
      public protocol_v1.V1Setting.TimeRange.Builder addOriginTimeBuilder(
          int index) {
        return getOriginTimeFieldBuilder().addBuilder(
            index, protocol_v1.V1Setting.TimeRange.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol_v1.TimeRange OriginTime = 105;</code>
       *
       * <pre>
       * repeated TimeRange PowerOffTime = 103; // 【废弃】计划关机时间范围
       * optional int32 PowerOffMode = 104 [default=0]; // 【废弃】0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
       * </pre>
       */
      public java.util.List<protocol_v1.V1Setting.TimeRange.Builder> 
           getOriginTimeBuilderList() {
        return getOriginTimeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protocol_v1.V1Setting.TimeRange, protocol_v1.V1Setting.TimeRange.Builder, protocol_v1.V1Setting.TimeRangeOrBuilder> 
          getOriginTimeFieldBuilder() {
        if (originTimeBuilder_ == null) {
          originTimeBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protocol_v1.V1Setting.TimeRange, protocol_v1.V1Setting.TimeRange.Builder, protocol_v1.V1Setting.TimeRangeOrBuilder>(
                  originTime_,
                  ((bitField0_ & 0x08000000) == 0x08000000),
                  getParentForChildren(),
                  isClean());
          originTime_ = null;
        }
        return originTimeBuilder_;
      }

      private int originMode_ ;
      /**
       * <code>optional int32 OriginMode = 106 [default = 0];</code>
       *
       * <pre>
       * 0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
       * </pre>
       */
      public boolean hasOriginMode() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int32 OriginMode = 106 [default = 0];</code>
       *
       * <pre>
       * 0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
       * </pre>
       */
      public int getOriginMode() {
        return originMode_;
      }
      /**
       * <code>optional int32 OriginMode = 106 [default = 0];</code>
       *
       * <pre>
       * 0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
       * </pre>
       */
      public Builder setOriginMode(int value) {
        bitField0_ |= 0x10000000;
        originMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 OriginMode = 106 [default = 0];</code>
       *
       * <pre>
       * 0: disable, 1: unix timestamp, 2：每小时从0分开始的秒数, 3: 每天从0点开始的秒数,  4：每月从1号0点开始的秒数
       * </pre>
       */
      public Builder clearOriginMode() {
        bitField0_ = (bitField0_ & ~0x10000000);
        originMode_ = 0;
        onChanged();
        return this;
      }

      private int estrusSampleMode_ ;
      /**
       * <code>optional int32 EstrusSampleMode = 107 [default = 0];</code>
       *
       * <pre>
       * 发情中间结果模式: 0 - 关闭, 1 - 定时采样
       * </pre>
       */
      public boolean hasEstrusSampleMode() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional int32 EstrusSampleMode = 107 [default = 0];</code>
       *
       * <pre>
       * 发情中间结果模式: 0 - 关闭, 1 - 定时采样
       * </pre>
       */
      public int getEstrusSampleMode() {
        return estrusSampleMode_;
      }
      /**
       * <code>optional int32 EstrusSampleMode = 107 [default = 0];</code>
       *
       * <pre>
       * 发情中间结果模式: 0 - 关闭, 1 - 定时采样
       * </pre>
       */
      public Builder setEstrusSampleMode(int value) {
        bitField0_ |= 0x20000000;
        estrusSampleMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 EstrusSampleMode = 107 [default = 0];</code>
       *
       * <pre>
       * 发情中间结果模式: 0 - 关闭, 1 - 定时采样
       * </pre>
       */
      public Builder clearEstrusSampleMode() {
        bitField0_ = (bitField0_ & ~0x20000000);
        estrusSampleMode_ = 0;
        onChanged();
        return this;
      }

      private int estrusSampleInterval_ ;
      /**
       * <code>optional int32 EstrusSampleInterval = 108 [default = 0];</code>
       *
       * <pre>
       * 发情中间结果间隔: 秒
       * </pre>
       */
      public boolean hasEstrusSampleInterval() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional int32 EstrusSampleInterval = 108 [default = 0];</code>
       *
       * <pre>
       * 发情中间结果间隔: 秒
       * </pre>
       */
      public int getEstrusSampleInterval() {
        return estrusSampleInterval_;
      }
      /**
       * <code>optional int32 EstrusSampleInterval = 108 [default = 0];</code>
       *
       * <pre>
       * 发情中间结果间隔: 秒
       * </pre>
       */
      public Builder setEstrusSampleInterval(int value) {
        bitField0_ |= 0x40000000;
        estrusSampleInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 EstrusSampleInterval = 108 [default = 0];</code>
       *
       * <pre>
       * 发情中间结果间隔: 秒
       * </pre>
       */
      public Builder clearEstrusSampleInterval() {
        bitField0_ = (bitField0_ & ~0x40000000);
        estrusSampleInterval_ = 0;
        onChanged();
        return this;
      }

      private int behavior2SampleMode_ ;
      /**
       * <code>optional int32 Behavior2SampleMode = 109 [default = 0];</code>
       *
       * <pre>
       * 行为采样模式: 0 - 关闭, 1 - 定时采样
       * </pre>
       */
      public boolean hasBehavior2SampleMode() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional int32 Behavior2SampleMode = 109 [default = 0];</code>
       *
       * <pre>
       * 行为采样模式: 0 - 关闭, 1 - 定时采样
       * </pre>
       */
      public int getBehavior2SampleMode() {
        return behavior2SampleMode_;
      }
      /**
       * <code>optional int32 Behavior2SampleMode = 109 [default = 0];</code>
       *
       * <pre>
       * 行为采样模式: 0 - 关闭, 1 - 定时采样
       * </pre>
       */
      public Builder setBehavior2SampleMode(int value) {
        bitField0_ |= 0x80000000;
        behavior2SampleMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Behavior2SampleMode = 109 [default = 0];</code>
       *
       * <pre>
       * 行为采样模式: 0 - 关闭, 1 - 定时采样
       * </pre>
       */
      public Builder clearBehavior2SampleMode() {
        bitField0_ = (bitField0_ & ~0x80000000);
        behavior2SampleMode_ = 0;
        onChanged();
        return this;
      }

      private int behavior2SampleInterval_ ;
      /**
       * <code>optional int32 Behavior2SampleInterval = 110 [default = 0];</code>
       *
       * <pre>
       * 行为采样间隔: 秒
       * </pre>
       */
      public boolean hasBehavior2SampleInterval() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 Behavior2SampleInterval = 110 [default = 0];</code>
       *
       * <pre>
       * 行为采样间隔: 秒
       * </pre>
       */
      public int getBehavior2SampleInterval() {
        return behavior2SampleInterval_;
      }
      /**
       * <code>optional int32 Behavior2SampleInterval = 110 [default = 0];</code>
       *
       * <pre>
       * 行为采样间隔: 秒
       * </pre>
       */
      public Builder setBehavior2SampleInterval(int value) {
        bitField1_ |= 0x00000001;
        behavior2SampleInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Behavior2SampleInterval = 110 [default = 0];</code>
       *
       * <pre>
       * 行为采样间隔: 秒
       * </pre>
       */
      public Builder clearBehavior2SampleInterval() {
        bitField1_ = (bitField1_ & ~0x00000001);
        behavior2SampleInterval_ = 0;
        onChanged();
        return this;
      }

      private protocol_v1.V1Setting.GprsPowerSaving gprsPowerSaving_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.GprsPowerSaving, protocol_v1.V1Setting.GprsPowerSaving.Builder, protocol_v1.V1Setting.GprsPowerSavingOrBuilder> gprsPowerSavingBuilder_;
      /**
       * <code>optional .protocol_v1.GprsPowerSaving GprsPowerSaving = 111;</code>
       *
       * <pre>
       * 上传节电模式
       * </pre>
       */
      public boolean hasGprsPowerSaving() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .protocol_v1.GprsPowerSaving GprsPowerSaving = 111;</code>
       *
       * <pre>
       * 上传节电模式
       * </pre>
       */
      public protocol_v1.V1Setting.GprsPowerSaving getGprsPowerSaving() {
        if (gprsPowerSavingBuilder_ == null) {
          return gprsPowerSaving_ == null ? protocol_v1.V1Setting.GprsPowerSaving.getDefaultInstance() : gprsPowerSaving_;
        } else {
          return gprsPowerSavingBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.GprsPowerSaving GprsPowerSaving = 111;</code>
       *
       * <pre>
       * 上传节电模式
       * </pre>
       */
      public Builder setGprsPowerSaving(protocol_v1.V1Setting.GprsPowerSaving value) {
        if (gprsPowerSavingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gprsPowerSaving_ = value;
          onChanged();
        } else {
          gprsPowerSavingBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .protocol_v1.GprsPowerSaving GprsPowerSaving = 111;</code>
       *
       * <pre>
       * 上传节电模式
       * </pre>
       */
      public Builder setGprsPowerSaving(
          protocol_v1.V1Setting.GprsPowerSaving.Builder builderForValue) {
        if (gprsPowerSavingBuilder_ == null) {
          gprsPowerSaving_ = builderForValue.build();
          onChanged();
        } else {
          gprsPowerSavingBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .protocol_v1.GprsPowerSaving GprsPowerSaving = 111;</code>
       *
       * <pre>
       * 上传节电模式
       * </pre>
       */
      public Builder mergeGprsPowerSaving(protocol_v1.V1Setting.GprsPowerSaving value) {
        if (gprsPowerSavingBuilder_ == null) {
          if (((bitField1_ & 0x00000002) == 0x00000002) &&
              gprsPowerSaving_ != null &&
              gprsPowerSaving_ != protocol_v1.V1Setting.GprsPowerSaving.getDefaultInstance()) {
            gprsPowerSaving_ =
              protocol_v1.V1Setting.GprsPowerSaving.newBuilder(gprsPowerSaving_).mergeFrom(value).buildPartial();
          } else {
            gprsPowerSaving_ = value;
          }
          onChanged();
        } else {
          gprsPowerSavingBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .protocol_v1.GprsPowerSaving GprsPowerSaving = 111;</code>
       *
       * <pre>
       * 上传节电模式
       * </pre>
       */
      public Builder clearGprsPowerSaving() {
        if (gprsPowerSavingBuilder_ == null) {
          gprsPowerSaving_ = null;
          onChanged();
        } else {
          gprsPowerSavingBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .protocol_v1.GprsPowerSaving GprsPowerSaving = 111;</code>
       *
       * <pre>
       * 上传节电模式
       * </pre>
       */
      public protocol_v1.V1Setting.GprsPowerSaving.Builder getGprsPowerSavingBuilder() {
        bitField1_ |= 0x00000002;
        onChanged();
        return getGprsPowerSavingFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.GprsPowerSaving GprsPowerSaving = 111;</code>
       *
       * <pre>
       * 上传节电模式
       * </pre>
       */
      public protocol_v1.V1Setting.GprsPowerSavingOrBuilder getGprsPowerSavingOrBuilder() {
        if (gprsPowerSavingBuilder_ != null) {
          return gprsPowerSavingBuilder_.getMessageOrBuilder();
        } else {
          return gprsPowerSaving_ == null ?
              protocol_v1.V1Setting.GprsPowerSaving.getDefaultInstance() : gprsPowerSaving_;
        }
      }
      /**
       * <code>optional .protocol_v1.GprsPowerSaving GprsPowerSaving = 111;</code>
       *
       * <pre>
       * 上传节电模式
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.GprsPowerSaving, protocol_v1.V1Setting.GprsPowerSaving.Builder, protocol_v1.V1Setting.GprsPowerSavingOrBuilder> 
          getGprsPowerSavingFieldBuilder() {
        if (gprsPowerSavingBuilder_ == null) {
          gprsPowerSavingBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1Setting.GprsPowerSaving, protocol_v1.V1Setting.GprsPowerSaving.Builder, protocol_v1.V1Setting.GprsPowerSavingOrBuilder>(
                  getGprsPowerSaving(),
                  getParentForChildren(),
                  isClean());
          gprsPowerSaving_ = null;
        }
        return gprsPowerSavingBuilder_;
      }

      private java.util.List<protocol_v1.V1Setting.VoltageBoostLevel> voltageBoost_ =
        java.util.Collections.emptyList();
      private void ensureVoltageBoostIsMutable() {
        if (!((bitField1_ & 0x00000004) == 0x00000004)) {
          voltageBoost_ = new java.util.ArrayList<protocol_v1.V1Setting.VoltageBoostLevel>(voltageBoost_);
          bitField1_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protocol_v1.V1Setting.VoltageBoostLevel, protocol_v1.V1Setting.VoltageBoostLevel.Builder, protocol_v1.V1Setting.VoltageBoostLevelOrBuilder> voltageBoostBuilder_;

      /**
       * <code>repeated .protocol_v1.VoltageBoostLevel VoltageBoost = 112;</code>
       *
       * <pre>
       * 电压Boost配置, 按电压门限由高到低排列, 最多支持4级
       * </pre>
       */
      public java.util.List<protocol_v1.V1Setting.VoltageBoostLevel> getVoltageBoostList() {
        if (voltageBoostBuilder_ == null) {
          return java.util.Collections.unmodifiableList(voltageBoost_);
        } else {
          return voltageBoostBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protocol_v1.VoltageBoostLevel VoltageBoost = 112;</code>
       *
       * <pre>
       * 电压Boost配置, 按电压门限由高到低排列, 最多支持4级
       * </pre>
       */
      public int getVoltageBoostCount() {
        if (voltageBoostBuilder_ == null) {
          return voltageBoost_.size();
        } else {
          return voltageBoostBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protocol_v1.VoltageBoostLevel VoltageBoost = 112;</code>
       *
       * <pre>
       * 电压Boost配置, 按电压门限由高到低排列, 最多支持4级
       * </pre>
       */
      public protocol_v1.V1Setting.VoltageBoostLevel getVoltageBoost(int index) {
        if (voltageBoostBuilder_ == null) {
          return voltageBoost_.get(index);
        } else {
          return voltageBoostBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protocol_v1.VoltageBoostLevel VoltageBoost = 112;</code>
       *
       * <pre>
       * 电压Boost配置, 按电压门限由高到低排列, 最多支持4级
       * </pre>
       */
      public Builder setVoltageBoost(
          int index, protocol_v1.V1Setting.VoltageBoostLevel value) {
        if (voltageBoostBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVoltageBoostIsMutable();
          voltageBoost_.set(index, value);
          onChanged();
        } else {
          voltageBoostBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.VoltageBoostLevel VoltageBoost = 112;</code>
       *
       * <pre>
       * 电压Boost配置, 按电压门限由高到低排列, 最多支持4级
       * </pre>
       */
      public Builder setVoltageBoost(
          int index, protocol_v1.V1Setting.VoltageBoostLevel.Builder builderForValue) {
        if (voltageBoostBuilder_ == null) {
          ensureVoltageBoostIsMutable();
          voltageBoost_.set(index, builderForValue.build());
          onChanged();
        } else {
          voltageBoostBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.VoltageBoostLevel VoltageBoost = 112;</code>
       *
       * <pre>
       * 电压Boost配置, 按电压门限由高到低排列, 最多支持4级
       * </pre>
       */
      public Builder addVoltageBoost(protocol_v1.V1Setting.VoltageBoostLevel value) {
        if (voltageBoostBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVoltageBoostIsMutable();
          voltageBoost_.add(value);
          onChanged();
        } else {
          voltageBoostBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.VoltageBoostLevel VoltageBoost = 112;</code>
       *
       * <pre>
       * 电压Boost配置, 按电压门限由高到低排列, 最多支持4级
       * </pre>
       */
      public Builder addVoltageBoost(
          int index, protocol_v1.V1Setting.VoltageBoostLevel value) {
        if (voltageBoostBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVoltageBoostIsMutable();
          voltageBoost_.add(index, value);
          onChanged();
        } else {
          voltageBoostBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.VoltageBoostLevel VoltageBoost = 112;</code>
       *
       * <pre>
       * 电压Boost配置, 按电压门限由高到低排列, 最多支持4级
       * </pre>
       */
      public Builder addVoltageBoost(
          protocol_v1.V1Setting.VoltageBoostLevel.Builder builderForValue) {
        if (voltageBoostBuilder_ == null) {
          ensureVoltageBoostIsMutable();
          voltageBoost_.add(builderForValue.build());
          onChanged();
        } else {
          voltageBoostBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.VoltageBoostLevel VoltageBoost = 112;</code>
       *
       * <pre>
       * 电压Boost配置, 按电压门限由高到低排列, 最多支持4级
       * </pre>
       */
      public Builder addVoltageBoost(
          int index, protocol_v1.V1Setting.VoltageBoostLevel.Builder builderForValue) {
        if (voltageBoostBuilder_ == null) {
          ensureVoltageBoostIsMutable();
          voltageBoost_.add(index, builderForValue.build());
          onChanged();
        } else {
          voltageBoostBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.VoltageBoostLevel VoltageBoost = 112;</code>
       *
       * <pre>
       * 电压Boost配置, 按电压门限由高到低排列, 最多支持4级
       * </pre>
       */
      public Builder addAllVoltageBoost(
          java.lang.Iterable<? extends protocol_v1.V1Setting.VoltageBoostLevel> values) {
        if (voltageBoostBuilder_ == null) {
          ensureVoltageBoostIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, voltageBoost_);
          onChanged();
        } else {
          voltageBoostBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.VoltageBoostLevel VoltageBoost = 112;</code>
       *
       * <pre>
       * 电压Boost配置, 按电压门限由高到低排列, 最多支持4级
       * </pre>
       */
      public Builder clearVoltageBoost() {
        if (voltageBoostBuilder_ == null) {
          voltageBoost_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000004);
          onChanged();
        } else {
          voltageBoostBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.VoltageBoostLevel VoltageBoost = 112;</code>
       *
       * <pre>
       * 电压Boost配置, 按电压门限由高到低排列, 最多支持4级
       * </pre>
       */
      public Builder removeVoltageBoost(int index) {
        if (voltageBoostBuilder_ == null) {
          ensureVoltageBoostIsMutable();
          voltageBoost_.remove(index);
          onChanged();
        } else {
          voltageBoostBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.VoltageBoostLevel VoltageBoost = 112;</code>
       *
       * <pre>
       * 电压Boost配置, 按电压门限由高到低排列, 最多支持4级
       * </pre>
       */
      public protocol_v1.V1Setting.VoltageBoostLevel.Builder getVoltageBoostBuilder(
          int index) {
        return getVoltageBoostFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protocol_v1.VoltageBoostLevel VoltageBoost = 112;</code>
       *
       * <pre>
       * 电压Boost配置, 按电压门限由高到低排列, 最多支持4级
       * </pre>
       */
      public protocol_v1.V1Setting.VoltageBoostLevelOrBuilder getVoltageBoostOrBuilder(
          int index) {
        if (voltageBoostBuilder_ == null) {
          return voltageBoost_.get(index);  } else {
          return voltageBoostBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protocol_v1.VoltageBoostLevel VoltageBoost = 112;</code>
       *
       * <pre>
       * 电压Boost配置, 按电压门限由高到低排列, 最多支持4级
       * </pre>
       */
      public java.util.List<? extends protocol_v1.V1Setting.VoltageBoostLevelOrBuilder> 
           getVoltageBoostOrBuilderList() {
        if (voltageBoostBuilder_ != null) {
          return voltageBoostBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(voltageBoost_);
        }
      }
      /**
       * <code>repeated .protocol_v1.VoltageBoostLevel VoltageBoost = 112;</code>
       *
       * <pre>
       * 电压Boost配置, 按电压门限由高到低排列, 最多支持4级
       * </pre>
       */
      public protocol_v1.V1Setting.VoltageBoostLevel.Builder addVoltageBoostBuilder() {
        return getVoltageBoostFieldBuilder().addBuilder(
            protocol_v1.V1Setting.VoltageBoostLevel.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol_v1.VoltageBoostLevel VoltageBoost = 112;</code>
       *
       * <pre>
       * 电压Boost配置, 按电压门限由高到低排列, 最多支持4级
       * </pre>
       */
      public protocol_v1.V1Setting.VoltageBoostLevel.Builder addVoltageBoostBuilder(
          int index) {
        return getVoltageBoostFieldBuilder().addBuilder(
            index, protocol_v1.V1Setting.VoltageBoostLevel.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol_v1.VoltageBoostLevel VoltageBoost = 112;</code>
       *
       * <pre>
       * 电压Boost配置, 按电压门限由高到低排列, 最多支持4级
       * </pre>
       */
      public java.util.List<protocol_v1.V1Setting.VoltageBoostLevel.Builder> 
           getVoltageBoostBuilderList() {
        return getVoltageBoostFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protocol_v1.V1Setting.VoltageBoostLevel, protocol_v1.V1Setting.VoltageBoostLevel.Builder, protocol_v1.V1Setting.VoltageBoostLevelOrBuilder> 
          getVoltageBoostFieldBuilder() {
        if (voltageBoostBuilder_ == null) {
          voltageBoostBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protocol_v1.V1Setting.VoltageBoostLevel, protocol_v1.V1Setting.VoltageBoostLevel.Builder, protocol_v1.V1Setting.VoltageBoostLevelOrBuilder>(
                  voltageBoost_,
                  ((bitField1_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          voltageBoost_ = null;
        }
        return voltageBoostBuilder_;
      }

      private protocol_v1.V1Setting.SpeedBoostLevel speedBoost_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.SpeedBoostLevel, protocol_v1.V1Setting.SpeedBoostLevel.Builder, protocol_v1.V1Setting.SpeedBoostLevelOrBuilder> speedBoostBuilder_;
      /**
       * <code>optional .protocol_v1.SpeedBoostLevel SpeedBoost = 113;</code>
       *
       * <pre>
       * 速度Boost配置
       * </pre>
       */
      public boolean hasSpeedBoost() {
        return ((bitField1_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .protocol_v1.SpeedBoostLevel SpeedBoost = 113;</code>
       *
       * <pre>
       * 速度Boost配置
       * </pre>
       */
      public protocol_v1.V1Setting.SpeedBoostLevel getSpeedBoost() {
        if (speedBoostBuilder_ == null) {
          return speedBoost_ == null ? protocol_v1.V1Setting.SpeedBoostLevel.getDefaultInstance() : speedBoost_;
        } else {
          return speedBoostBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.SpeedBoostLevel SpeedBoost = 113;</code>
       *
       * <pre>
       * 速度Boost配置
       * </pre>
       */
      public Builder setSpeedBoost(protocol_v1.V1Setting.SpeedBoostLevel value) {
        if (speedBoostBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          speedBoost_ = value;
          onChanged();
        } else {
          speedBoostBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .protocol_v1.SpeedBoostLevel SpeedBoost = 113;</code>
       *
       * <pre>
       * 速度Boost配置
       * </pre>
       */
      public Builder setSpeedBoost(
          protocol_v1.V1Setting.SpeedBoostLevel.Builder builderForValue) {
        if (speedBoostBuilder_ == null) {
          speedBoost_ = builderForValue.build();
          onChanged();
        } else {
          speedBoostBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .protocol_v1.SpeedBoostLevel SpeedBoost = 113;</code>
       *
       * <pre>
       * 速度Boost配置
       * </pre>
       */
      public Builder mergeSpeedBoost(protocol_v1.V1Setting.SpeedBoostLevel value) {
        if (speedBoostBuilder_ == null) {
          if (((bitField1_ & 0x00000008) == 0x00000008) &&
              speedBoost_ != null &&
              speedBoost_ != protocol_v1.V1Setting.SpeedBoostLevel.getDefaultInstance()) {
            speedBoost_ =
              protocol_v1.V1Setting.SpeedBoostLevel.newBuilder(speedBoost_).mergeFrom(value).buildPartial();
          } else {
            speedBoost_ = value;
          }
          onChanged();
        } else {
          speedBoostBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .protocol_v1.SpeedBoostLevel SpeedBoost = 113;</code>
       *
       * <pre>
       * 速度Boost配置
       * </pre>
       */
      public Builder clearSpeedBoost() {
        if (speedBoostBuilder_ == null) {
          speedBoost_ = null;
          onChanged();
        } else {
          speedBoostBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .protocol_v1.SpeedBoostLevel SpeedBoost = 113;</code>
       *
       * <pre>
       * 速度Boost配置
       * </pre>
       */
      public protocol_v1.V1Setting.SpeedBoostLevel.Builder getSpeedBoostBuilder() {
        bitField1_ |= 0x00000008;
        onChanged();
        return getSpeedBoostFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.SpeedBoostLevel SpeedBoost = 113;</code>
       *
       * <pre>
       * 速度Boost配置
       * </pre>
       */
      public protocol_v1.V1Setting.SpeedBoostLevelOrBuilder getSpeedBoostOrBuilder() {
        if (speedBoostBuilder_ != null) {
          return speedBoostBuilder_.getMessageOrBuilder();
        } else {
          return speedBoost_ == null ?
              protocol_v1.V1Setting.SpeedBoostLevel.getDefaultInstance() : speedBoost_;
        }
      }
      /**
       * <code>optional .protocol_v1.SpeedBoostLevel SpeedBoost = 113;</code>
       *
       * <pre>
       * 速度Boost配置
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.SpeedBoostLevel, protocol_v1.V1Setting.SpeedBoostLevel.Builder, protocol_v1.V1Setting.SpeedBoostLevelOrBuilder> 
          getSpeedBoostFieldBuilder() {
        if (speedBoostBuilder_ == null) {
          speedBoostBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1Setting.SpeedBoostLevel, protocol_v1.V1Setting.SpeedBoostLevel.Builder, protocol_v1.V1Setting.SpeedBoostLevelOrBuilder>(
                  getSpeedBoost(),
                  getParentForChildren(),
                  isClean());
          speedBoost_ = null;
        }
        return speedBoostBuilder_;
      }

      private int randomSecond_ ;
      /**
       * <code>optional int32 RandomSecond = 114 [default = 0];</code>
       *
       * <pre>
       * 随机秒数, 回传时间增加随机秒数
       * </pre>
       */
      public boolean hasRandomSecond() {
        return ((bitField1_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 RandomSecond = 114 [default = 0];</code>
       *
       * <pre>
       * 随机秒数, 回传时间增加随机秒数
       * </pre>
       */
      public int getRandomSecond() {
        return randomSecond_;
      }
      /**
       * <code>optional int32 RandomSecond = 114 [default = 0];</code>
       *
       * <pre>
       * 随机秒数, 回传时间增加随机秒数
       * </pre>
       */
      public Builder setRandomSecond(int value) {
        bitField1_ |= 0x00000010;
        randomSecond_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 RandomSecond = 114 [default = 0];</code>
       *
       * <pre>
       * 随机秒数, 回传时间增加随机秒数
       * </pre>
       */
      public Builder clearRandomSecond() {
        bitField1_ = (bitField1_ & ~0x00000010);
        randomSecond_ = 0;
        onChanged();
        return this;
      }

      private int behaviorSampleStrategy_ ;
      /**
       * <code>optional uint32 BehaviorSampleStrategy = 115 [default = 0];</code>
       *
       * <pre>
       * 行为采样位掩码: bit0 - ODBA, bit1 - ODBAxyz + MeanDLxyz, bit2 - 行为分析, bit3 - 发情检测, bit4 - 计步器
       * </pre>
       */
      public boolean hasBehaviorSampleStrategy() {
        return ((bitField1_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 BehaviorSampleStrategy = 115 [default = 0];</code>
       *
       * <pre>
       * 行为采样位掩码: bit0 - ODBA, bit1 - ODBAxyz + MeanDLxyz, bit2 - 行为分析, bit3 - 发情检测, bit4 - 计步器
       * </pre>
       */
      public int getBehaviorSampleStrategy() {
        return behaviorSampleStrategy_;
      }
      /**
       * <code>optional uint32 BehaviorSampleStrategy = 115 [default = 0];</code>
       *
       * <pre>
       * 行为采样位掩码: bit0 - ODBA, bit1 - ODBAxyz + MeanDLxyz, bit2 - 行为分析, bit3 - 发情检测, bit4 - 计步器
       * </pre>
       */
      public Builder setBehaviorSampleStrategy(int value) {
        bitField1_ |= 0x00000020;
        behaviorSampleStrategy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 BehaviorSampleStrategy = 115 [default = 0];</code>
       *
       * <pre>
       * 行为采样位掩码: bit0 - ODBA, bit1 - ODBAxyz + MeanDLxyz, bit2 - 行为分析, bit3 - 发情检测, bit4 - 计步器
       * </pre>
       */
      public Builder clearBehaviorSampleStrategy() {
        bitField1_ = (bitField1_ & ~0x00000020);
        behaviorSampleStrategy_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList userPhoneNumber_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureUserPhoneNumberIsMutable() {
        if (!((bitField1_ & 0x00000040) == 0x00000040)) {
          userPhoneNumber_ = new com.google.protobuf.LazyStringArrayList(userPhoneNumber_);
          bitField1_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated string UserPhoneNumber = 116;</code>
       *
       * <pre>
       * 用户电话号码, 唤醒白名单&amp;报警接收机号码
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getUserPhoneNumberList() {
        return userPhoneNumber_.getUnmodifiableView();
      }
      /**
       * <code>repeated string UserPhoneNumber = 116;</code>
       *
       * <pre>
       * 用户电话号码, 唤醒白名单&amp;报警接收机号码
       * </pre>
       */
      public int getUserPhoneNumberCount() {
        return userPhoneNumber_.size();
      }
      /**
       * <code>repeated string UserPhoneNumber = 116;</code>
       *
       * <pre>
       * 用户电话号码, 唤醒白名单&amp;报警接收机号码
       * </pre>
       */
      public java.lang.String getUserPhoneNumber(int index) {
        return userPhoneNumber_.get(index);
      }
      /**
       * <code>repeated string UserPhoneNumber = 116;</code>
       *
       * <pre>
       * 用户电话号码, 唤醒白名单&amp;报警接收机号码
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUserPhoneNumberBytes(int index) {
        return userPhoneNumber_.getByteString(index);
      }
      /**
       * <code>repeated string UserPhoneNumber = 116;</code>
       *
       * <pre>
       * 用户电话号码, 唤醒白名单&amp;报警接收机号码
       * </pre>
       */
      public Builder setUserPhoneNumber(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureUserPhoneNumberIsMutable();
        userPhoneNumber_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string UserPhoneNumber = 116;</code>
       *
       * <pre>
       * 用户电话号码, 唤醒白名单&amp;报警接收机号码
       * </pre>
       */
      public Builder addUserPhoneNumber(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureUserPhoneNumberIsMutable();
        userPhoneNumber_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string UserPhoneNumber = 116;</code>
       *
       * <pre>
       * 用户电话号码, 唤醒白名单&amp;报警接收机号码
       * </pre>
       */
      public Builder addAllUserPhoneNumber(
          java.lang.Iterable<java.lang.String> values) {
        ensureUserPhoneNumberIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, userPhoneNumber_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string UserPhoneNumber = 116;</code>
       *
       * <pre>
       * 用户电话号码, 唤醒白名单&amp;报警接收机号码
       * </pre>
       */
      public Builder clearUserPhoneNumber() {
        userPhoneNumber_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField1_ = (bitField1_ & ~0x00000040);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string UserPhoneNumber = 116;</code>
       *
       * <pre>
       * 用户电话号码, 唤醒白名单&amp;报警接收机号码
       * </pre>
       */
      public Builder addUserPhoneNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureUserPhoneNumberIsMutable();
        userPhoneNumber_.add(value);
        onChanged();
        return this;
      }

      private int hubMode_ ;
      /**
       * <code>optional int32 HubMode = 120 [default = 0];</code>
       *
       * <pre>
       * 0: disable, 1: ble hub
       * </pre>
       */
      public boolean hasHubMode() {
        return ((bitField1_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 HubMode = 120 [default = 0];</code>
       *
       * <pre>
       * 0: disable, 1: ble hub
       * </pre>
       */
      public int getHubMode() {
        return hubMode_;
      }
      /**
       * <code>optional int32 HubMode = 120 [default = 0];</code>
       *
       * <pre>
       * 0: disable, 1: ble hub
       * </pre>
       */
      public Builder setHubMode(int value) {
        bitField1_ |= 0x00000080;
        hubMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 HubMode = 120 [default = 0];</code>
       *
       * <pre>
       * 0: disable, 1: ble hub
       * </pre>
       */
      public Builder clearHubMode() {
        bitField1_ = (bitField1_ & ~0x00000080);
        hubMode_ = 0;
        onChanged();
        return this;
      }

      private int hashSecond_ ;
      /**
       * <code>optional uint32 HashSecond = 121 [default = 0];</code>
       *
       * <pre>
       * setting hash, 目前为setting修改时间(updated_at)的秒, 为unix time
       * </pre>
       */
      public boolean hasHashSecond() {
        return ((bitField1_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 HashSecond = 121 [default = 0];</code>
       *
       * <pre>
       * setting hash, 目前为setting修改时间(updated_at)的秒, 为unix time
       * </pre>
       */
      public int getHashSecond() {
        return hashSecond_;
      }
      /**
       * <code>optional uint32 HashSecond = 121 [default = 0];</code>
       *
       * <pre>
       * setting hash, 目前为setting修改时间(updated_at)的秒, 为unix time
       * </pre>
       */
      public Builder setHashSecond(int value) {
        bitField1_ |= 0x00000100;
        hashSecond_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 HashSecond = 121 [default = 0];</code>
       *
       * <pre>
       * setting hash, 目前为setting修改时间(updated_at)的秒, 为unix time
       * </pre>
       */
      public Builder clearHashSecond() {
        bitField1_ = (bitField1_ & ~0x00000100);
        hashSecond_ = 0;
        onChanged();
        return this;
      }

      private int hashMillisecond_ ;
      /**
       * <code>optional uint32 HashMillisecond = 122 [default = 0];</code>
       *
       * <pre>
       * setting hash, 目前为setting修改时间(updated_at)的毫秒
       * </pre>
       */
      public boolean hasHashMillisecond() {
        return ((bitField1_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 HashMillisecond = 122 [default = 0];</code>
       *
       * <pre>
       * setting hash, 目前为setting修改时间(updated_at)的毫秒
       * </pre>
       */
      public int getHashMillisecond() {
        return hashMillisecond_;
      }
      /**
       * <code>optional uint32 HashMillisecond = 122 [default = 0];</code>
       *
       * <pre>
       * setting hash, 目前为setting修改时间(updated_at)的毫秒
       * </pre>
       */
      public Builder setHashMillisecond(int value) {
        bitField1_ |= 0x00000200;
        hashMillisecond_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 HashMillisecond = 122 [default = 0];</code>
       *
       * <pre>
       * setting hash, 目前为setting修改时间(updated_at)的毫秒
       * </pre>
       */
      public Builder clearHashMillisecond() {
        bitField1_ = (bitField1_ & ~0x00000200);
        hashMillisecond_ = 0;
        onChanged();
        return this;
      }

      private int cellularLocationMode_ ;
      /**
       * <code>optional int32 CellularLocationMode = 124;</code>
       *
       * <pre>
       * 基站定位开关： 0 - 关闭,  非0 - 开启
       * </pre>
       */
      public boolean hasCellularLocationMode() {
        return ((bitField1_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 CellularLocationMode = 124;</code>
       *
       * <pre>
       * 基站定位开关： 0 - 关闭,  非0 - 开启
       * </pre>
       */
      public int getCellularLocationMode() {
        return cellularLocationMode_;
      }
      /**
       * <code>optional int32 CellularLocationMode = 124;</code>
       *
       * <pre>
       * 基站定位开关： 0 - 关闭,  非0 - 开启
       * </pre>
       */
      public Builder setCellularLocationMode(int value) {
        bitField1_ |= 0x00000400;
        cellularLocationMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 CellularLocationMode = 124;</code>
       *
       * <pre>
       * 基站定位开关： 0 - 关闭,  非0 - 开启
       * </pre>
       */
      public Builder clearCellularLocationMode() {
        bitField1_ = (bitField1_ & ~0x00000400);
        cellularLocationMode_ = 0;
        onChanged();
        return this;
      }

      private protocol_v1.V1Switch.Switch stepsSwitch_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Switch.Switch, protocol_v1.V1Switch.Switch.Builder, protocol_v1.V1Switch.SwitchOrBuilder> stepsSwitchBuilder_;
      /**
       * <code>optional .protocol_v1.Switch StepsSwitch = 125;</code>
       *
       * <pre>
       * 步数与odba配置
       * </pre>
       */
      public boolean hasStepsSwitch() {
        return ((bitField1_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .protocol_v1.Switch StepsSwitch = 125;</code>
       *
       * <pre>
       * 步数与odba配置
       * </pre>
       */
      public protocol_v1.V1Switch.Switch getStepsSwitch() {
        if (stepsSwitchBuilder_ == null) {
          return stepsSwitch_ == null ? protocol_v1.V1Switch.Switch.getDefaultInstance() : stepsSwitch_;
        } else {
          return stepsSwitchBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.Switch StepsSwitch = 125;</code>
       *
       * <pre>
       * 步数与odba配置
       * </pre>
       */
      public Builder setStepsSwitch(protocol_v1.V1Switch.Switch value) {
        if (stepsSwitchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          stepsSwitch_ = value;
          onChanged();
        } else {
          stepsSwitchBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Switch StepsSwitch = 125;</code>
       *
       * <pre>
       * 步数与odba配置
       * </pre>
       */
      public Builder setStepsSwitch(
          protocol_v1.V1Switch.Switch.Builder builderForValue) {
        if (stepsSwitchBuilder_ == null) {
          stepsSwitch_ = builderForValue.build();
          onChanged();
        } else {
          stepsSwitchBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Switch StepsSwitch = 125;</code>
       *
       * <pre>
       * 步数与odba配置
       * </pre>
       */
      public Builder mergeStepsSwitch(protocol_v1.V1Switch.Switch value) {
        if (stepsSwitchBuilder_ == null) {
          if (((bitField1_ & 0x00000800) == 0x00000800) &&
              stepsSwitch_ != null &&
              stepsSwitch_ != protocol_v1.V1Switch.Switch.getDefaultInstance()) {
            stepsSwitch_ =
              protocol_v1.V1Switch.Switch.newBuilder(stepsSwitch_).mergeFrom(value).buildPartial();
          } else {
            stepsSwitch_ = value;
          }
          onChanged();
        } else {
          stepsSwitchBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Switch StepsSwitch = 125;</code>
       *
       * <pre>
       * 步数与odba配置
       * </pre>
       */
      public Builder clearStepsSwitch() {
        if (stepsSwitchBuilder_ == null) {
          stepsSwitch_ = null;
          onChanged();
        } else {
          stepsSwitchBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .protocol_v1.Switch StepsSwitch = 125;</code>
       *
       * <pre>
       * 步数与odba配置
       * </pre>
       */
      public protocol_v1.V1Switch.Switch.Builder getStepsSwitchBuilder() {
        bitField1_ |= 0x00000800;
        onChanged();
        return getStepsSwitchFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.Switch StepsSwitch = 125;</code>
       *
       * <pre>
       * 步数与odba配置
       * </pre>
       */
      public protocol_v1.V1Switch.SwitchOrBuilder getStepsSwitchOrBuilder() {
        if (stepsSwitchBuilder_ != null) {
          return stepsSwitchBuilder_.getMessageOrBuilder();
        } else {
          return stepsSwitch_ == null ?
              protocol_v1.V1Switch.Switch.getDefaultInstance() : stepsSwitch_;
        }
      }
      /**
       * <code>optional .protocol_v1.Switch StepsSwitch = 125;</code>
       *
       * <pre>
       * 步数与odba配置
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Switch.Switch, protocol_v1.V1Switch.Switch.Builder, protocol_v1.V1Switch.SwitchOrBuilder> 
          getStepsSwitchFieldBuilder() {
        if (stepsSwitchBuilder_ == null) {
          stepsSwitchBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1Switch.Switch, protocol_v1.V1Switch.Switch.Builder, protocol_v1.V1Switch.SwitchOrBuilder>(
                  getStepsSwitch(),
                  getParentForChildren(),
                  isClean());
          stepsSwitch_ = null;
        }
        return stepsSwitchBuilder_;
      }

      private protocol_v1.V1Switch.Switch actionSwitch_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Switch.Switch, protocol_v1.V1Switch.Switch.Builder, protocol_v1.V1Switch.SwitchOrBuilder> actionSwitchBuilder_;
      /**
       * <code>optional .protocol_v1.Switch ActionSwitch = 126;</code>
       *
       * <pre>
       * 步数与odba配置
       * </pre>
       */
      public boolean hasActionSwitch() {
        return ((bitField1_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .protocol_v1.Switch ActionSwitch = 126;</code>
       *
       * <pre>
       * 步数与odba配置
       * </pre>
       */
      public protocol_v1.V1Switch.Switch getActionSwitch() {
        if (actionSwitchBuilder_ == null) {
          return actionSwitch_ == null ? protocol_v1.V1Switch.Switch.getDefaultInstance() : actionSwitch_;
        } else {
          return actionSwitchBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.Switch ActionSwitch = 126;</code>
       *
       * <pre>
       * 步数与odba配置
       * </pre>
       */
      public Builder setActionSwitch(protocol_v1.V1Switch.Switch value) {
        if (actionSwitchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          actionSwitch_ = value;
          onChanged();
        } else {
          actionSwitchBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Switch ActionSwitch = 126;</code>
       *
       * <pre>
       * 步数与odba配置
       * </pre>
       */
      public Builder setActionSwitch(
          protocol_v1.V1Switch.Switch.Builder builderForValue) {
        if (actionSwitchBuilder_ == null) {
          actionSwitch_ = builderForValue.build();
          onChanged();
        } else {
          actionSwitchBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Switch ActionSwitch = 126;</code>
       *
       * <pre>
       * 步数与odba配置
       * </pre>
       */
      public Builder mergeActionSwitch(protocol_v1.V1Switch.Switch value) {
        if (actionSwitchBuilder_ == null) {
          if (((bitField1_ & 0x00001000) == 0x00001000) &&
              actionSwitch_ != null &&
              actionSwitch_ != protocol_v1.V1Switch.Switch.getDefaultInstance()) {
            actionSwitch_ =
              protocol_v1.V1Switch.Switch.newBuilder(actionSwitch_).mergeFrom(value).buildPartial();
          } else {
            actionSwitch_ = value;
          }
          onChanged();
        } else {
          actionSwitchBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Switch ActionSwitch = 126;</code>
       *
       * <pre>
       * 步数与odba配置
       * </pre>
       */
      public Builder clearActionSwitch() {
        if (actionSwitchBuilder_ == null) {
          actionSwitch_ = null;
          onChanged();
        } else {
          actionSwitchBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00001000);
        return this;
      }
      /**
       * <code>optional .protocol_v1.Switch ActionSwitch = 126;</code>
       *
       * <pre>
       * 步数与odba配置
       * </pre>
       */
      public protocol_v1.V1Switch.Switch.Builder getActionSwitchBuilder() {
        bitField1_ |= 0x00001000;
        onChanged();
        return getActionSwitchFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.Switch ActionSwitch = 126;</code>
       *
       * <pre>
       * 步数与odba配置
       * </pre>
       */
      public protocol_v1.V1Switch.SwitchOrBuilder getActionSwitchOrBuilder() {
        if (actionSwitchBuilder_ != null) {
          return actionSwitchBuilder_.getMessageOrBuilder();
        } else {
          return actionSwitch_ == null ?
              protocol_v1.V1Switch.Switch.getDefaultInstance() : actionSwitch_;
        }
      }
      /**
       * <code>optional .protocol_v1.Switch ActionSwitch = 126;</code>
       *
       * <pre>
       * 步数与odba配置
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Switch.Switch, protocol_v1.V1Switch.Switch.Builder, protocol_v1.V1Switch.SwitchOrBuilder> 
          getActionSwitchFieldBuilder() {
        if (actionSwitchBuilder_ == null) {
          actionSwitchBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1Switch.Switch, protocol_v1.V1Switch.Switch.Builder, protocol_v1.V1Switch.SwitchOrBuilder>(
                  getActionSwitch(),
                  getParentForChildren(),
                  isClean());
          actionSwitch_ = null;
        }
        return actionSwitchBuilder_;
      }

      private int workMode_ ;
      /**
       * <code>optional int32 WorkMode = 130 [default = 0];</code>
       *
       * <pre>
       * 0: 待定, 2: 失活模式 (1,3暂不支持)
       * </pre>
       */
      public boolean hasWorkMode() {
        return ((bitField1_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 WorkMode = 130 [default = 0];</code>
       *
       * <pre>
       * 0: 待定, 2: 失活模式 (1,3暂不支持)
       * </pre>
       */
      public int getWorkMode() {
        return workMode_;
      }
      /**
       * <code>optional int32 WorkMode = 130 [default = 0];</code>
       *
       * <pre>
       * 0: 待定, 2: 失活模式 (1,3暂不支持)
       * </pre>
       */
      public Builder setWorkMode(int value) {
        bitField1_ |= 0x00002000;
        workMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 WorkMode = 130 [default = 0];</code>
       *
       * <pre>
       * 0: 待定, 2: 失活模式 (1,3暂不支持)
       * </pre>
       */
      public Builder clearWorkMode() {
        bitField1_ = (bitField1_ & ~0x00002000);
        workMode_ = 0;
        onChanged();
        return this;
      }

      private protocol_v1.V1Setting.Origin2Setting origin2Setting_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.Origin2Setting, protocol_v1.V1Setting.Origin2Setting.Builder, protocol_v1.V1Setting.Origin2SettingOrBuilder> origin2SettingBuilder_;
      /**
       * <code>optional .protocol_v1.Origin2Setting Origin2Setting = 140;</code>
       *
       * <pre>
       * 原始数据采集参数
       * </pre>
       */
      public boolean hasOrigin2Setting() {
        return ((bitField1_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional .protocol_v1.Origin2Setting Origin2Setting = 140;</code>
       *
       * <pre>
       * 原始数据采集参数
       * </pre>
       */
      public protocol_v1.V1Setting.Origin2Setting getOrigin2Setting() {
        if (origin2SettingBuilder_ == null) {
          return origin2Setting_ == null ? protocol_v1.V1Setting.Origin2Setting.getDefaultInstance() : origin2Setting_;
        } else {
          return origin2SettingBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.Origin2Setting Origin2Setting = 140;</code>
       *
       * <pre>
       * 原始数据采集参数
       * </pre>
       */
      public Builder setOrigin2Setting(protocol_v1.V1Setting.Origin2Setting value) {
        if (origin2SettingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          origin2Setting_ = value;
          onChanged();
        } else {
          origin2SettingBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Origin2Setting Origin2Setting = 140;</code>
       *
       * <pre>
       * 原始数据采集参数
       * </pre>
       */
      public Builder setOrigin2Setting(
          protocol_v1.V1Setting.Origin2Setting.Builder builderForValue) {
        if (origin2SettingBuilder_ == null) {
          origin2Setting_ = builderForValue.build();
          onChanged();
        } else {
          origin2SettingBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Origin2Setting Origin2Setting = 140;</code>
       *
       * <pre>
       * 原始数据采集参数
       * </pre>
       */
      public Builder mergeOrigin2Setting(protocol_v1.V1Setting.Origin2Setting value) {
        if (origin2SettingBuilder_ == null) {
          if (((bitField1_ & 0x00004000) == 0x00004000) &&
              origin2Setting_ != null &&
              origin2Setting_ != protocol_v1.V1Setting.Origin2Setting.getDefaultInstance()) {
            origin2Setting_ =
              protocol_v1.V1Setting.Origin2Setting.newBuilder(origin2Setting_).mergeFrom(value).buildPartial();
          } else {
            origin2Setting_ = value;
          }
          onChanged();
        } else {
          origin2SettingBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Origin2Setting Origin2Setting = 140;</code>
       *
       * <pre>
       * 原始数据采集参数
       * </pre>
       */
      public Builder clearOrigin2Setting() {
        if (origin2SettingBuilder_ == null) {
          origin2Setting_ = null;
          onChanged();
        } else {
          origin2SettingBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00004000);
        return this;
      }
      /**
       * <code>optional .protocol_v1.Origin2Setting Origin2Setting = 140;</code>
       *
       * <pre>
       * 原始数据采集参数
       * </pre>
       */
      public protocol_v1.V1Setting.Origin2Setting.Builder getOrigin2SettingBuilder() {
        bitField1_ |= 0x00004000;
        onChanged();
        return getOrigin2SettingFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.Origin2Setting Origin2Setting = 140;</code>
       *
       * <pre>
       * 原始数据采集参数
       * </pre>
       */
      public protocol_v1.V1Setting.Origin2SettingOrBuilder getOrigin2SettingOrBuilder() {
        if (origin2SettingBuilder_ != null) {
          return origin2SettingBuilder_.getMessageOrBuilder();
        } else {
          return origin2Setting_ == null ?
              protocol_v1.V1Setting.Origin2Setting.getDefaultInstance() : origin2Setting_;
        }
      }
      /**
       * <code>optional .protocol_v1.Origin2Setting Origin2Setting = 140;</code>
       *
       * <pre>
       * 原始数据采集参数
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.Origin2Setting, protocol_v1.V1Setting.Origin2Setting.Builder, protocol_v1.V1Setting.Origin2SettingOrBuilder> 
          getOrigin2SettingFieldBuilder() {
        if (origin2SettingBuilder_ == null) {
          origin2SettingBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1Setting.Origin2Setting, protocol_v1.V1Setting.Origin2Setting.Builder, protocol_v1.V1Setting.Origin2SettingOrBuilder>(
                  getOrigin2Setting(),
                  getParentForChildren(),
                  isClean());
          origin2Setting_ = null;
        }
        return origin2SettingBuilder_;
      }

      private protocol_v1.V1Setting.BeaconLocationSetting beaconLocationSetting_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.BeaconLocationSetting, protocol_v1.V1Setting.BeaconLocationSetting.Builder, protocol_v1.V1Setting.BeaconLocationSettingOrBuilder> beaconLocationSettingBuilder_;
      /**
       * <code>optional .protocol_v1.BeaconLocationSetting BeaconLocationSetting = 141;</code>
       *
       * <pre>
       * 信标定位参数
       * </pre>
       */
      public boolean hasBeaconLocationSetting() {
        return ((bitField1_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional .protocol_v1.BeaconLocationSetting BeaconLocationSetting = 141;</code>
       *
       * <pre>
       * 信标定位参数
       * </pre>
       */
      public protocol_v1.V1Setting.BeaconLocationSetting getBeaconLocationSetting() {
        if (beaconLocationSettingBuilder_ == null) {
          return beaconLocationSetting_ == null ? protocol_v1.V1Setting.BeaconLocationSetting.getDefaultInstance() : beaconLocationSetting_;
        } else {
          return beaconLocationSettingBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.BeaconLocationSetting BeaconLocationSetting = 141;</code>
       *
       * <pre>
       * 信标定位参数
       * </pre>
       */
      public Builder setBeaconLocationSetting(protocol_v1.V1Setting.BeaconLocationSetting value) {
        if (beaconLocationSettingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          beaconLocationSetting_ = value;
          onChanged();
        } else {
          beaconLocationSettingBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.BeaconLocationSetting BeaconLocationSetting = 141;</code>
       *
       * <pre>
       * 信标定位参数
       * </pre>
       */
      public Builder setBeaconLocationSetting(
          protocol_v1.V1Setting.BeaconLocationSetting.Builder builderForValue) {
        if (beaconLocationSettingBuilder_ == null) {
          beaconLocationSetting_ = builderForValue.build();
          onChanged();
        } else {
          beaconLocationSettingBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.BeaconLocationSetting BeaconLocationSetting = 141;</code>
       *
       * <pre>
       * 信标定位参数
       * </pre>
       */
      public Builder mergeBeaconLocationSetting(protocol_v1.V1Setting.BeaconLocationSetting value) {
        if (beaconLocationSettingBuilder_ == null) {
          if (((bitField1_ & 0x00008000) == 0x00008000) &&
              beaconLocationSetting_ != null &&
              beaconLocationSetting_ != protocol_v1.V1Setting.BeaconLocationSetting.getDefaultInstance()) {
            beaconLocationSetting_ =
              protocol_v1.V1Setting.BeaconLocationSetting.newBuilder(beaconLocationSetting_).mergeFrom(value).buildPartial();
          } else {
            beaconLocationSetting_ = value;
          }
          onChanged();
        } else {
          beaconLocationSettingBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.BeaconLocationSetting BeaconLocationSetting = 141;</code>
       *
       * <pre>
       * 信标定位参数
       * </pre>
       */
      public Builder clearBeaconLocationSetting() {
        if (beaconLocationSettingBuilder_ == null) {
          beaconLocationSetting_ = null;
          onChanged();
        } else {
          beaconLocationSettingBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00008000);
        return this;
      }
      /**
       * <code>optional .protocol_v1.BeaconLocationSetting BeaconLocationSetting = 141;</code>
       *
       * <pre>
       * 信标定位参数
       * </pre>
       */
      public protocol_v1.V1Setting.BeaconLocationSetting.Builder getBeaconLocationSettingBuilder() {
        bitField1_ |= 0x00008000;
        onChanged();
        return getBeaconLocationSettingFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.BeaconLocationSetting BeaconLocationSetting = 141;</code>
       *
       * <pre>
       * 信标定位参数
       * </pre>
       */
      public protocol_v1.V1Setting.BeaconLocationSettingOrBuilder getBeaconLocationSettingOrBuilder() {
        if (beaconLocationSettingBuilder_ != null) {
          return beaconLocationSettingBuilder_.getMessageOrBuilder();
        } else {
          return beaconLocationSetting_ == null ?
              protocol_v1.V1Setting.BeaconLocationSetting.getDefaultInstance() : beaconLocationSetting_;
        }
      }
      /**
       * <code>optional .protocol_v1.BeaconLocationSetting BeaconLocationSetting = 141;</code>
       *
       * <pre>
       * 信标定位参数
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.BeaconLocationSetting, protocol_v1.V1Setting.BeaconLocationSetting.Builder, protocol_v1.V1Setting.BeaconLocationSettingOrBuilder> 
          getBeaconLocationSettingFieldBuilder() {
        if (beaconLocationSettingBuilder_ == null) {
          beaconLocationSettingBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1Setting.BeaconLocationSetting, protocol_v1.V1Setting.BeaconLocationSetting.Builder, protocol_v1.V1Setting.BeaconLocationSettingOrBuilder>(
                  getBeaconLocationSetting(),
                  getParentForChildren(),
                  isClean());
          beaconLocationSetting_ = null;
        }
        return beaconLocationSettingBuilder_;
      }

      private protocol_v1.V1Setting.PowerOffSetting powerOffSetting_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.PowerOffSetting, protocol_v1.V1Setting.PowerOffSetting.Builder, protocol_v1.V1Setting.PowerOffSettingOrBuilder> powerOffSettingBuilder_;
      /**
       * <code>optional .protocol_v1.PowerOffSetting PowerOffSetting = 142;</code>
       *
       * <pre>
       * 计划关机参数
       * </pre>
       */
      public boolean hasPowerOffSetting() {
        return ((bitField1_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional .protocol_v1.PowerOffSetting PowerOffSetting = 142;</code>
       *
       * <pre>
       * 计划关机参数
       * </pre>
       */
      public protocol_v1.V1Setting.PowerOffSetting getPowerOffSetting() {
        if (powerOffSettingBuilder_ == null) {
          return powerOffSetting_ == null ? protocol_v1.V1Setting.PowerOffSetting.getDefaultInstance() : powerOffSetting_;
        } else {
          return powerOffSettingBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.PowerOffSetting PowerOffSetting = 142;</code>
       *
       * <pre>
       * 计划关机参数
       * </pre>
       */
      public Builder setPowerOffSetting(protocol_v1.V1Setting.PowerOffSetting value) {
        if (powerOffSettingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          powerOffSetting_ = value;
          onChanged();
        } else {
          powerOffSettingBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.PowerOffSetting PowerOffSetting = 142;</code>
       *
       * <pre>
       * 计划关机参数
       * </pre>
       */
      public Builder setPowerOffSetting(
          protocol_v1.V1Setting.PowerOffSetting.Builder builderForValue) {
        if (powerOffSettingBuilder_ == null) {
          powerOffSetting_ = builderForValue.build();
          onChanged();
        } else {
          powerOffSettingBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.PowerOffSetting PowerOffSetting = 142;</code>
       *
       * <pre>
       * 计划关机参数
       * </pre>
       */
      public Builder mergePowerOffSetting(protocol_v1.V1Setting.PowerOffSetting value) {
        if (powerOffSettingBuilder_ == null) {
          if (((bitField1_ & 0x00010000) == 0x00010000) &&
              powerOffSetting_ != null &&
              powerOffSetting_ != protocol_v1.V1Setting.PowerOffSetting.getDefaultInstance()) {
            powerOffSetting_ =
              protocol_v1.V1Setting.PowerOffSetting.newBuilder(powerOffSetting_).mergeFrom(value).buildPartial();
          } else {
            powerOffSetting_ = value;
          }
          onChanged();
        } else {
          powerOffSettingBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.PowerOffSetting PowerOffSetting = 142;</code>
       *
       * <pre>
       * 计划关机参数
       * </pre>
       */
      public Builder clearPowerOffSetting() {
        if (powerOffSettingBuilder_ == null) {
          powerOffSetting_ = null;
          onChanged();
        } else {
          powerOffSettingBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00010000);
        return this;
      }
      /**
       * <code>optional .protocol_v1.PowerOffSetting PowerOffSetting = 142;</code>
       *
       * <pre>
       * 计划关机参数
       * </pre>
       */
      public protocol_v1.V1Setting.PowerOffSetting.Builder getPowerOffSettingBuilder() {
        bitField1_ |= 0x00010000;
        onChanged();
        return getPowerOffSettingFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.PowerOffSetting PowerOffSetting = 142;</code>
       *
       * <pre>
       * 计划关机参数
       * </pre>
       */
      public protocol_v1.V1Setting.PowerOffSettingOrBuilder getPowerOffSettingOrBuilder() {
        if (powerOffSettingBuilder_ != null) {
          return powerOffSettingBuilder_.getMessageOrBuilder();
        } else {
          return powerOffSetting_ == null ?
              protocol_v1.V1Setting.PowerOffSetting.getDefaultInstance() : powerOffSetting_;
        }
      }
      /**
       * <code>optional .protocol_v1.PowerOffSetting PowerOffSetting = 142;</code>
       *
       * <pre>
       * 计划关机参数
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.PowerOffSetting, protocol_v1.V1Setting.PowerOffSetting.Builder, protocol_v1.V1Setting.PowerOffSettingOrBuilder> 
          getPowerOffSettingFieldBuilder() {
        if (powerOffSettingBuilder_ == null) {
          powerOffSettingBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1Setting.PowerOffSetting, protocol_v1.V1Setting.PowerOffSetting.Builder, protocol_v1.V1Setting.PowerOffSettingOrBuilder>(
                  getPowerOffSetting(),
                  getParentForChildren(),
                  isClean());
          powerOffSetting_ = null;
        }
        return powerOffSettingBuilder_;
      }

      private protocol_v1.V1Setting.ArgosSetting argosSetting_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.ArgosSetting, protocol_v1.V1Setting.ArgosSetting.Builder, protocol_v1.V1Setting.ArgosSettingOrBuilder> argosSettingBuilder_;
      /**
       * <code>optional .protocol_v1.ArgosSetting ArgosSetting = 143;</code>
       *
       * <pre>
       *  argos发送配置
       * </pre>
       */
      public boolean hasArgosSetting() {
        return ((bitField1_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting ArgosSetting = 143;</code>
       *
       * <pre>
       *  argos发送配置
       * </pre>
       */
      public protocol_v1.V1Setting.ArgosSetting getArgosSetting() {
        if (argosSettingBuilder_ == null) {
          return argosSetting_ == null ? protocol_v1.V1Setting.ArgosSetting.getDefaultInstance() : argosSetting_;
        } else {
          return argosSettingBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting ArgosSetting = 143;</code>
       *
       * <pre>
       *  argos发送配置
       * </pre>
       */
      public Builder setArgosSetting(protocol_v1.V1Setting.ArgosSetting value) {
        if (argosSettingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          argosSetting_ = value;
          onChanged();
        } else {
          argosSettingBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting ArgosSetting = 143;</code>
       *
       * <pre>
       *  argos发送配置
       * </pre>
       */
      public Builder setArgosSetting(
          protocol_v1.V1Setting.ArgosSetting.Builder builderForValue) {
        if (argosSettingBuilder_ == null) {
          argosSetting_ = builderForValue.build();
          onChanged();
        } else {
          argosSettingBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting ArgosSetting = 143;</code>
       *
       * <pre>
       *  argos发送配置
       * </pre>
       */
      public Builder mergeArgosSetting(protocol_v1.V1Setting.ArgosSetting value) {
        if (argosSettingBuilder_ == null) {
          if (((bitField1_ & 0x00020000) == 0x00020000) &&
              argosSetting_ != null &&
              argosSetting_ != protocol_v1.V1Setting.ArgosSetting.getDefaultInstance()) {
            argosSetting_ =
              protocol_v1.V1Setting.ArgosSetting.newBuilder(argosSetting_).mergeFrom(value).buildPartial();
          } else {
            argosSetting_ = value;
          }
          onChanged();
        } else {
          argosSettingBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting ArgosSetting = 143;</code>
       *
       * <pre>
       *  argos发送配置
       * </pre>
       */
      public Builder clearArgosSetting() {
        if (argosSettingBuilder_ == null) {
          argosSetting_ = null;
          onChanged();
        } else {
          argosSettingBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00020000);
        return this;
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting ArgosSetting = 143;</code>
       *
       * <pre>
       *  argos发送配置
       * </pre>
       */
      public protocol_v1.V1Setting.ArgosSetting.Builder getArgosSettingBuilder() {
        bitField1_ |= 0x00020000;
        onChanged();
        return getArgosSettingFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting ArgosSetting = 143;</code>
       *
       * <pre>
       *  argos发送配置
       * </pre>
       */
      public protocol_v1.V1Setting.ArgosSettingOrBuilder getArgosSettingOrBuilder() {
        if (argosSettingBuilder_ != null) {
          return argosSettingBuilder_.getMessageOrBuilder();
        } else {
          return argosSetting_ == null ?
              protocol_v1.V1Setting.ArgosSetting.getDefaultInstance() : argosSetting_;
        }
      }
      /**
       * <code>optional .protocol_v1.ArgosSetting ArgosSetting = 143;</code>
       *
       * <pre>
       *  argos发送配置
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.ArgosSetting, protocol_v1.V1Setting.ArgosSetting.Builder, protocol_v1.V1Setting.ArgosSettingOrBuilder> 
          getArgosSettingFieldBuilder() {
        if (argosSettingBuilder_ == null) {
          argosSettingBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1Setting.ArgosSetting, protocol_v1.V1Setting.ArgosSetting.Builder, protocol_v1.V1Setting.ArgosSettingOrBuilder>(
                  getArgosSetting(),
                  getParentForChildren(),
                  isClean());
          argosSetting_ = null;
        }
        return argosSettingBuilder_;
      }

      private protocol_v1.V1Setting.MagneticSetting magnetic_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.MagneticSetting, protocol_v1.V1Setting.MagneticSetting.Builder, protocol_v1.V1Setting.MagneticSettingOrBuilder> magneticBuilder_;
      /**
       * <code>optional .protocol_v1.MagneticSetting Magnetic = 144;</code>
       *
       * <pre>
       * 地磁配置
       * </pre>
       */
      public boolean hasMagnetic() {
        return ((bitField1_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional .protocol_v1.MagneticSetting Magnetic = 144;</code>
       *
       * <pre>
       * 地磁配置
       * </pre>
       */
      public protocol_v1.V1Setting.MagneticSetting getMagnetic() {
        if (magneticBuilder_ == null) {
          return magnetic_ == null ? protocol_v1.V1Setting.MagneticSetting.getDefaultInstance() : magnetic_;
        } else {
          return magneticBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.MagneticSetting Magnetic = 144;</code>
       *
       * <pre>
       * 地磁配置
       * </pre>
       */
      public Builder setMagnetic(protocol_v1.V1Setting.MagneticSetting value) {
        if (magneticBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          magnetic_ = value;
          onChanged();
        } else {
          magneticBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.MagneticSetting Magnetic = 144;</code>
       *
       * <pre>
       * 地磁配置
       * </pre>
       */
      public Builder setMagnetic(
          protocol_v1.V1Setting.MagneticSetting.Builder builderForValue) {
        if (magneticBuilder_ == null) {
          magnetic_ = builderForValue.build();
          onChanged();
        } else {
          magneticBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.MagneticSetting Magnetic = 144;</code>
       *
       * <pre>
       * 地磁配置
       * </pre>
       */
      public Builder mergeMagnetic(protocol_v1.V1Setting.MagneticSetting value) {
        if (magneticBuilder_ == null) {
          if (((bitField1_ & 0x00040000) == 0x00040000) &&
              magnetic_ != null &&
              magnetic_ != protocol_v1.V1Setting.MagneticSetting.getDefaultInstance()) {
            magnetic_ =
              protocol_v1.V1Setting.MagneticSetting.newBuilder(magnetic_).mergeFrom(value).buildPartial();
          } else {
            magnetic_ = value;
          }
          onChanged();
        } else {
          magneticBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.MagneticSetting Magnetic = 144;</code>
       *
       * <pre>
       * 地磁配置
       * </pre>
       */
      public Builder clearMagnetic() {
        if (magneticBuilder_ == null) {
          magnetic_ = null;
          onChanged();
        } else {
          magneticBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00040000);
        return this;
      }
      /**
       * <code>optional .protocol_v1.MagneticSetting Magnetic = 144;</code>
       *
       * <pre>
       * 地磁配置
       * </pre>
       */
      public protocol_v1.V1Setting.MagneticSetting.Builder getMagneticBuilder() {
        bitField1_ |= 0x00040000;
        onChanged();
        return getMagneticFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.MagneticSetting Magnetic = 144;</code>
       *
       * <pre>
       * 地磁配置
       * </pre>
       */
      public protocol_v1.V1Setting.MagneticSettingOrBuilder getMagneticOrBuilder() {
        if (magneticBuilder_ != null) {
          return magneticBuilder_.getMessageOrBuilder();
        } else {
          return magnetic_ == null ?
              protocol_v1.V1Setting.MagneticSetting.getDefaultInstance() : magnetic_;
        }
      }
      /**
       * <code>optional .protocol_v1.MagneticSetting Magnetic = 144;</code>
       *
       * <pre>
       * 地磁配置
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.MagneticSetting, protocol_v1.V1Setting.MagneticSetting.Builder, protocol_v1.V1Setting.MagneticSettingOrBuilder> 
          getMagneticFieldBuilder() {
        if (magneticBuilder_ == null) {
          magneticBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1Setting.MagneticSetting, protocol_v1.V1Setting.MagneticSetting.Builder, protocol_v1.V1Setting.MagneticSettingOrBuilder>(
                  getMagnetic(),
                  getParentForChildren(),
                  isClean());
          magnetic_ = null;
        }
        return magneticBuilder_;
      }

      private int accOutDataRate_ = 25;
      /**
       * <code>optional int32 AccOutDataRate = 145 [default = 25];</code>
       *
       * <pre>
       * 加速度传感器采样频率，范围：1 ~ 500Hz
       * </pre>
       */
      public boolean hasAccOutDataRate() {
        return ((bitField1_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 AccOutDataRate = 145 [default = 25];</code>
       *
       * <pre>
       * 加速度传感器采样频率，范围：1 ~ 500Hz
       * </pre>
       */
      public int getAccOutDataRate() {
        return accOutDataRate_;
      }
      /**
       * <code>optional int32 AccOutDataRate = 145 [default = 25];</code>
       *
       * <pre>
       * 加速度传感器采样频率，范围：1 ~ 500Hz
       * </pre>
       */
      public Builder setAccOutDataRate(int value) {
        bitField1_ |= 0x00080000;
        accOutDataRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 AccOutDataRate = 145 [default = 25];</code>
       *
       * <pre>
       * 加速度传感器采样频率，范围：1 ~ 500Hz
       * </pre>
       */
      public Builder clearAccOutDataRate() {
        bitField1_ = (bitField1_ & ~0x00080000);
        accOutDataRate_ = 25;
        onChanged();
        return this;
      }

      private protocol_v1.V1Algorithm.AlgorithmVersion algorithmVersion_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Algorithm.AlgorithmVersion, protocol_v1.V1Algorithm.AlgorithmVersion.Builder, protocol_v1.V1Algorithm.AlgorithmVersionOrBuilder> algorithmVersionBuilder_;
      /**
       * <code>optional .protocol_v1.AlgorithmVersion AlgorithmVersion = 150;</code>
       *
       * <pre>
       * 当前算法版本
       * </pre>
       */
      public boolean hasAlgorithmVersion() {
        return ((bitField1_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional .protocol_v1.AlgorithmVersion AlgorithmVersion = 150;</code>
       *
       * <pre>
       * 当前算法版本
       * </pre>
       */
      public protocol_v1.V1Algorithm.AlgorithmVersion getAlgorithmVersion() {
        if (algorithmVersionBuilder_ == null) {
          return algorithmVersion_ == null ? protocol_v1.V1Algorithm.AlgorithmVersion.getDefaultInstance() : algorithmVersion_;
        } else {
          return algorithmVersionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.AlgorithmVersion AlgorithmVersion = 150;</code>
       *
       * <pre>
       * 当前算法版本
       * </pre>
       */
      public Builder setAlgorithmVersion(protocol_v1.V1Algorithm.AlgorithmVersion value) {
        if (algorithmVersionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          algorithmVersion_ = value;
          onChanged();
        } else {
          algorithmVersionBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.AlgorithmVersion AlgorithmVersion = 150;</code>
       *
       * <pre>
       * 当前算法版本
       * </pre>
       */
      public Builder setAlgorithmVersion(
          protocol_v1.V1Algorithm.AlgorithmVersion.Builder builderForValue) {
        if (algorithmVersionBuilder_ == null) {
          algorithmVersion_ = builderForValue.build();
          onChanged();
        } else {
          algorithmVersionBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.AlgorithmVersion AlgorithmVersion = 150;</code>
       *
       * <pre>
       * 当前算法版本
       * </pre>
       */
      public Builder mergeAlgorithmVersion(protocol_v1.V1Algorithm.AlgorithmVersion value) {
        if (algorithmVersionBuilder_ == null) {
          if (((bitField1_ & 0x00100000) == 0x00100000) &&
              algorithmVersion_ != null &&
              algorithmVersion_ != protocol_v1.V1Algorithm.AlgorithmVersion.getDefaultInstance()) {
            algorithmVersion_ =
              protocol_v1.V1Algorithm.AlgorithmVersion.newBuilder(algorithmVersion_).mergeFrom(value).buildPartial();
          } else {
            algorithmVersion_ = value;
          }
          onChanged();
        } else {
          algorithmVersionBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.AlgorithmVersion AlgorithmVersion = 150;</code>
       *
       * <pre>
       * 当前算法版本
       * </pre>
       */
      public Builder clearAlgorithmVersion() {
        if (algorithmVersionBuilder_ == null) {
          algorithmVersion_ = null;
          onChanged();
        } else {
          algorithmVersionBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00100000);
        return this;
      }
      /**
       * <code>optional .protocol_v1.AlgorithmVersion AlgorithmVersion = 150;</code>
       *
       * <pre>
       * 当前算法版本
       * </pre>
       */
      public protocol_v1.V1Algorithm.AlgorithmVersion.Builder getAlgorithmVersionBuilder() {
        bitField1_ |= 0x00100000;
        onChanged();
        return getAlgorithmVersionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.AlgorithmVersion AlgorithmVersion = 150;</code>
       *
       * <pre>
       * 当前算法版本
       * </pre>
       */
      public protocol_v1.V1Algorithm.AlgorithmVersionOrBuilder getAlgorithmVersionOrBuilder() {
        if (algorithmVersionBuilder_ != null) {
          return algorithmVersionBuilder_.getMessageOrBuilder();
        } else {
          return algorithmVersion_ == null ?
              protocol_v1.V1Algorithm.AlgorithmVersion.getDefaultInstance() : algorithmVersion_;
        }
      }
      /**
       * <code>optional .protocol_v1.AlgorithmVersion AlgorithmVersion = 150;</code>
       *
       * <pre>
       * 当前算法版本
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Algorithm.AlgorithmVersion, protocol_v1.V1Algorithm.AlgorithmVersion.Builder, protocol_v1.V1Algorithm.AlgorithmVersionOrBuilder> 
          getAlgorithmVersionFieldBuilder() {
        if (algorithmVersionBuilder_ == null) {
          algorithmVersionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1Algorithm.AlgorithmVersion, protocol_v1.V1Algorithm.AlgorithmVersion.Builder, protocol_v1.V1Algorithm.AlgorithmVersionOrBuilder>(
                  getAlgorithmVersion(),
                  getParentForChildren(),
                  isClean());
          algorithmVersion_ = null;
        }
        return algorithmVersionBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:protocol_v1.Setting)
    }

    // @@protoc_insertion_point(class_scope:protocol_v1.Setting)
    private static final protocol_v1.V1Setting.Setting DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol_v1.V1Setting.Setting();
    }

    public static protocol_v1.V1Setting.Setting getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Setting>
        PARSER = new com.google.protobuf.AbstractParser<Setting>() {
      public Setting parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Setting(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Setting> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Setting> getParserForType() {
      return PARSER;
    }

    public protocol_v1.V1Setting.Setting getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SettingRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol_v1.SettingRsp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
     */
    boolean hasIden();
    /**
     * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
     */
    protocol_v1.V1IdentityMsg.IdentityMsg getIden();
    /**
     * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
     */
    protocol_v1.V1IdentityMsg.IdentityMsgOrBuilder getIdenOrBuilder();

    /**
     * <code>optional .protocol_v1.Setting SettingInfo = 2;</code>
     */
    boolean hasSettingInfo();
    /**
     * <code>optional .protocol_v1.Setting SettingInfo = 2;</code>
     */
    protocol_v1.V1Setting.Setting getSettingInfo();
    /**
     * <code>optional .protocol_v1.Setting SettingInfo = 2;</code>
     */
    protocol_v1.V1Setting.SettingOrBuilder getSettingInfoOrBuilder();
  }
  /**
   * Protobuf type {@code protocol_v1.SettingRsp}
   *
   * <pre>
   * 读取配置信息回应
   * </pre>
   */
  public  static final class SettingRsp extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protocol_v1.SettingRsp)
      SettingRspOrBuilder {
    // Use SettingRsp.newBuilder() to construct.
    private SettingRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private SettingRsp() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SettingRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protocol_v1.V1IdentityMsg.IdentityMsg.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = iden_.toBuilder();
              }
              iden_ = input.readMessage(protocol_v1.V1IdentityMsg.IdentityMsg.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(iden_);
                iden_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              protocol_v1.V1Setting.Setting.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = settingInfo_.toBuilder();
              }
              settingInfo_ = input.readMessage(protocol_v1.V1Setting.Setting.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(settingInfo_);
                settingInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol_v1.V1Setting.internal_static_protocol_v1_SettingRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol_v1.V1Setting.internal_static_protocol_v1_SettingRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol_v1.V1Setting.SettingRsp.class, protocol_v1.V1Setting.SettingRsp.Builder.class);
    }

    private int bitField0_;
    public static final int IDEN_FIELD_NUMBER = 1;
    private protocol_v1.V1IdentityMsg.IdentityMsg iden_;
    /**
     * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
     */
    public boolean hasIden() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
     */
    public protocol_v1.V1IdentityMsg.IdentityMsg getIden() {
      return iden_ == null ? protocol_v1.V1IdentityMsg.IdentityMsg.getDefaultInstance() : iden_;
    }
    /**
     * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
     */
    public protocol_v1.V1IdentityMsg.IdentityMsgOrBuilder getIdenOrBuilder() {
      return iden_ == null ? protocol_v1.V1IdentityMsg.IdentityMsg.getDefaultInstance() : iden_;
    }

    public static final int SETTINGINFO_FIELD_NUMBER = 2;
    private protocol_v1.V1Setting.Setting settingInfo_;
    /**
     * <code>optional .protocol_v1.Setting SettingInfo = 2;</code>
     */
    public boolean hasSettingInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .protocol_v1.Setting SettingInfo = 2;</code>
     */
    public protocol_v1.V1Setting.Setting getSettingInfo() {
      return settingInfo_ == null ? protocol_v1.V1Setting.Setting.getDefaultInstance() : settingInfo_;
    }
    /**
     * <code>optional .protocol_v1.Setting SettingInfo = 2;</code>
     */
    public protocol_v1.V1Setting.SettingOrBuilder getSettingInfoOrBuilder() {
      return settingInfo_ == null ? protocol_v1.V1Setting.Setting.getDefaultInstance() : settingInfo_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasIden()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getIden().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasSettingInfo()) {
        if (!getSettingInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getIden());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getSettingInfo());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getIden());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSettingInfo());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static protocol_v1.V1Setting.SettingRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Setting.SettingRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Setting.SettingRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Setting.SettingRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Setting.SettingRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Setting.SettingRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Setting.SettingRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protocol_v1.V1Setting.SettingRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Setting.SettingRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Setting.SettingRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol_v1.V1Setting.SettingRsp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol_v1.SettingRsp}
     *
     * <pre>
     * 读取配置信息回应
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol_v1.SettingRsp)
        protocol_v1.V1Setting.SettingRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_SettingRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_SettingRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol_v1.V1Setting.SettingRsp.class, protocol_v1.V1Setting.SettingRsp.Builder.class);
      }

      // Construct using protocol_v1.V1Setting.SettingRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getIdenFieldBuilder();
          getSettingInfoFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (idenBuilder_ == null) {
          iden_ = null;
        } else {
          idenBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (settingInfoBuilder_ == null) {
          settingInfo_ = null;
        } else {
          settingInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol_v1.V1Setting.internal_static_protocol_v1_SettingRsp_descriptor;
      }

      public protocol_v1.V1Setting.SettingRsp getDefaultInstanceForType() {
        return protocol_v1.V1Setting.SettingRsp.getDefaultInstance();
      }

      public protocol_v1.V1Setting.SettingRsp build() {
        protocol_v1.V1Setting.SettingRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol_v1.V1Setting.SettingRsp buildPartial() {
        protocol_v1.V1Setting.SettingRsp result = new protocol_v1.V1Setting.SettingRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (idenBuilder_ == null) {
          result.iden_ = iden_;
        } else {
          result.iden_ = idenBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (settingInfoBuilder_ == null) {
          result.settingInfo_ = settingInfo_;
        } else {
          result.settingInfo_ = settingInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol_v1.V1Setting.SettingRsp) {
          return mergeFrom((protocol_v1.V1Setting.SettingRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol_v1.V1Setting.SettingRsp other) {
        if (other == protocol_v1.V1Setting.SettingRsp.getDefaultInstance()) return this;
        if (other.hasIden()) {
          mergeIden(other.getIden());
        }
        if (other.hasSettingInfo()) {
          mergeSettingInfo(other.getSettingInfo());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasIden()) {
          return false;
        }
        if (!getIden().isInitialized()) {
          return false;
        }
        if (hasSettingInfo()) {
          if (!getSettingInfo().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol_v1.V1Setting.SettingRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol_v1.V1Setting.SettingRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private protocol_v1.V1IdentityMsg.IdentityMsg iden_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1IdentityMsg.IdentityMsg, protocol_v1.V1IdentityMsg.IdentityMsg.Builder, protocol_v1.V1IdentityMsg.IdentityMsgOrBuilder> idenBuilder_;
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public boolean hasIden() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public protocol_v1.V1IdentityMsg.IdentityMsg getIden() {
        if (idenBuilder_ == null) {
          return iden_ == null ? protocol_v1.V1IdentityMsg.IdentityMsg.getDefaultInstance() : iden_;
        } else {
          return idenBuilder_.getMessage();
        }
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public Builder setIden(protocol_v1.V1IdentityMsg.IdentityMsg value) {
        if (idenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          iden_ = value;
          onChanged();
        } else {
          idenBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public Builder setIden(
          protocol_v1.V1IdentityMsg.IdentityMsg.Builder builderForValue) {
        if (idenBuilder_ == null) {
          iden_ = builderForValue.build();
          onChanged();
        } else {
          idenBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public Builder mergeIden(protocol_v1.V1IdentityMsg.IdentityMsg value) {
        if (idenBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              iden_ != null &&
              iden_ != protocol_v1.V1IdentityMsg.IdentityMsg.getDefaultInstance()) {
            iden_ =
              protocol_v1.V1IdentityMsg.IdentityMsg.newBuilder(iden_).mergeFrom(value).buildPartial();
          } else {
            iden_ = value;
          }
          onChanged();
        } else {
          idenBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public Builder clearIden() {
        if (idenBuilder_ == null) {
          iden_ = null;
          onChanged();
        } else {
          idenBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public protocol_v1.V1IdentityMsg.IdentityMsg.Builder getIdenBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getIdenFieldBuilder().getBuilder();
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public protocol_v1.V1IdentityMsg.IdentityMsgOrBuilder getIdenOrBuilder() {
        if (idenBuilder_ != null) {
          return idenBuilder_.getMessageOrBuilder();
        } else {
          return iden_ == null ?
              protocol_v1.V1IdentityMsg.IdentityMsg.getDefaultInstance() : iden_;
        }
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1IdentityMsg.IdentityMsg, protocol_v1.V1IdentityMsg.IdentityMsg.Builder, protocol_v1.V1IdentityMsg.IdentityMsgOrBuilder> 
          getIdenFieldBuilder() {
        if (idenBuilder_ == null) {
          idenBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1IdentityMsg.IdentityMsg, protocol_v1.V1IdentityMsg.IdentityMsg.Builder, protocol_v1.V1IdentityMsg.IdentityMsgOrBuilder>(
                  getIden(),
                  getParentForChildren(),
                  isClean());
          iden_ = null;
        }
        return idenBuilder_;
      }

      private protocol_v1.V1Setting.Setting settingInfo_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.Setting, protocol_v1.V1Setting.Setting.Builder, protocol_v1.V1Setting.SettingOrBuilder> settingInfoBuilder_;
      /**
       * <code>optional .protocol_v1.Setting SettingInfo = 2;</code>
       */
      public boolean hasSettingInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .protocol_v1.Setting SettingInfo = 2;</code>
       */
      public protocol_v1.V1Setting.Setting getSettingInfo() {
        if (settingInfoBuilder_ == null) {
          return settingInfo_ == null ? protocol_v1.V1Setting.Setting.getDefaultInstance() : settingInfo_;
        } else {
          return settingInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.Setting SettingInfo = 2;</code>
       */
      public Builder setSettingInfo(protocol_v1.V1Setting.Setting value) {
        if (settingInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          settingInfo_ = value;
          onChanged();
        } else {
          settingInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Setting SettingInfo = 2;</code>
       */
      public Builder setSettingInfo(
          protocol_v1.V1Setting.Setting.Builder builderForValue) {
        if (settingInfoBuilder_ == null) {
          settingInfo_ = builderForValue.build();
          onChanged();
        } else {
          settingInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Setting SettingInfo = 2;</code>
       */
      public Builder mergeSettingInfo(protocol_v1.V1Setting.Setting value) {
        if (settingInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              settingInfo_ != null &&
              settingInfo_ != protocol_v1.V1Setting.Setting.getDefaultInstance()) {
            settingInfo_ =
              protocol_v1.V1Setting.Setting.newBuilder(settingInfo_).mergeFrom(value).buildPartial();
          } else {
            settingInfo_ = value;
          }
          onChanged();
        } else {
          settingInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Setting SettingInfo = 2;</code>
       */
      public Builder clearSettingInfo() {
        if (settingInfoBuilder_ == null) {
          settingInfo_ = null;
          onChanged();
        } else {
          settingInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .protocol_v1.Setting SettingInfo = 2;</code>
       */
      public protocol_v1.V1Setting.Setting.Builder getSettingInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSettingInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.Setting SettingInfo = 2;</code>
       */
      public protocol_v1.V1Setting.SettingOrBuilder getSettingInfoOrBuilder() {
        if (settingInfoBuilder_ != null) {
          return settingInfoBuilder_.getMessageOrBuilder();
        } else {
          return settingInfo_ == null ?
              protocol_v1.V1Setting.Setting.getDefaultInstance() : settingInfo_;
        }
      }
      /**
       * <code>optional .protocol_v1.Setting SettingInfo = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Setting.Setting, protocol_v1.V1Setting.Setting.Builder, protocol_v1.V1Setting.SettingOrBuilder> 
          getSettingInfoFieldBuilder() {
        if (settingInfoBuilder_ == null) {
          settingInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1Setting.Setting, protocol_v1.V1Setting.Setting.Builder, protocol_v1.V1Setting.SettingOrBuilder>(
                  getSettingInfo(),
                  getParentForChildren(),
                  isClean());
          settingInfo_ = null;
        }
        return settingInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:protocol_v1.SettingRsp)
    }

    // @@protoc_insertion_point(class_scope:protocol_v1.SettingRsp)
    private static final protocol_v1.V1Setting.SettingRsp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol_v1.V1Setting.SettingRsp();
    }

    public static protocol_v1.V1Setting.SettingRsp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SettingRsp>
        PARSER = new com.google.protobuf.AbstractParser<SettingRsp>() {
      public SettingRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new SettingRsp(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<SettingRsp> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SettingRsp> getParserForType() {
      return PARSER;
    }

    public protocol_v1.V1Setting.SettingRsp getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_v1_SettingReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_v1_SettingReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_v1_TimeRange_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_v1_TimeRange_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_v1_GprsPowerSaving_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_v1_GprsPowerSaving_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_v1_VoltageBoostLevel_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_v1_VoltageBoostLevel_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_v1_SpeedBoostLevel_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_v1_SpeedBoostLevel_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_v1_Origin2Setting_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_v1_Origin2Setting_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_v1_BeaconLocationSetting_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_v1_BeaconLocationSetting_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_v1_PowerOffSetting_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_v1_PowerOffSetting_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_v1_ArgosSetting_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_v1_ArgosSetting_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_v1_ArgosSetting_IntervalMode_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_v1_ArgosSetting_IntervalMode_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_v1_ArgosSetting_DataModeConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_v1_ArgosSetting_DataModeConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_v1_ArgosSetting_MonitorMode_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_v1_ArgosSetting_MonitorMode_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_v1_ArgosSetting_OnTimeMode_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_v1_ArgosSetting_OnTimeMode_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_v1_ArgosSetting_AutoOnTimeMode_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_v1_ArgosSetting_AutoOnTimeMode_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_v1_MagneticSetting_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_v1_MagneticSetting_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_v1_MagneticSetting_NormalSetting_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_v1_MagneticSetting_NormalSetting_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_v1_Setting_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_v1_Setting_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_v1_SettingRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_v1_SettingRsp_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020v1.Setting.proto\022\013protocol_v1\032\024v1.Iden" +
      "tityMsg.proto\032\017v1.Switch.proto\032\022v1.Algor" +
      "ithm.proto\"4\n\nSettingReq\022&\n\004Iden\030\001 \002(\0132\030" +
      ".protocol_v1.IdentityMsg\"\'\n\tTimeRange\022\r\n" +
      "\005Begin\030\001 \002(\r\022\013\n\003End\030\002 \002(\r\"H\n\017GprsPowerSa" +
      "ving\022\017\n\004Mode\030\001 \001(\005:\0010\022\023\n\010Distance\030\002 \001(\005:" +
      "\0010\022\017\n\004Time\030\003 \001(\005:\0010\"]\n\021VoltageBoostLevel" +
      "\022\022\n\007Voltage\030\001 \001(\005:\0010\022\031\n\016SampleInterval\030\002" +
      " \001(\005:\0010\022\031\n\016UploadInterval\030\003 \001(\005:\0010\"\214\001\n\017S" +
      "peedBoostLevel\022\022\n\007Voltage\030\001 \001(\005:\0010\022\031\n\016Sa",
      "mpleInterval\030\002 \001(\005:\0010\022\026\n\013ActiveLimit\030\003 \001" +
      "(\005:\0010\022\030\n\rInactiveLimit\030\004 \001(\005:\0010\022\030\n\rUploa" +
      "dTrigger\030\005 \001(\005:\0010\"L\n\016Origin2Setting\022\017\n\004M" +
      "ode\030\001 \001(\005:\0010\022\024\n\010Interval\030\002 \001(\005:\00260\022\023\n\010Du" +
      "ration\030\003 \001(\005:\0011\"V\n\025BeaconLocationSetting" +
      "\022\017\n\004Mode\030\001 \001(\005:\0010\022\022\n\007Timeout\030\002 \001(\005:\0010\022\030\n" +
      "\rWhiteListMode\030\003 \001(\005:\0010\"Y\n\017PowerOffSetti" +
      "ng\022\017\n\004Mode\030\001 \001(\005:\0010\022\017\n\004Mask\030\002 \001(\005:\0010\022$\n\004" +
      "Time\030\003 \003(\0132\026.protocol_v1.TimeRange\"\332\006\n\014A" +
      "rgosSetting\022\017\n\004Mode\030\001 \001(\005:\0013\0228\n\010Interval",
      "\030\n \001(\0132&.protocol_v1.ArgosSetting.Interv" +
      "alMode\0226\n\007Monitor\030\013 \001(\0132%.protocol_v1.Ar" +
      "gosSetting.MonitorMode\0224\n\006OnTime\030\014 \001(\0132$" +
      ".protocol_v1.ArgosSetting.OnTimeMode\022<\n\n" +
      "AutoOnTime\030\r \001(\0132(.protocol_v1.ArgosSett" +
      "ing.AutoOnTimeMode\0224\n\014VoltageBoost\030\024 \001(\013" +
      "2\036.protocol_v1.VoltageBoostLevel\022:\n\010Data" +
      "Mode\030\037 \001(\0132(.protocol_v1.ArgosSetting.Da" +
      "taModeConfig\032W\n\014IntervalMode\022\027\n\010Interval" +
      "\030\001 \001(\005:\00514400\022\025\n\tFrequency\030\002 \001(\005:\00290\022\027\n\t",
      "DutyCycle\030\003 \001(\005:\0043600\032y\n\016DataModeConfig\022" +
      "\022\n\007GpsRate\030\001 \001(\r:\0015\022\026\n\013SummaryRate\030\002 \001(\r" +
      ":\0011\022\033\n\017GpsHistoryCount\030\003 \001(\r:\00210\022\036\n\023Summ" +
      "aryHistoryCount\030\004 \001(\r:\0015\032`\n\013MonitorMode\022" +
      "\025\n\tFrequency\030\001 \001(\005:\00290\022\034\n\021MaxTxCountPerP" +
      "ass\030\002 \001(\r:\0018\022\034\n\021MaxRxCountPerPass\030\003 \001(\r:" +
      "\0014\032Q\n\nOnTimeMode\022\023\n\tTimeTable\030\001 \001(\t:\000\022\025\n" +
      "\tFrequency\030\002 \001(\005:\00290\022\027\n\tDutyCycle\030\003 \001(\005:" +
      "\0043600\032X\n\016AutoOnTimeMode\022\026\n\013HoursPerDay\030\001" +
      " \001(\005:\0014\022\025\n\tFrequency\030\002 \001(\005:\00290\022\027\n\tDutyCy",
      "cle\030\003 \001(\005:\0043600\"\314\001\n\017MagneticSetting\022\026\n\013O" +
      "utDataRate\030\001 \001(\005:\0011\022:\n\006Normal\030\002 \001(\0132*.pr" +
      "otocol_v1.MagneticSetting.NormalSetting\022" +
      "+\n\006Origin\030\003 \001(\0132\033.protocol_v1.Origin2Set" +
      "ting\0328\n\rNormalSetting\022\017\n\004Mode\030\001 \001(\005:\0010\022\026" +
      "\n\010Interval\030\002 \001(\005:\0043600\"\365\r\n\007Setting\022\030\n\rEn" +
      "vSampleMode\030\001 \001(\005:\0010\022\034\n\021EnvSampleInterva" +
      "l\030\002 \001(\005:\0010\022\035\n\022BehaviorSampleMode\030\004 \001(\005:\001" +
      "0\022!\n\026BehaviorSampleInterval\030\005 \001(\005:\0010\022\030\n\r" +
      "GPSSampleMode\030\007 \001(\005:\0010\022\034\n\021GPSSampleInter",
      "val\030\010 \001(\005:\0010\022\034\n\021CommunicationMode\030\n \001(\005:" +
      "\0011\022 \n\025CommunicationInterval\030\013 \001(\005:\0010\022\026\n\013" +
      "TriggerMode\030\016 \001(\005:\0010\022\026\n\013ResetDevice\030\020 \001(" +
      "\005:\0010\022\033\n\020SchedulePowerOff\030\021 \001(\005:\0010\022\034\n\021Dai" +
      "lyPowerOffTime\030\022 \001(\005:\0010\022\033\n\020DailyPowerOnT" +
      "ime\030\023 \001(\005:\0010\022\035\n\022NormalPowerOffTime\030\024 \001(\005" +
      ":\0010\022\034\n\021NormalPowerOnTime\030\025 \001(\005:\0010\022\035\n\022OTA" +
      "FirmwareVersion\030\026 \001(\005:\0010\022\027\n\rOTAFirmwareI" +
      "D\030\027 \001(\t:\000\022\032\n\017OTAForceUpgrade\030\030 \001(\005:\0010\022\027\n" +
      "\rOTAServerHost\030\031 \001(\t:\000\022\030\n\rOTAServerPort\030",
      "\032 \001(\005:\0010\022\022\n\007SMSMode\030\033 \001(\005:\0010\022\026\n\013SMSInter" +
      "val\030\034 \001(\005:\0010\022\024\n\tAlarmMode\030\035 \001(\005:\0010\022\032\n\017Sc" +
      "heduleSpeaker\030\036 \001(\005:\0010\022\032\n\017SpeakerExitTim" +
      "e\030\037 \001(\005:\0010\022\033\n\020SpeakerEnterTime\030  \001(\005:\0010\022" +
      " \n\026CommunicationTimeTable\030f \001(\t:\000\022*\n\nOri" +
      "ginTime\030i \003(\0132\026.protocol_v1.TimeRange\022\025\n" +
      "\nOriginMode\030j \001(\005:\0010\022\033\n\020EstrusSampleMode" +
      "\030k \001(\005:\0010\022\037\n\024EstrusSampleInterval\030l \001(\005:" +
      "\0010\022\036\n\023Behavior2SampleMode\030m \001(\005:\0010\022\"\n\027Be" +
      "havior2SampleInterval\030n \001(\005:\0010\0225\n\017GprsPo",
      "werSaving\030o \001(\0132\034.protocol_v1.GprsPowerS" +
      "aving\0224\n\014VoltageBoost\030p \003(\0132\036.protocol_v" +
      "1.VoltageBoostLevel\0220\n\nSpeedBoost\030q \001(\0132" +
      "\034.protocol_v1.SpeedBoostLevel\022\027\n\014RandomS" +
      "econd\030r \001(\005:\0010\022!\n\026BehaviorSampleStrategy" +
      "\030s \001(\r:\0010\022\027\n\017UserPhoneNumber\030t \003(\t\022\022\n\007Hu" +
      "bMode\030x \001(\005:\0010\022\025\n\nHashSecond\030y \001(\r:\0010\022\032\n" +
      "\017HashMillisecond\030z \001(\r:\0010\022\034\n\024CellularLoc" +
      "ationMode\030| \001(\005\022(\n\013StepsSwitch\030} \001(\0132\023.p" +
      "rotocol_v1.Switch\022)\n\014ActionSwitch\030~ \001(\0132",
      "\023.protocol_v1.Switch\022\024\n\010WorkMode\030\202\001 \001(\005:" +
      "\0010\0224\n\016Origin2Setting\030\214\001 \001(\0132\033.protocol_v" +
      "1.Origin2Setting\022B\n\025BeaconLocationSettin" +
      "g\030\215\001 \001(\0132\".protocol_v1.BeaconLocationSet" +
      "ting\0226\n\017PowerOffSetting\030\216\001 \001(\0132\034.protoco" +
      "l_v1.PowerOffSetting\0220\n\014ArgosSetting\030\217\001 " +
      "\001(\0132\031.protocol_v1.ArgosSetting\022/\n\010Magnet" +
      "ic\030\220\001 \001(\0132\034.protocol_v1.MagneticSetting\022" +
      "\033\n\016AccOutDataRate\030\221\001 \001(\005:\00225\0228\n\020Algorith" +
      "mVersion\030\226\001 \001(\0132\035.protocol_v1.AlgorithmV",
      "ersion\"_\n\nSettingRsp\022&\n\004Iden\030\001 \002(\0132\030.pro" +
      "tocol_v1.IdentityMsg\022)\n\013SettingInfo\030\002 \001(" +
      "\0132\024.protocol_v1.SettingB\005\242\002\002V1"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protocol_v1.V1IdentityMsg.getDescriptor(),
          protocol_v1.V1Switch.getDescriptor(),
          protocol_v1.V1Algorithm.getDescriptor(),
        }, assigner);
    internal_static_protocol_v1_SettingReq_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_protocol_v1_SettingReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_v1_SettingReq_descriptor,
        new java.lang.String[] { "Iden", });
    internal_static_protocol_v1_TimeRange_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_protocol_v1_TimeRange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_v1_TimeRange_descriptor,
        new java.lang.String[] { "Begin", "End", });
    internal_static_protocol_v1_GprsPowerSaving_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_protocol_v1_GprsPowerSaving_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_v1_GprsPowerSaving_descriptor,
        new java.lang.String[] { "Mode", "Distance", "Time", });
    internal_static_protocol_v1_VoltageBoostLevel_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_protocol_v1_VoltageBoostLevel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_v1_VoltageBoostLevel_descriptor,
        new java.lang.String[] { "Voltage", "SampleInterval", "UploadInterval", });
    internal_static_protocol_v1_SpeedBoostLevel_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_protocol_v1_SpeedBoostLevel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_v1_SpeedBoostLevel_descriptor,
        new java.lang.String[] { "Voltage", "SampleInterval", "ActiveLimit", "InactiveLimit", "UploadTrigger", });
    internal_static_protocol_v1_Origin2Setting_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_protocol_v1_Origin2Setting_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_v1_Origin2Setting_descriptor,
        new java.lang.String[] { "Mode", "Interval", "Duration", });
    internal_static_protocol_v1_BeaconLocationSetting_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_protocol_v1_BeaconLocationSetting_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_v1_BeaconLocationSetting_descriptor,
        new java.lang.String[] { "Mode", "Timeout", "WhiteListMode", });
    internal_static_protocol_v1_PowerOffSetting_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_protocol_v1_PowerOffSetting_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_v1_PowerOffSetting_descriptor,
        new java.lang.String[] { "Mode", "Mask", "Time", });
    internal_static_protocol_v1_ArgosSetting_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_protocol_v1_ArgosSetting_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_v1_ArgosSetting_descriptor,
        new java.lang.String[] { "Mode", "Interval", "Monitor", "OnTime", "AutoOnTime", "VoltageBoost", "DataMode", });
    internal_static_protocol_v1_ArgosSetting_IntervalMode_descriptor =
      internal_static_protocol_v1_ArgosSetting_descriptor.getNestedTypes().get(0);
    internal_static_protocol_v1_ArgosSetting_IntervalMode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_v1_ArgosSetting_IntervalMode_descriptor,
        new java.lang.String[] { "Interval", "Frequency", "DutyCycle", });
    internal_static_protocol_v1_ArgosSetting_DataModeConfig_descriptor =
      internal_static_protocol_v1_ArgosSetting_descriptor.getNestedTypes().get(1);
    internal_static_protocol_v1_ArgosSetting_DataModeConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_v1_ArgosSetting_DataModeConfig_descriptor,
        new java.lang.String[] { "GpsRate", "SummaryRate", "GpsHistoryCount", "SummaryHistoryCount", });
    internal_static_protocol_v1_ArgosSetting_MonitorMode_descriptor =
      internal_static_protocol_v1_ArgosSetting_descriptor.getNestedTypes().get(2);
    internal_static_protocol_v1_ArgosSetting_MonitorMode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_v1_ArgosSetting_MonitorMode_descriptor,
        new java.lang.String[] { "Frequency", "MaxTxCountPerPass", "MaxRxCountPerPass", });
    internal_static_protocol_v1_ArgosSetting_OnTimeMode_descriptor =
      internal_static_protocol_v1_ArgosSetting_descriptor.getNestedTypes().get(3);
    internal_static_protocol_v1_ArgosSetting_OnTimeMode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_v1_ArgosSetting_OnTimeMode_descriptor,
        new java.lang.String[] { "TimeTable", "Frequency", "DutyCycle", });
    internal_static_protocol_v1_ArgosSetting_AutoOnTimeMode_descriptor =
      internal_static_protocol_v1_ArgosSetting_descriptor.getNestedTypes().get(4);
    internal_static_protocol_v1_ArgosSetting_AutoOnTimeMode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_v1_ArgosSetting_AutoOnTimeMode_descriptor,
        new java.lang.String[] { "HoursPerDay", "Frequency", "DutyCycle", });
    internal_static_protocol_v1_MagneticSetting_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_protocol_v1_MagneticSetting_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_v1_MagneticSetting_descriptor,
        new java.lang.String[] { "OutDataRate", "Normal", "Origin", });
    internal_static_protocol_v1_MagneticSetting_NormalSetting_descriptor =
      internal_static_protocol_v1_MagneticSetting_descriptor.getNestedTypes().get(0);
    internal_static_protocol_v1_MagneticSetting_NormalSetting_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_v1_MagneticSetting_NormalSetting_descriptor,
        new java.lang.String[] { "Mode", "Interval", });
    internal_static_protocol_v1_Setting_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_protocol_v1_Setting_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_v1_Setting_descriptor,
        new java.lang.String[] { "EnvSampleMode", "EnvSampleInterval", "BehaviorSampleMode", "BehaviorSampleInterval", "GPSSampleMode", "GPSSampleInterval", "CommunicationMode", "CommunicationInterval", "TriggerMode", "ResetDevice", "SchedulePowerOff", "DailyPowerOffTime", "DailyPowerOnTime", "NormalPowerOffTime", "NormalPowerOnTime", "OTAFirmwareVersion", "OTAFirmwareID", "OTAForceUpgrade", "OTAServerHost", "OTAServerPort", "SMSMode", "SMSInterval", "AlarmMode", "ScheduleSpeaker", "SpeakerExitTime", "SpeakerEnterTime", "CommunicationTimeTable", "OriginTime", "OriginMode", "EstrusSampleMode", "EstrusSampleInterval", "Behavior2SampleMode", "Behavior2SampleInterval", "GprsPowerSaving", "VoltageBoost", "SpeedBoost", "RandomSecond", "BehaviorSampleStrategy", "UserPhoneNumber", "HubMode", "HashSecond", "HashMillisecond", "CellularLocationMode", "StepsSwitch", "ActionSwitch", "WorkMode", "Origin2Setting", "BeaconLocationSetting", "PowerOffSetting", "ArgosSetting", "Magnetic", "AccOutDataRate", "AlgorithmVersion", });
    internal_static_protocol_v1_SettingRsp_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_protocol_v1_SettingRsp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_v1_SettingRsp_descriptor,
        new java.lang.String[] { "Iden", "SettingInfo", });
    protocol_v1.V1IdentityMsg.getDescriptor();
    protocol_v1.V1Switch.getDescriptor();
    protocol_v1.V1Algorithm.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
