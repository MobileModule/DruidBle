// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v1.Register.proto

package protocol_v1;

public final class V1Register {
  private V1Register() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RegisterReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol_v1.RegisterReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
     */
    boolean hasIden();
    /**
     * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
     */
    protocol_v1.V1IdentityMsg.IdentityMsg getIden();
    /**
     * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
     */
    protocol_v1.V1IdentityMsg.IdentityMsgOrBuilder getIdenOrBuilder();

    /**
     * <code>required string IMSI = 2;</code>
     */
    boolean hasIMSI();
    /**
     * <code>required string IMSI = 2;</code>
     */
    java.lang.String getIMSI();
    /**
     * <code>required string IMSI = 2;</code>
     */
    com.google.protobuf.ByteString
        getIMSIBytes();

    /**
     * <code>optional string IMEI = 3 [default = ""];</code>
     */
    boolean hasIMEI();
    /**
     * <code>optional string IMEI = 3 [default = ""];</code>
     */
    java.lang.String getIMEI();
    /**
     * <code>optional string IMEI = 3 [default = ""];</code>
     */
    com.google.protobuf.ByteString
        getIMEIBytes();

    /**
     * <code>optional string MAC = 4 [default = ""];</code>
     *
     * <pre>
     * 蓝牙MAC地址
     * </pre>
     */
    boolean hasMAC();
    /**
     * <code>optional string MAC = 4 [default = ""];</code>
     *
     * <pre>
     * 蓝牙MAC地址
     * </pre>
     */
    java.lang.String getMAC();
    /**
     * <code>optional string MAC = 4 [default = ""];</code>
     *
     * <pre>
     * 蓝牙MAC地址
     * </pre>
     */
    com.google.protobuf.ByteString
        getMACBytes();

    /**
     * <code>optional int32 DeviceType = 5 [default = 0];</code>
     *
     * <pre>
     * 设备类型
     * </pre>
     */
    boolean hasDeviceType();
    /**
     * <code>optional int32 DeviceType = 5 [default = 0];</code>
     *
     * <pre>
     * 设备类型
     * </pre>
     */
    int getDeviceType();

    /**
     * <code>optional int32 HardwareVersion = 6 [default = 0];</code>
     *
     * <pre>
     * 硬件版本
     * </pre>
     */
    boolean hasHardwareVersion();
    /**
     * <code>optional int32 HardwareVersion = 6 [default = 0];</code>
     *
     * <pre>
     * 硬件版本
     * </pre>
     */
    int getHardwareVersion();

    /**
     * <code>optional int32 FirmwareVersion = 7 [default = 0];</code>
     *
     * <pre>
     * 固件版本
     * </pre>
     */
    boolean hasFirmwareVersion();
    /**
     * <code>optional int32 FirmwareVersion = 7 [default = 0];</code>
     *
     * <pre>
     * 固件版本
     * </pre>
     */
    int getFirmwareVersion();

    /**
     * <code>optional int32 Status = 8 [default = 0];</code>
     *
     * <pre>
     * 自检状态: 0 - 无异常
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>optional int32 Status = 8 [default = 0];</code>
     *
     * <pre>
     * 自检状态: 0 - 无异常
     * </pre>
     */
    int getStatus();

    /**
     * <code>optional int32 BatteryVoltage = 9 [default = 0];</code>
     *
     * <pre>
     * 电池电压: 毫伏 (废弃，放在Env子对象里)
     * </pre>
     */
    boolean hasBatteryVoltage();
    /**
     * <code>optional int32 BatteryVoltage = 9 [default = 0];</code>
     *
     * <pre>
     * 电池电压: 毫伏 (废弃，放在Env子对象里)
     * </pre>
     */
    int getBatteryVoltage();

    /**
     * <code>optional int32 BatteryPower = 10 [default = 0];</code>
     *
     * <pre>
     * 电池电量: 百分比 (废弃，放在Env子对象里)
     * </pre>
     */
    boolean hasBatteryPower();
    /**
     * <code>optional int32 BatteryPower = 10 [default = 0];</code>
     *
     * <pre>
     * 电池电量: 百分比 (废弃，放在Env子对象里)
     * </pre>
     */
    int getBatteryPower();

    /**
     * <code>optional int32 SignalStrength = 11 [default = 0];</code>
     *
     * <pre>
     * 信号强度 (废弃，放在Cellular子对象里)
     * </pre>
     */
    boolean hasSignalStrength();
    /**
     * <code>optional int32 SignalStrength = 11 [default = 0];</code>
     *
     * <pre>
     * 信号强度 (废弃，放在Cellular子对象里)
     * </pre>
     */
    int getSignalStrength();

    /**
     * <code>optional int32 BitErrorRate = 12 [default = 0];</code>
     *
     * <pre>
     * 误码率  (废弃，放在Cellular子对象里)
     * </pre>
     */
    boolean hasBitErrorRate();
    /**
     * <code>optional int32 BitErrorRate = 12 [default = 0];</code>
     *
     * <pre>
     * 误码率  (废弃，放在Cellular子对象里)
     * </pre>
     */
    int getBitErrorRate();

    /**
     * <code>optional int32 RadioAccessTechnology = 13 [default = 0];</code>
     *
     * <pre>
     * 网络类型 (废弃，放在Cellular子对象里)
     * </pre>
     */
    boolean hasRadioAccessTechnology();
    /**
     * <code>optional int32 RadioAccessTechnology = 13 [default = 0];</code>
     *
     * <pre>
     * 网络类型 (废弃，放在Cellular子对象里)
     * </pre>
     */
    int getRadioAccessTechnology();

    /**
     * <code>optional uint32 NetworkOperator = 14 [default = 0];</code>
     *
     * <pre>
     * 运营商代码 (废弃，放在Cellular子对象里)
     * </pre>
     */
    boolean hasNetworkOperator();
    /**
     * <code>optional uint32 NetworkOperator = 14 [default = 0];</code>
     *
     * <pre>
     * 运营商代码 (废弃，放在Cellular子对象里)
     * </pre>
     */
    int getNetworkOperator();

    /**
     * <code>optional string ICCID = 101 [default = ""];</code>
     */
    boolean hasICCID();
    /**
     * <code>optional string ICCID = 101 [default = ""];</code>
     */
    java.lang.String getICCID();
    /**
     * <code>optional string ICCID = 101 [default = ""];</code>
     */
    com.google.protobuf.ByteString
        getICCIDBytes();

    /**
     * <code>optional string ModemFirmwareVersion = 102 [default = ""];</code>
     *
     * <pre>
     * 蜂窝模块固件版本
     * </pre>
     */
    boolean hasModemFirmwareVersion();
    /**
     * <code>optional string ModemFirmwareVersion = 102 [default = ""];</code>
     *
     * <pre>
     * 蜂窝模块固件版本
     * </pre>
     */
    java.lang.String getModemFirmwareVersion();
    /**
     * <code>optional string ModemFirmwareVersion = 102 [default = ""];</code>
     *
     * <pre>
     * 蜂窝模块固件版本
     * </pre>
     */
    com.google.protobuf.ByteString
        getModemFirmwareVersionBytes();

    /**
     * <code>optional .protocol_v1.Hash SettingHash = 110;</code>
     *
     * <pre>
     * 各个配置hash
     * </pre>
     */
    boolean hasSettingHash();
    /**
     * <code>optional .protocol_v1.Hash SettingHash = 110;</code>
     *
     * <pre>
     * 各个配置hash
     * </pre>
     */
    protocol_v1.V1TimeHash.Hash getSettingHash();
    /**
     * <code>optional .protocol_v1.Hash SettingHash = 110;</code>
     *
     * <pre>
     * 各个配置hash
     * </pre>
     */
    protocol_v1.V1TimeHash.HashOrBuilder getSettingHashOrBuilder();

    /**
     * <code>optional .protocol_v1.HashLite OEMHash = 111;</code>
     *
     * <pre>
     * OEM信息hash
     * </pre>
     */
    boolean hasOEMHash();
    /**
     * <code>optional .protocol_v1.HashLite OEMHash = 111;</code>
     *
     * <pre>
     * OEM信息hash
     * </pre>
     */
    protocol_v1.V1TimeHash.HashLite getOEMHash();
    /**
     * <code>optional .protocol_v1.HashLite OEMHash = 111;</code>
     *
     * <pre>
     * OEM信息hash
     * </pre>
     */
    protocol_v1.V1TimeHash.HashLiteOrBuilder getOEMHashOrBuilder();

    /**
     * <code>optional .protocol_v1.HashLite TriggerHash = 112;</code>
     *
     * <pre>
     * 触发器hash
     * </pre>
     */
    boolean hasTriggerHash();
    /**
     * <code>optional .protocol_v1.HashLite TriggerHash = 112;</code>
     *
     * <pre>
     * 触发器hash
     * </pre>
     */
    protocol_v1.V1TimeHash.HashLite getTriggerHash();
    /**
     * <code>optional .protocol_v1.HashLite TriggerHash = 112;</code>
     *
     * <pre>
     * 触发器hash
     * </pre>
     */
    protocol_v1.V1TimeHash.HashLiteOrBuilder getTriggerHashOrBuilder();

    /**
     * <code>optional .protocol_v1.HashLite AlgorithmHash = 113;</code>
     *
     * <pre>
     * 算法配置hash
     * </pre>
     */
    boolean hasAlgorithmHash();
    /**
     * <code>optional .protocol_v1.HashLite AlgorithmHash = 113;</code>
     *
     * <pre>
     * 算法配置hash
     * </pre>
     */
    protocol_v1.V1TimeHash.HashLite getAlgorithmHash();
    /**
     * <code>optional .protocol_v1.HashLite AlgorithmHash = 113;</code>
     *
     * <pre>
     * 算法配置hash
     * </pre>
     */
    protocol_v1.V1TimeHash.HashLiteOrBuilder getAlgorithmHashOrBuilder();

    /**
     * <code>optional int32 WorkMode = 120 [default = 0];</code>
     *
     * <pre>
     * 设备当前运行状态, 0:未知，1:保留, 2:关机（原库存）, 3:开机, 4:休眠（原关机, 废弃）
     * </pre>
     */
    boolean hasWorkMode();
    /**
     * <code>optional int32 WorkMode = 120 [default = 0];</code>
     *
     * <pre>
     * 设备当前运行状态, 0:未知，1:保留, 2:关机（原库存）, 3:开机, 4:休眠（原关机, 废弃）
     * </pre>
     */
    int getWorkMode();

    /**
     * <code>optional uint32 Timestamp = 121 [default = 0];</code>
     *
     * <pre>
     * 开始通信的时间
     * </pre>
     */
    boolean hasTimestamp();
    /**
     * <code>optional uint32 Timestamp = 121 [default = 0];</code>
     *
     * <pre>
     * 开始通信的时间
     * </pre>
     */
    int getTimestamp();

    /**
     * <code>optional .protocol_v1.GatewayStatus GatewayStatus = 131;</code>
     *
     * <pre>
     * 网关状态(废弃)
     * </pre>
     */
    boolean hasGatewayStatus();
    /**
     * <code>optional .protocol_v1.GatewayStatus GatewayStatus = 131;</code>
     *
     * <pre>
     * 网关状态(废弃)
     * </pre>
     */
    protocol_v1.V1Register.GatewayStatus getGatewayStatus();
    /**
     * <code>optional .protocol_v1.GatewayStatus GatewayStatus = 131;</code>
     *
     * <pre>
     * 网关状态(废弃)
     * </pre>
     */
    protocol_v1.V1Register.GatewayStatusOrBuilder getGatewayStatusOrBuilder();

    /**
     * <code>repeated .protocol_v1.StorageStatus StorageStatus = 132;</code>
     *
     * <pre>
     * 存储分区状态
     * </pre>
     */
    java.util.List<protocol_v1.V1Register.StorageStatus> 
        getStorageStatusList();
    /**
     * <code>repeated .protocol_v1.StorageStatus StorageStatus = 132;</code>
     *
     * <pre>
     * 存储分区状态
     * </pre>
     */
    protocol_v1.V1Register.StorageStatus getStorageStatus(int index);
    /**
     * <code>repeated .protocol_v1.StorageStatus StorageStatus = 132;</code>
     *
     * <pre>
     * 存储分区状态
     * </pre>
     */
    int getStorageStatusCount();
    /**
     * <code>repeated .protocol_v1.StorageStatus StorageStatus = 132;</code>
     *
     * <pre>
     * 存储分区状态
     * </pre>
     */
    java.util.List<? extends protocol_v1.V1Register.StorageStatusOrBuilder> 
        getStorageStatusOrBuilderList();
    /**
     * <code>repeated .protocol_v1.StorageStatus StorageStatus = 132;</code>
     *
     * <pre>
     * 存储分区状态
     * </pre>
     */
    protocol_v1.V1Register.StorageStatusOrBuilder getStorageStatusOrBuilder(
        int index);

    /**
     * <code>optional .protocol_v1.Env Env = 136;</code>
     *
     * <pre>
     * optional GPS GPS = 135;                     // 上传时采集定位信息(暂不实现)
     * </pre>
     */
    boolean hasEnv();
    /**
     * <code>optional .protocol_v1.Env Env = 136;</code>
     *
     * <pre>
     * optional GPS GPS = 135;                     // 上传时采集定位信息(暂不实现)
     * </pre>
     */
    protocol_v1.V1Env.Env getEnv();
    /**
     * <code>optional .protocol_v1.Env Env = 136;</code>
     *
     * <pre>
     * optional GPS GPS = 135;                     // 上传时采集定位信息(暂不实现)
     * </pre>
     */
    protocol_v1.V1Env.EnvOrBuilder getEnvOrBuilder();

    /**
     * <code>optional .protocol_v1.Cellular Cellular = 138;</code>
     *
     * <pre>
     * 上传时蜂窝网络信息
     * </pre>
     */
    boolean hasCellular();
    /**
     * <code>optional .protocol_v1.Cellular Cellular = 138;</code>
     *
     * <pre>
     * 上传时蜂窝网络信息
     * </pre>
     */
    protocol_v1.V1Cellular.Cellular getCellular();
    /**
     * <code>optional .protocol_v1.Cellular Cellular = 138;</code>
     *
     * <pre>
     * 上传时蜂窝网络信息
     * </pre>
     */
    protocol_v1.V1Cellular.CellularOrBuilder getCellularOrBuilder();

    /**
     * <code>repeated .protocol_v1.AlgorithmVersion AlgorithmVersion = 140;</code>
     *
     * <pre>
     * 支持的算法版本
     * </pre>
     */
    java.util.List<protocol_v1.V1Algorithm.AlgorithmVersion> 
        getAlgorithmVersionList();
    /**
     * <code>repeated .protocol_v1.AlgorithmVersion AlgorithmVersion = 140;</code>
     *
     * <pre>
     * 支持的算法版本
     * </pre>
     */
    protocol_v1.V1Algorithm.AlgorithmVersion getAlgorithmVersion(int index);
    /**
     * <code>repeated .protocol_v1.AlgorithmVersion AlgorithmVersion = 140;</code>
     *
     * <pre>
     * 支持的算法版本
     * </pre>
     */
    int getAlgorithmVersionCount();
    /**
     * <code>repeated .protocol_v1.AlgorithmVersion AlgorithmVersion = 140;</code>
     *
     * <pre>
     * 支持的算法版本
     * </pre>
     */
    java.util.List<? extends protocol_v1.V1Algorithm.AlgorithmVersionOrBuilder> 
        getAlgorithmVersionOrBuilderList();
    /**
     * <code>repeated .protocol_v1.AlgorithmVersion AlgorithmVersion = 140;</code>
     *
     * <pre>
     * 支持的算法版本
     * </pre>
     */
    protocol_v1.V1Algorithm.AlgorithmVersionOrBuilder getAlgorithmVersionOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code protocol_v1.RegisterReq}
   */
  public  static final class RegisterReq extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protocol_v1.RegisterReq)
      RegisterReqOrBuilder {
    // Use RegisterReq.newBuilder() to construct.
    private RegisterReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private RegisterReq() {
      iMSI_ = "";
      iMEI_ = "";
      mAC_ = "";
      deviceType_ = 0;
      hardwareVersion_ = 0;
      firmwareVersion_ = 0;
      status_ = 0;
      batteryVoltage_ = 0;
      batteryPower_ = 0;
      signalStrength_ = 0;
      bitErrorRate_ = 0;
      radioAccessTechnology_ = 0;
      networkOperator_ = 0;
      iCCID_ = "";
      modemFirmwareVersion_ = "";
      workMode_ = 0;
      timestamp_ = 0;
      storageStatus_ = java.util.Collections.emptyList();
      algorithmVersion_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RegisterReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protocol_v1.V1IdentityMsg.IdentityMsg.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = iden_.toBuilder();
              }
              iden_ = input.readMessage(protocol_v1.V1IdentityMsg.IdentityMsg.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(iden_);
                iden_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              iMSI_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              iMEI_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              mAC_ = bs;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              deviceType_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              hardwareVersion_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              firmwareVersion_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              status_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              batteryVoltage_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              batteryPower_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              signalStrength_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              bitErrorRate_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              radioAccessTechnology_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              networkOperator_ = input.readUInt32();
              break;
            }
            case 810: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00004000;
              iCCID_ = bs;
              break;
            }
            case 818: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00008000;
              modemFirmwareVersion_ = bs;
              break;
            }
            case 882: {
              protocol_v1.V1TimeHash.Hash.Builder subBuilder = null;
              if (((bitField0_ & 0x00010000) == 0x00010000)) {
                subBuilder = settingHash_.toBuilder();
              }
              settingHash_ = input.readMessage(protocol_v1.V1TimeHash.Hash.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(settingHash_);
                settingHash_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00010000;
              break;
            }
            case 890: {
              protocol_v1.V1TimeHash.HashLite.Builder subBuilder = null;
              if (((bitField0_ & 0x00020000) == 0x00020000)) {
                subBuilder = oEMHash_.toBuilder();
              }
              oEMHash_ = input.readMessage(protocol_v1.V1TimeHash.HashLite.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(oEMHash_);
                oEMHash_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00020000;
              break;
            }
            case 898: {
              protocol_v1.V1TimeHash.HashLite.Builder subBuilder = null;
              if (((bitField0_ & 0x00040000) == 0x00040000)) {
                subBuilder = triggerHash_.toBuilder();
              }
              triggerHash_ = input.readMessage(protocol_v1.V1TimeHash.HashLite.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(triggerHash_);
                triggerHash_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00040000;
              break;
            }
            case 906: {
              protocol_v1.V1TimeHash.HashLite.Builder subBuilder = null;
              if (((bitField0_ & 0x00080000) == 0x00080000)) {
                subBuilder = algorithmHash_.toBuilder();
              }
              algorithmHash_ = input.readMessage(protocol_v1.V1TimeHash.HashLite.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(algorithmHash_);
                algorithmHash_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00080000;
              break;
            }
            case 960: {
              bitField0_ |= 0x00100000;
              workMode_ = input.readInt32();
              break;
            }
            case 968: {
              bitField0_ |= 0x00200000;
              timestamp_ = input.readUInt32();
              break;
            }
            case 1050: {
              protocol_v1.V1Register.GatewayStatus.Builder subBuilder = null;
              if (((bitField0_ & 0x00400000) == 0x00400000)) {
                subBuilder = gatewayStatus_.toBuilder();
              }
              gatewayStatus_ = input.readMessage(protocol_v1.V1Register.GatewayStatus.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gatewayStatus_);
                gatewayStatus_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00400000;
              break;
            }
            case 1058: {
              if (!((mutable_bitField0_ & 0x00800000) == 0x00800000)) {
                storageStatus_ = new java.util.ArrayList<protocol_v1.V1Register.StorageStatus>();
                mutable_bitField0_ |= 0x00800000;
              }
              storageStatus_.add(input.readMessage(protocol_v1.V1Register.StorageStatus.parser(), extensionRegistry));
              break;
            }
            case 1090: {
              protocol_v1.V1Env.Env.Builder subBuilder = null;
              if (((bitField0_ & 0x00800000) == 0x00800000)) {
                subBuilder = env_.toBuilder();
              }
              env_ = input.readMessage(protocol_v1.V1Env.Env.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(env_);
                env_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00800000;
              break;
            }
            case 1106: {
              protocol_v1.V1Cellular.Cellular.Builder subBuilder = null;
              if (((bitField0_ & 0x01000000) == 0x01000000)) {
                subBuilder = cellular_.toBuilder();
              }
              cellular_ = input.readMessage(protocol_v1.V1Cellular.Cellular.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cellular_);
                cellular_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x01000000;
              break;
            }
            case 1122: {
              if (!((mutable_bitField0_ & 0x04000000) == 0x04000000)) {
                algorithmVersion_ = new java.util.ArrayList<protocol_v1.V1Algorithm.AlgorithmVersion>();
                mutable_bitField0_ |= 0x04000000;
              }
              algorithmVersion_.add(input.readMessage(protocol_v1.V1Algorithm.AlgorithmVersion.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00800000) == 0x00800000)) {
          storageStatus_ = java.util.Collections.unmodifiableList(storageStatus_);
        }
        if (((mutable_bitField0_ & 0x04000000) == 0x04000000)) {
          algorithmVersion_ = java.util.Collections.unmodifiableList(algorithmVersion_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol_v1.V1Register.internal_static_protocol_v1_RegisterReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol_v1.V1Register.internal_static_protocol_v1_RegisterReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol_v1.V1Register.RegisterReq.class, protocol_v1.V1Register.RegisterReq.Builder.class);
    }

    private int bitField0_;
    public static final int IDEN_FIELD_NUMBER = 1;
    private protocol_v1.V1IdentityMsg.IdentityMsg iden_;
    /**
     * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
     */
    public boolean hasIden() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
     */
    public protocol_v1.V1IdentityMsg.IdentityMsg getIden() {
      return iden_ == null ? protocol_v1.V1IdentityMsg.IdentityMsg.getDefaultInstance() : iden_;
    }
    /**
     * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
     */
    public protocol_v1.V1IdentityMsg.IdentityMsgOrBuilder getIdenOrBuilder() {
      return iden_ == null ? protocol_v1.V1IdentityMsg.IdentityMsg.getDefaultInstance() : iden_;
    }

    public static final int IMSI_FIELD_NUMBER = 2;
    private volatile java.lang.Object iMSI_;
    /**
     * <code>required string IMSI = 2;</code>
     */
    public boolean hasIMSI() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string IMSI = 2;</code>
     */
    public java.lang.String getIMSI() {
      java.lang.Object ref = iMSI_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          iMSI_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string IMSI = 2;</code>
     */
    public com.google.protobuf.ByteString
        getIMSIBytes() {
      java.lang.Object ref = iMSI_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        iMSI_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IMEI_FIELD_NUMBER = 3;
    private volatile java.lang.Object iMEI_;
    /**
     * <code>optional string IMEI = 3 [default = ""];</code>
     */
    public boolean hasIMEI() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string IMEI = 3 [default = ""];</code>
     */
    public java.lang.String getIMEI() {
      java.lang.Object ref = iMEI_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          iMEI_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string IMEI = 3 [default = ""];</code>
     */
    public com.google.protobuf.ByteString
        getIMEIBytes() {
      java.lang.Object ref = iMEI_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        iMEI_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MAC_FIELD_NUMBER = 4;
    private volatile java.lang.Object mAC_;
    /**
     * <code>optional string MAC = 4 [default = ""];</code>
     *
     * <pre>
     * 蓝牙MAC地址
     * </pre>
     */
    public boolean hasMAC() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string MAC = 4 [default = ""];</code>
     *
     * <pre>
     * 蓝牙MAC地址
     * </pre>
     */
    public java.lang.String getMAC() {
      java.lang.Object ref = mAC_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mAC_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MAC = 4 [default = ""];</code>
     *
     * <pre>
     * 蓝牙MAC地址
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMACBytes() {
      java.lang.Object ref = mAC_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mAC_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEVICETYPE_FIELD_NUMBER = 5;
    private int deviceType_;
    /**
     * <code>optional int32 DeviceType = 5 [default = 0];</code>
     *
     * <pre>
     * 设备类型
     * </pre>
     */
    public boolean hasDeviceType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 DeviceType = 5 [default = 0];</code>
     *
     * <pre>
     * 设备类型
     * </pre>
     */
    public int getDeviceType() {
      return deviceType_;
    }

    public static final int HARDWAREVERSION_FIELD_NUMBER = 6;
    private int hardwareVersion_;
    /**
     * <code>optional int32 HardwareVersion = 6 [default = 0];</code>
     *
     * <pre>
     * 硬件版本
     * </pre>
     */
    public boolean hasHardwareVersion() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 HardwareVersion = 6 [default = 0];</code>
     *
     * <pre>
     * 硬件版本
     * </pre>
     */
    public int getHardwareVersion() {
      return hardwareVersion_;
    }

    public static final int FIRMWAREVERSION_FIELD_NUMBER = 7;
    private int firmwareVersion_;
    /**
     * <code>optional int32 FirmwareVersion = 7 [default = 0];</code>
     *
     * <pre>
     * 固件版本
     * </pre>
     */
    public boolean hasFirmwareVersion() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 FirmwareVersion = 7 [default = 0];</code>
     *
     * <pre>
     * 固件版本
     * </pre>
     */
    public int getFirmwareVersion() {
      return firmwareVersion_;
    }

    public static final int STATUS_FIELD_NUMBER = 8;
    private int status_;
    /**
     * <code>optional int32 Status = 8 [default = 0];</code>
     *
     * <pre>
     * 自检状态: 0 - 无异常
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 Status = 8 [default = 0];</code>
     *
     * <pre>
     * 自检状态: 0 - 无异常
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    public static final int BATTERYVOLTAGE_FIELD_NUMBER = 9;
    private int batteryVoltage_;
    /**
     * <code>optional int32 BatteryVoltage = 9 [default = 0];</code>
     *
     * <pre>
     * 电池电压: 毫伏 (废弃，放在Env子对象里)
     * </pre>
     */
    public boolean hasBatteryVoltage() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 BatteryVoltage = 9 [default = 0];</code>
     *
     * <pre>
     * 电池电压: 毫伏 (废弃，放在Env子对象里)
     * </pre>
     */
    public int getBatteryVoltage() {
      return batteryVoltage_;
    }

    public static final int BATTERYPOWER_FIELD_NUMBER = 10;
    private int batteryPower_;
    /**
     * <code>optional int32 BatteryPower = 10 [default = 0];</code>
     *
     * <pre>
     * 电池电量: 百分比 (废弃，放在Env子对象里)
     * </pre>
     */
    public boolean hasBatteryPower() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 BatteryPower = 10 [default = 0];</code>
     *
     * <pre>
     * 电池电量: 百分比 (废弃，放在Env子对象里)
     * </pre>
     */
    public int getBatteryPower() {
      return batteryPower_;
    }

    public static final int SIGNALSTRENGTH_FIELD_NUMBER = 11;
    private int signalStrength_;
    /**
     * <code>optional int32 SignalStrength = 11 [default = 0];</code>
     *
     * <pre>
     * 信号强度 (废弃，放在Cellular子对象里)
     * </pre>
     */
    public boolean hasSignalStrength() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 SignalStrength = 11 [default = 0];</code>
     *
     * <pre>
     * 信号强度 (废弃，放在Cellular子对象里)
     * </pre>
     */
    public int getSignalStrength() {
      return signalStrength_;
    }

    public static final int BITERRORRATE_FIELD_NUMBER = 12;
    private int bitErrorRate_;
    /**
     * <code>optional int32 BitErrorRate = 12 [default = 0];</code>
     *
     * <pre>
     * 误码率  (废弃，放在Cellular子对象里)
     * </pre>
     */
    public boolean hasBitErrorRate() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 BitErrorRate = 12 [default = 0];</code>
     *
     * <pre>
     * 误码率  (废弃，放在Cellular子对象里)
     * </pre>
     */
    public int getBitErrorRate() {
      return bitErrorRate_;
    }

    public static final int RADIOACCESSTECHNOLOGY_FIELD_NUMBER = 13;
    private int radioAccessTechnology_;
    /**
     * <code>optional int32 RadioAccessTechnology = 13 [default = 0];</code>
     *
     * <pre>
     * 网络类型 (废弃，放在Cellular子对象里)
     * </pre>
     */
    public boolean hasRadioAccessTechnology() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 RadioAccessTechnology = 13 [default = 0];</code>
     *
     * <pre>
     * 网络类型 (废弃，放在Cellular子对象里)
     * </pre>
     */
    public int getRadioAccessTechnology() {
      return radioAccessTechnology_;
    }

    public static final int NETWORKOPERATOR_FIELD_NUMBER = 14;
    private int networkOperator_;
    /**
     * <code>optional uint32 NetworkOperator = 14 [default = 0];</code>
     *
     * <pre>
     * 运营商代码 (废弃，放在Cellular子对象里)
     * </pre>
     */
    public boolean hasNetworkOperator() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional uint32 NetworkOperator = 14 [default = 0];</code>
     *
     * <pre>
     * 运营商代码 (废弃，放在Cellular子对象里)
     * </pre>
     */
    public int getNetworkOperator() {
      return networkOperator_;
    }

    public static final int ICCID_FIELD_NUMBER = 101;
    private volatile java.lang.Object iCCID_;
    /**
     * <code>optional string ICCID = 101 [default = ""];</code>
     */
    public boolean hasICCID() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional string ICCID = 101 [default = ""];</code>
     */
    public java.lang.String getICCID() {
      java.lang.Object ref = iCCID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          iCCID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ICCID = 101 [default = ""];</code>
     */
    public com.google.protobuf.ByteString
        getICCIDBytes() {
      java.lang.Object ref = iCCID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        iCCID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MODEMFIRMWAREVERSION_FIELD_NUMBER = 102;
    private volatile java.lang.Object modemFirmwareVersion_;
    /**
     * <code>optional string ModemFirmwareVersion = 102 [default = ""];</code>
     *
     * <pre>
     * 蜂窝模块固件版本
     * </pre>
     */
    public boolean hasModemFirmwareVersion() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional string ModemFirmwareVersion = 102 [default = ""];</code>
     *
     * <pre>
     * 蜂窝模块固件版本
     * </pre>
     */
    public java.lang.String getModemFirmwareVersion() {
      java.lang.Object ref = modemFirmwareVersion_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          modemFirmwareVersion_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ModemFirmwareVersion = 102 [default = ""];</code>
     *
     * <pre>
     * 蜂窝模块固件版本
     * </pre>
     */
    public com.google.protobuf.ByteString
        getModemFirmwareVersionBytes() {
      java.lang.Object ref = modemFirmwareVersion_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        modemFirmwareVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SETTINGHASH_FIELD_NUMBER = 110;
    private protocol_v1.V1TimeHash.Hash settingHash_;
    /**
     * <code>optional .protocol_v1.Hash SettingHash = 110;</code>
     *
     * <pre>
     * 各个配置hash
     * </pre>
     */
    public boolean hasSettingHash() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional .protocol_v1.Hash SettingHash = 110;</code>
     *
     * <pre>
     * 各个配置hash
     * </pre>
     */
    public protocol_v1.V1TimeHash.Hash getSettingHash() {
      return settingHash_ == null ? protocol_v1.V1TimeHash.Hash.getDefaultInstance() : settingHash_;
    }
    /**
     * <code>optional .protocol_v1.Hash SettingHash = 110;</code>
     *
     * <pre>
     * 各个配置hash
     * </pre>
     */
    public protocol_v1.V1TimeHash.HashOrBuilder getSettingHashOrBuilder() {
      return settingHash_ == null ? protocol_v1.V1TimeHash.Hash.getDefaultInstance() : settingHash_;
    }

    public static final int OEMHASH_FIELD_NUMBER = 111;
    private protocol_v1.V1TimeHash.HashLite oEMHash_;
    /**
     * <code>optional .protocol_v1.HashLite OEMHash = 111;</code>
     *
     * <pre>
     * OEM信息hash
     * </pre>
     */
    public boolean hasOEMHash() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional .protocol_v1.HashLite OEMHash = 111;</code>
     *
     * <pre>
     * OEM信息hash
     * </pre>
     */
    public protocol_v1.V1TimeHash.HashLite getOEMHash() {
      return oEMHash_ == null ? protocol_v1.V1TimeHash.HashLite.getDefaultInstance() : oEMHash_;
    }
    /**
     * <code>optional .protocol_v1.HashLite OEMHash = 111;</code>
     *
     * <pre>
     * OEM信息hash
     * </pre>
     */
    public protocol_v1.V1TimeHash.HashLiteOrBuilder getOEMHashOrBuilder() {
      return oEMHash_ == null ? protocol_v1.V1TimeHash.HashLite.getDefaultInstance() : oEMHash_;
    }

    public static final int TRIGGERHASH_FIELD_NUMBER = 112;
    private protocol_v1.V1TimeHash.HashLite triggerHash_;
    /**
     * <code>optional .protocol_v1.HashLite TriggerHash = 112;</code>
     *
     * <pre>
     * 触发器hash
     * </pre>
     */
    public boolean hasTriggerHash() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional .protocol_v1.HashLite TriggerHash = 112;</code>
     *
     * <pre>
     * 触发器hash
     * </pre>
     */
    public protocol_v1.V1TimeHash.HashLite getTriggerHash() {
      return triggerHash_ == null ? protocol_v1.V1TimeHash.HashLite.getDefaultInstance() : triggerHash_;
    }
    /**
     * <code>optional .protocol_v1.HashLite TriggerHash = 112;</code>
     *
     * <pre>
     * 触发器hash
     * </pre>
     */
    public protocol_v1.V1TimeHash.HashLiteOrBuilder getTriggerHashOrBuilder() {
      return triggerHash_ == null ? protocol_v1.V1TimeHash.HashLite.getDefaultInstance() : triggerHash_;
    }

    public static final int ALGORITHMHASH_FIELD_NUMBER = 113;
    private protocol_v1.V1TimeHash.HashLite algorithmHash_;
    /**
     * <code>optional .protocol_v1.HashLite AlgorithmHash = 113;</code>
     *
     * <pre>
     * 算法配置hash
     * </pre>
     */
    public boolean hasAlgorithmHash() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional .protocol_v1.HashLite AlgorithmHash = 113;</code>
     *
     * <pre>
     * 算法配置hash
     * </pre>
     */
    public protocol_v1.V1TimeHash.HashLite getAlgorithmHash() {
      return algorithmHash_ == null ? protocol_v1.V1TimeHash.HashLite.getDefaultInstance() : algorithmHash_;
    }
    /**
     * <code>optional .protocol_v1.HashLite AlgorithmHash = 113;</code>
     *
     * <pre>
     * 算法配置hash
     * </pre>
     */
    public protocol_v1.V1TimeHash.HashLiteOrBuilder getAlgorithmHashOrBuilder() {
      return algorithmHash_ == null ? protocol_v1.V1TimeHash.HashLite.getDefaultInstance() : algorithmHash_;
    }

    public static final int WORKMODE_FIELD_NUMBER = 120;
    private int workMode_;
    /**
     * <code>optional int32 WorkMode = 120 [default = 0];</code>
     *
     * <pre>
     * 设备当前运行状态, 0:未知，1:保留, 2:关机（原库存）, 3:开机, 4:休眠（原关机, 废弃）
     * </pre>
     */
    public boolean hasWorkMode() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int32 WorkMode = 120 [default = 0];</code>
     *
     * <pre>
     * 设备当前运行状态, 0:未知，1:保留, 2:关机（原库存）, 3:开机, 4:休眠（原关机, 废弃）
     * </pre>
     */
    public int getWorkMode() {
      return workMode_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 121;
    private int timestamp_;
    /**
     * <code>optional uint32 Timestamp = 121 [default = 0];</code>
     *
     * <pre>
     * 开始通信的时间
     * </pre>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional uint32 Timestamp = 121 [default = 0];</code>
     *
     * <pre>
     * 开始通信的时间
     * </pre>
     */
    public int getTimestamp() {
      return timestamp_;
    }

    public static final int GATEWAYSTATUS_FIELD_NUMBER = 131;
    private protocol_v1.V1Register.GatewayStatus gatewayStatus_;
    /**
     * <code>optional .protocol_v1.GatewayStatus GatewayStatus = 131;</code>
     *
     * <pre>
     * 网关状态(废弃)
     * </pre>
     */
    public boolean hasGatewayStatus() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional .protocol_v1.GatewayStatus GatewayStatus = 131;</code>
     *
     * <pre>
     * 网关状态(废弃)
     * </pre>
     */
    public protocol_v1.V1Register.GatewayStatus getGatewayStatus() {
      return gatewayStatus_ == null ? protocol_v1.V1Register.GatewayStatus.getDefaultInstance() : gatewayStatus_;
    }
    /**
     * <code>optional .protocol_v1.GatewayStatus GatewayStatus = 131;</code>
     *
     * <pre>
     * 网关状态(废弃)
     * </pre>
     */
    public protocol_v1.V1Register.GatewayStatusOrBuilder getGatewayStatusOrBuilder() {
      return gatewayStatus_ == null ? protocol_v1.V1Register.GatewayStatus.getDefaultInstance() : gatewayStatus_;
    }

    public static final int STORAGESTATUS_FIELD_NUMBER = 132;
    private java.util.List<protocol_v1.V1Register.StorageStatus> storageStatus_;
    /**
     * <code>repeated .protocol_v1.StorageStatus StorageStatus = 132;</code>
     *
     * <pre>
     * 存储分区状态
     * </pre>
     */
    public java.util.List<protocol_v1.V1Register.StorageStatus> getStorageStatusList() {
      return storageStatus_;
    }
    /**
     * <code>repeated .protocol_v1.StorageStatus StorageStatus = 132;</code>
     *
     * <pre>
     * 存储分区状态
     * </pre>
     */
    public java.util.List<? extends protocol_v1.V1Register.StorageStatusOrBuilder> 
        getStorageStatusOrBuilderList() {
      return storageStatus_;
    }
    /**
     * <code>repeated .protocol_v1.StorageStatus StorageStatus = 132;</code>
     *
     * <pre>
     * 存储分区状态
     * </pre>
     */
    public int getStorageStatusCount() {
      return storageStatus_.size();
    }
    /**
     * <code>repeated .protocol_v1.StorageStatus StorageStatus = 132;</code>
     *
     * <pre>
     * 存储分区状态
     * </pre>
     */
    public protocol_v1.V1Register.StorageStatus getStorageStatus(int index) {
      return storageStatus_.get(index);
    }
    /**
     * <code>repeated .protocol_v1.StorageStatus StorageStatus = 132;</code>
     *
     * <pre>
     * 存储分区状态
     * </pre>
     */
    public protocol_v1.V1Register.StorageStatusOrBuilder getStorageStatusOrBuilder(
        int index) {
      return storageStatus_.get(index);
    }

    public static final int ENV_FIELD_NUMBER = 136;
    private protocol_v1.V1Env.Env env_;
    /**
     * <code>optional .protocol_v1.Env Env = 136;</code>
     *
     * <pre>
     * optional GPS GPS = 135;                     // 上传时采集定位信息(暂不实现)
     * </pre>
     */
    public boolean hasEnv() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional .protocol_v1.Env Env = 136;</code>
     *
     * <pre>
     * optional GPS GPS = 135;                     // 上传时采集定位信息(暂不实现)
     * </pre>
     */
    public protocol_v1.V1Env.Env getEnv() {
      return env_ == null ? protocol_v1.V1Env.Env.getDefaultInstance() : env_;
    }
    /**
     * <code>optional .protocol_v1.Env Env = 136;</code>
     *
     * <pre>
     * optional GPS GPS = 135;                     // 上传时采集定位信息(暂不实现)
     * </pre>
     */
    public protocol_v1.V1Env.EnvOrBuilder getEnvOrBuilder() {
      return env_ == null ? protocol_v1.V1Env.Env.getDefaultInstance() : env_;
    }

    public static final int CELLULAR_FIELD_NUMBER = 138;
    private protocol_v1.V1Cellular.Cellular cellular_;
    /**
     * <code>optional .protocol_v1.Cellular Cellular = 138;</code>
     *
     * <pre>
     * 上传时蜂窝网络信息
     * </pre>
     */
    public boolean hasCellular() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional .protocol_v1.Cellular Cellular = 138;</code>
     *
     * <pre>
     * 上传时蜂窝网络信息
     * </pre>
     */
    public protocol_v1.V1Cellular.Cellular getCellular() {
      return cellular_ == null ? protocol_v1.V1Cellular.Cellular.getDefaultInstance() : cellular_;
    }
    /**
     * <code>optional .protocol_v1.Cellular Cellular = 138;</code>
     *
     * <pre>
     * 上传时蜂窝网络信息
     * </pre>
     */
    public protocol_v1.V1Cellular.CellularOrBuilder getCellularOrBuilder() {
      return cellular_ == null ? protocol_v1.V1Cellular.Cellular.getDefaultInstance() : cellular_;
    }

    public static final int ALGORITHMVERSION_FIELD_NUMBER = 140;
    private java.util.List<protocol_v1.V1Algorithm.AlgorithmVersion> algorithmVersion_;
    /**
     * <code>repeated .protocol_v1.AlgorithmVersion AlgorithmVersion = 140;</code>
     *
     * <pre>
     * 支持的算法版本
     * </pre>
     */
    public java.util.List<protocol_v1.V1Algorithm.AlgorithmVersion> getAlgorithmVersionList() {
      return algorithmVersion_;
    }
    /**
     * <code>repeated .protocol_v1.AlgorithmVersion AlgorithmVersion = 140;</code>
     *
     * <pre>
     * 支持的算法版本
     * </pre>
     */
    public java.util.List<? extends protocol_v1.V1Algorithm.AlgorithmVersionOrBuilder> 
        getAlgorithmVersionOrBuilderList() {
      return algorithmVersion_;
    }
    /**
     * <code>repeated .protocol_v1.AlgorithmVersion AlgorithmVersion = 140;</code>
     *
     * <pre>
     * 支持的算法版本
     * </pre>
     */
    public int getAlgorithmVersionCount() {
      return algorithmVersion_.size();
    }
    /**
     * <code>repeated .protocol_v1.AlgorithmVersion AlgorithmVersion = 140;</code>
     *
     * <pre>
     * 支持的算法版本
     * </pre>
     */
    public protocol_v1.V1Algorithm.AlgorithmVersion getAlgorithmVersion(int index) {
      return algorithmVersion_.get(index);
    }
    /**
     * <code>repeated .protocol_v1.AlgorithmVersion AlgorithmVersion = 140;</code>
     *
     * <pre>
     * 支持的算法版本
     * </pre>
     */
    public protocol_v1.V1Algorithm.AlgorithmVersionOrBuilder getAlgorithmVersionOrBuilder(
        int index) {
      return algorithmVersion_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasIden()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIMSI()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getIden().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getStorageStatusCount(); i++) {
        if (!getStorageStatus(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasCellular()) {
        if (!getCellular().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getIden());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, iMSI_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, iMEI_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, mAC_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, deviceType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, hardwareVersion_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, firmwareVersion_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, status_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, batteryVoltage_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, batteryPower_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, signalStrength_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, bitErrorRate_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, radioAccessTechnology_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeUInt32(14, networkOperator_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 101, iCCID_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 102, modemFirmwareVersion_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeMessage(110, getSettingHash());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeMessage(111, getOEMHash());
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeMessage(112, getTriggerHash());
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeMessage(113, getAlgorithmHash());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(120, workMode_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeUInt32(121, timestamp_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeMessage(131, getGatewayStatus());
      }
      for (int i = 0; i < storageStatus_.size(); i++) {
        output.writeMessage(132, storageStatus_.get(i));
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeMessage(136, getEnv());
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeMessage(138, getCellular());
      }
      for (int i = 0; i < algorithmVersion_.size(); i++) {
        output.writeMessage(140, algorithmVersion_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getIden());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, iMSI_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, iMEI_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(4, mAC_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, deviceType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, hardwareVersion_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, firmwareVersion_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, status_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, batteryVoltage_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, batteryPower_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, signalStrength_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, bitErrorRate_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, radioAccessTechnology_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, networkOperator_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(101, iCCID_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(102, modemFirmwareVersion_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(110, getSettingHash());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(111, getOEMHash());
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(112, getTriggerHash());
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(113, getAlgorithmHash());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(120, workMode_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(121, timestamp_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(131, getGatewayStatus());
      }
      for (int i = 0; i < storageStatus_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(132, storageStatus_.get(i));
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(136, getEnv());
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(138, getCellular());
      }
      for (int i = 0; i < algorithmVersion_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(140, algorithmVersion_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static protocol_v1.V1Register.RegisterReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Register.RegisterReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Register.RegisterReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Register.RegisterReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Register.RegisterReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Register.RegisterReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Register.RegisterReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protocol_v1.V1Register.RegisterReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Register.RegisterReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Register.RegisterReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol_v1.V1Register.RegisterReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol_v1.RegisterReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol_v1.RegisterReq)
        protocol_v1.V1Register.RegisterReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol_v1.V1Register.internal_static_protocol_v1_RegisterReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol_v1.V1Register.internal_static_protocol_v1_RegisterReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol_v1.V1Register.RegisterReq.class, protocol_v1.V1Register.RegisterReq.Builder.class);
      }

      // Construct using protocol_v1.V1Register.RegisterReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getIdenFieldBuilder();
          getSettingHashFieldBuilder();
          getOEMHashFieldBuilder();
          getTriggerHashFieldBuilder();
          getAlgorithmHashFieldBuilder();
          getGatewayStatusFieldBuilder();
          getStorageStatusFieldBuilder();
          getEnvFieldBuilder();
          getCellularFieldBuilder();
          getAlgorithmVersionFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (idenBuilder_ == null) {
          iden_ = null;
        } else {
          idenBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        iMSI_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        iMEI_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        mAC_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        deviceType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        hardwareVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        firmwareVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        batteryVoltage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        batteryPower_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        signalStrength_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        bitErrorRate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        radioAccessTechnology_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        networkOperator_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        iCCID_ = "";
        bitField0_ = (bitField0_ & ~0x00004000);
        modemFirmwareVersion_ = "";
        bitField0_ = (bitField0_ & ~0x00008000);
        if (settingHashBuilder_ == null) {
          settingHash_ = null;
        } else {
          settingHashBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        if (oEMHashBuilder_ == null) {
          oEMHash_ = null;
        } else {
          oEMHashBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        if (triggerHashBuilder_ == null) {
          triggerHash_ = null;
        } else {
          triggerHashBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        if (algorithmHashBuilder_ == null) {
          algorithmHash_ = null;
        } else {
          algorithmHashBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00080000);
        workMode_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        timestamp_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        if (gatewayStatusBuilder_ == null) {
          gatewayStatus_ = null;
        } else {
          gatewayStatusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00400000);
        if (storageStatusBuilder_ == null) {
          storageStatus_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00800000);
        } else {
          storageStatusBuilder_.clear();
        }
        if (envBuilder_ == null) {
          env_ = null;
        } else {
          envBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x01000000);
        if (cellularBuilder_ == null) {
          cellular_ = null;
        } else {
          cellularBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x02000000);
        if (algorithmVersionBuilder_ == null) {
          algorithmVersion_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x04000000);
        } else {
          algorithmVersionBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol_v1.V1Register.internal_static_protocol_v1_RegisterReq_descriptor;
      }

      public protocol_v1.V1Register.RegisterReq getDefaultInstanceForType() {
        return protocol_v1.V1Register.RegisterReq.getDefaultInstance();
      }

      public protocol_v1.V1Register.RegisterReq build() {
        protocol_v1.V1Register.RegisterReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol_v1.V1Register.RegisterReq buildPartial() {
        protocol_v1.V1Register.RegisterReq result = new protocol_v1.V1Register.RegisterReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (idenBuilder_ == null) {
          result.iden_ = iden_;
        } else {
          result.iden_ = idenBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.iMSI_ = iMSI_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.iMEI_ = iMEI_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.mAC_ = mAC_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.deviceType_ = deviceType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.hardwareVersion_ = hardwareVersion_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.firmwareVersion_ = firmwareVersion_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.batteryVoltage_ = batteryVoltage_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.batteryPower_ = batteryPower_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.signalStrength_ = signalStrength_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.bitErrorRate_ = bitErrorRate_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.radioAccessTechnology_ = radioAccessTechnology_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.networkOperator_ = networkOperator_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.iCCID_ = iCCID_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.modemFirmwareVersion_ = modemFirmwareVersion_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        if (settingHashBuilder_ == null) {
          result.settingHash_ = settingHash_;
        } else {
          result.settingHash_ = settingHashBuilder_.build();
        }
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        if (oEMHashBuilder_ == null) {
          result.oEMHash_ = oEMHash_;
        } else {
          result.oEMHash_ = oEMHashBuilder_.build();
        }
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        if (triggerHashBuilder_ == null) {
          result.triggerHash_ = triggerHash_;
        } else {
          result.triggerHash_ = triggerHashBuilder_.build();
        }
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        if (algorithmHashBuilder_ == null) {
          result.algorithmHash_ = algorithmHash_;
        } else {
          result.algorithmHash_ = algorithmHashBuilder_.build();
        }
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.workMode_ = workMode_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        if (gatewayStatusBuilder_ == null) {
          result.gatewayStatus_ = gatewayStatus_;
        } else {
          result.gatewayStatus_ = gatewayStatusBuilder_.build();
        }
        if (storageStatusBuilder_ == null) {
          if (((bitField0_ & 0x00800000) == 0x00800000)) {
            storageStatus_ = java.util.Collections.unmodifiableList(storageStatus_);
            bitField0_ = (bitField0_ & ~0x00800000);
          }
          result.storageStatus_ = storageStatus_;
        } else {
          result.storageStatus_ = storageStatusBuilder_.build();
        }
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x00800000;
        }
        if (envBuilder_ == null) {
          result.env_ = env_;
        } else {
          result.env_ = envBuilder_.build();
        }
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x01000000;
        }
        if (cellularBuilder_ == null) {
          result.cellular_ = cellular_;
        } else {
          result.cellular_ = cellularBuilder_.build();
        }
        if (algorithmVersionBuilder_ == null) {
          if (((bitField0_ & 0x04000000) == 0x04000000)) {
            algorithmVersion_ = java.util.Collections.unmodifiableList(algorithmVersion_);
            bitField0_ = (bitField0_ & ~0x04000000);
          }
          result.algorithmVersion_ = algorithmVersion_;
        } else {
          result.algorithmVersion_ = algorithmVersionBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol_v1.V1Register.RegisterReq) {
          return mergeFrom((protocol_v1.V1Register.RegisterReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol_v1.V1Register.RegisterReq other) {
        if (other == protocol_v1.V1Register.RegisterReq.getDefaultInstance()) return this;
        if (other.hasIden()) {
          mergeIden(other.getIden());
        }
        if (other.hasIMSI()) {
          bitField0_ |= 0x00000002;
          iMSI_ = other.iMSI_;
          onChanged();
        }
        if (other.hasIMEI()) {
          bitField0_ |= 0x00000004;
          iMEI_ = other.iMEI_;
          onChanged();
        }
        if (other.hasMAC()) {
          bitField0_ |= 0x00000008;
          mAC_ = other.mAC_;
          onChanged();
        }
        if (other.hasDeviceType()) {
          setDeviceType(other.getDeviceType());
        }
        if (other.hasHardwareVersion()) {
          setHardwareVersion(other.getHardwareVersion());
        }
        if (other.hasFirmwareVersion()) {
          setFirmwareVersion(other.getFirmwareVersion());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasBatteryVoltage()) {
          setBatteryVoltage(other.getBatteryVoltage());
        }
        if (other.hasBatteryPower()) {
          setBatteryPower(other.getBatteryPower());
        }
        if (other.hasSignalStrength()) {
          setSignalStrength(other.getSignalStrength());
        }
        if (other.hasBitErrorRate()) {
          setBitErrorRate(other.getBitErrorRate());
        }
        if (other.hasRadioAccessTechnology()) {
          setRadioAccessTechnology(other.getRadioAccessTechnology());
        }
        if (other.hasNetworkOperator()) {
          setNetworkOperator(other.getNetworkOperator());
        }
        if (other.hasICCID()) {
          bitField0_ |= 0x00004000;
          iCCID_ = other.iCCID_;
          onChanged();
        }
        if (other.hasModemFirmwareVersion()) {
          bitField0_ |= 0x00008000;
          modemFirmwareVersion_ = other.modemFirmwareVersion_;
          onChanged();
        }
        if (other.hasSettingHash()) {
          mergeSettingHash(other.getSettingHash());
        }
        if (other.hasOEMHash()) {
          mergeOEMHash(other.getOEMHash());
        }
        if (other.hasTriggerHash()) {
          mergeTriggerHash(other.getTriggerHash());
        }
        if (other.hasAlgorithmHash()) {
          mergeAlgorithmHash(other.getAlgorithmHash());
        }
        if (other.hasWorkMode()) {
          setWorkMode(other.getWorkMode());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasGatewayStatus()) {
          mergeGatewayStatus(other.getGatewayStatus());
        }
        if (storageStatusBuilder_ == null) {
          if (!other.storageStatus_.isEmpty()) {
            if (storageStatus_.isEmpty()) {
              storageStatus_ = other.storageStatus_;
              bitField0_ = (bitField0_ & ~0x00800000);
            } else {
              ensureStorageStatusIsMutable();
              storageStatus_.addAll(other.storageStatus_);
            }
            onChanged();
          }
        } else {
          if (!other.storageStatus_.isEmpty()) {
            if (storageStatusBuilder_.isEmpty()) {
              storageStatusBuilder_.dispose();
              storageStatusBuilder_ = null;
              storageStatus_ = other.storageStatus_;
              bitField0_ = (bitField0_ & ~0x00800000);
              storageStatusBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getStorageStatusFieldBuilder() : null;
            } else {
              storageStatusBuilder_.addAllMessages(other.storageStatus_);
            }
          }
        }
        if (other.hasEnv()) {
          mergeEnv(other.getEnv());
        }
        if (other.hasCellular()) {
          mergeCellular(other.getCellular());
        }
        if (algorithmVersionBuilder_ == null) {
          if (!other.algorithmVersion_.isEmpty()) {
            if (algorithmVersion_.isEmpty()) {
              algorithmVersion_ = other.algorithmVersion_;
              bitField0_ = (bitField0_ & ~0x04000000);
            } else {
              ensureAlgorithmVersionIsMutable();
              algorithmVersion_.addAll(other.algorithmVersion_);
            }
            onChanged();
          }
        } else {
          if (!other.algorithmVersion_.isEmpty()) {
            if (algorithmVersionBuilder_.isEmpty()) {
              algorithmVersionBuilder_.dispose();
              algorithmVersionBuilder_ = null;
              algorithmVersion_ = other.algorithmVersion_;
              bitField0_ = (bitField0_ & ~0x04000000);
              algorithmVersionBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAlgorithmVersionFieldBuilder() : null;
            } else {
              algorithmVersionBuilder_.addAllMessages(other.algorithmVersion_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasIden()) {
          return false;
        }
        if (!hasIMSI()) {
          return false;
        }
        if (!getIden().isInitialized()) {
          return false;
        }
        for (int i = 0; i < getStorageStatusCount(); i++) {
          if (!getStorageStatus(i).isInitialized()) {
            return false;
          }
        }
        if (hasCellular()) {
          if (!getCellular().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol_v1.V1Register.RegisterReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol_v1.V1Register.RegisterReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private protocol_v1.V1IdentityMsg.IdentityMsg iden_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1IdentityMsg.IdentityMsg, protocol_v1.V1IdentityMsg.IdentityMsg.Builder, protocol_v1.V1IdentityMsg.IdentityMsgOrBuilder> idenBuilder_;
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public boolean hasIden() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public protocol_v1.V1IdentityMsg.IdentityMsg getIden() {
        if (idenBuilder_ == null) {
          return iden_ == null ? protocol_v1.V1IdentityMsg.IdentityMsg.getDefaultInstance() : iden_;
        } else {
          return idenBuilder_.getMessage();
        }
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public Builder setIden(protocol_v1.V1IdentityMsg.IdentityMsg value) {
        if (idenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          iden_ = value;
          onChanged();
        } else {
          idenBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public Builder setIden(
          protocol_v1.V1IdentityMsg.IdentityMsg.Builder builderForValue) {
        if (idenBuilder_ == null) {
          iden_ = builderForValue.build();
          onChanged();
        } else {
          idenBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public Builder mergeIden(protocol_v1.V1IdentityMsg.IdentityMsg value) {
        if (idenBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              iden_ != null &&
              iden_ != protocol_v1.V1IdentityMsg.IdentityMsg.getDefaultInstance()) {
            iden_ =
              protocol_v1.V1IdentityMsg.IdentityMsg.newBuilder(iden_).mergeFrom(value).buildPartial();
          } else {
            iden_ = value;
          }
          onChanged();
        } else {
          idenBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public Builder clearIden() {
        if (idenBuilder_ == null) {
          iden_ = null;
          onChanged();
        } else {
          idenBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public protocol_v1.V1IdentityMsg.IdentityMsg.Builder getIdenBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getIdenFieldBuilder().getBuilder();
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public protocol_v1.V1IdentityMsg.IdentityMsgOrBuilder getIdenOrBuilder() {
        if (idenBuilder_ != null) {
          return idenBuilder_.getMessageOrBuilder();
        } else {
          return iden_ == null ?
              protocol_v1.V1IdentityMsg.IdentityMsg.getDefaultInstance() : iden_;
        }
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1IdentityMsg.IdentityMsg, protocol_v1.V1IdentityMsg.IdentityMsg.Builder, protocol_v1.V1IdentityMsg.IdentityMsgOrBuilder> 
          getIdenFieldBuilder() {
        if (idenBuilder_ == null) {
          idenBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1IdentityMsg.IdentityMsg, protocol_v1.V1IdentityMsg.IdentityMsg.Builder, protocol_v1.V1IdentityMsg.IdentityMsgOrBuilder>(
                  getIden(),
                  getParentForChildren(),
                  isClean());
          iden_ = null;
        }
        return idenBuilder_;
      }

      private java.lang.Object iMSI_ = "";
      /**
       * <code>required string IMSI = 2;</code>
       */
      public boolean hasIMSI() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string IMSI = 2;</code>
       */
      public java.lang.String getIMSI() {
        java.lang.Object ref = iMSI_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            iMSI_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string IMSI = 2;</code>
       */
      public com.google.protobuf.ByteString
          getIMSIBytes() {
        java.lang.Object ref = iMSI_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          iMSI_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string IMSI = 2;</code>
       */
      public Builder setIMSI(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        iMSI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string IMSI = 2;</code>
       */
      public Builder clearIMSI() {
        bitField0_ = (bitField0_ & ~0x00000002);
        iMSI_ = getDefaultInstance().getIMSI();
        onChanged();
        return this;
      }
      /**
       * <code>required string IMSI = 2;</code>
       */
      public Builder setIMSIBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        iMSI_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object iMEI_ = "";
      /**
       * <code>optional string IMEI = 3 [default = ""];</code>
       */
      public boolean hasIMEI() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string IMEI = 3 [default = ""];</code>
       */
      public java.lang.String getIMEI() {
        java.lang.Object ref = iMEI_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            iMEI_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string IMEI = 3 [default = ""];</code>
       */
      public com.google.protobuf.ByteString
          getIMEIBytes() {
        java.lang.Object ref = iMEI_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          iMEI_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string IMEI = 3 [default = ""];</code>
       */
      public Builder setIMEI(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        iMEI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string IMEI = 3 [default = ""];</code>
       */
      public Builder clearIMEI() {
        bitField0_ = (bitField0_ & ~0x00000004);
        iMEI_ = getDefaultInstance().getIMEI();
        onChanged();
        return this;
      }
      /**
       * <code>optional string IMEI = 3 [default = ""];</code>
       */
      public Builder setIMEIBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        iMEI_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object mAC_ = "";
      /**
       * <code>optional string MAC = 4 [default = ""];</code>
       *
       * <pre>
       * 蓝牙MAC地址
       * </pre>
       */
      public boolean hasMAC() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string MAC = 4 [default = ""];</code>
       *
       * <pre>
       * 蓝牙MAC地址
       * </pre>
       */
      public java.lang.String getMAC() {
        java.lang.Object ref = mAC_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            mAC_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MAC = 4 [default = ""];</code>
       *
       * <pre>
       * 蓝牙MAC地址
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMACBytes() {
        java.lang.Object ref = mAC_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mAC_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MAC = 4 [default = ""];</code>
       *
       * <pre>
       * 蓝牙MAC地址
       * </pre>
       */
      public Builder setMAC(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        mAC_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MAC = 4 [default = ""];</code>
       *
       * <pre>
       * 蓝牙MAC地址
       * </pre>
       */
      public Builder clearMAC() {
        bitField0_ = (bitField0_ & ~0x00000008);
        mAC_ = getDefaultInstance().getMAC();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MAC = 4 [default = ""];</code>
       *
       * <pre>
       * 蓝牙MAC地址
       * </pre>
       */
      public Builder setMACBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        mAC_ = value;
        onChanged();
        return this;
      }

      private int deviceType_ ;
      /**
       * <code>optional int32 DeviceType = 5 [default = 0];</code>
       *
       * <pre>
       * 设备类型
       * </pre>
       */
      public boolean hasDeviceType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 DeviceType = 5 [default = 0];</code>
       *
       * <pre>
       * 设备类型
       * </pre>
       */
      public int getDeviceType() {
        return deviceType_;
      }
      /**
       * <code>optional int32 DeviceType = 5 [default = 0];</code>
       *
       * <pre>
       * 设备类型
       * </pre>
       */
      public Builder setDeviceType(int value) {
        bitField0_ |= 0x00000010;
        deviceType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 DeviceType = 5 [default = 0];</code>
       *
       * <pre>
       * 设备类型
       * </pre>
       */
      public Builder clearDeviceType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        deviceType_ = 0;
        onChanged();
        return this;
      }

      private int hardwareVersion_ ;
      /**
       * <code>optional int32 HardwareVersion = 6 [default = 0];</code>
       *
       * <pre>
       * 硬件版本
       * </pre>
       */
      public boolean hasHardwareVersion() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 HardwareVersion = 6 [default = 0];</code>
       *
       * <pre>
       * 硬件版本
       * </pre>
       */
      public int getHardwareVersion() {
        return hardwareVersion_;
      }
      /**
       * <code>optional int32 HardwareVersion = 6 [default = 0];</code>
       *
       * <pre>
       * 硬件版本
       * </pre>
       */
      public Builder setHardwareVersion(int value) {
        bitField0_ |= 0x00000020;
        hardwareVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 HardwareVersion = 6 [default = 0];</code>
       *
       * <pre>
       * 硬件版本
       * </pre>
       */
      public Builder clearHardwareVersion() {
        bitField0_ = (bitField0_ & ~0x00000020);
        hardwareVersion_ = 0;
        onChanged();
        return this;
      }

      private int firmwareVersion_ ;
      /**
       * <code>optional int32 FirmwareVersion = 7 [default = 0];</code>
       *
       * <pre>
       * 固件版本
       * </pre>
       */
      public boolean hasFirmwareVersion() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 FirmwareVersion = 7 [default = 0];</code>
       *
       * <pre>
       * 固件版本
       * </pre>
       */
      public int getFirmwareVersion() {
        return firmwareVersion_;
      }
      /**
       * <code>optional int32 FirmwareVersion = 7 [default = 0];</code>
       *
       * <pre>
       * 固件版本
       * </pre>
       */
      public Builder setFirmwareVersion(int value) {
        bitField0_ |= 0x00000040;
        firmwareVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 FirmwareVersion = 7 [default = 0];</code>
       *
       * <pre>
       * 固件版本
       * </pre>
       */
      public Builder clearFirmwareVersion() {
        bitField0_ = (bitField0_ & ~0x00000040);
        firmwareVersion_ = 0;
        onChanged();
        return this;
      }

      private int status_ ;
      /**
       * <code>optional int32 Status = 8 [default = 0];</code>
       *
       * <pre>
       * 自检状态: 0 - 无异常
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 Status = 8 [default = 0];</code>
       *
       * <pre>
       * 自检状态: 0 - 无异常
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional int32 Status = 8 [default = 0];</code>
       *
       * <pre>
       * 自检状态: 0 - 无异常
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000080;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Status = 8 [default = 0];</code>
       *
       * <pre>
       * 自检状态: 0 - 无异常
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000080);
        status_ = 0;
        onChanged();
        return this;
      }

      private int batteryVoltage_ ;
      /**
       * <code>optional int32 BatteryVoltage = 9 [default = 0];</code>
       *
       * <pre>
       * 电池电压: 毫伏 (废弃，放在Env子对象里)
       * </pre>
       */
      public boolean hasBatteryVoltage() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 BatteryVoltage = 9 [default = 0];</code>
       *
       * <pre>
       * 电池电压: 毫伏 (废弃，放在Env子对象里)
       * </pre>
       */
      public int getBatteryVoltage() {
        return batteryVoltage_;
      }
      /**
       * <code>optional int32 BatteryVoltage = 9 [default = 0];</code>
       *
       * <pre>
       * 电池电压: 毫伏 (废弃，放在Env子对象里)
       * </pre>
       */
      public Builder setBatteryVoltage(int value) {
        bitField0_ |= 0x00000100;
        batteryVoltage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 BatteryVoltage = 9 [default = 0];</code>
       *
       * <pre>
       * 电池电压: 毫伏 (废弃，放在Env子对象里)
       * </pre>
       */
      public Builder clearBatteryVoltage() {
        bitField0_ = (bitField0_ & ~0x00000100);
        batteryVoltage_ = 0;
        onChanged();
        return this;
      }

      private int batteryPower_ ;
      /**
       * <code>optional int32 BatteryPower = 10 [default = 0];</code>
       *
       * <pre>
       * 电池电量: 百分比 (废弃，放在Env子对象里)
       * </pre>
       */
      public boolean hasBatteryPower() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 BatteryPower = 10 [default = 0];</code>
       *
       * <pre>
       * 电池电量: 百分比 (废弃，放在Env子对象里)
       * </pre>
       */
      public int getBatteryPower() {
        return batteryPower_;
      }
      /**
       * <code>optional int32 BatteryPower = 10 [default = 0];</code>
       *
       * <pre>
       * 电池电量: 百分比 (废弃，放在Env子对象里)
       * </pre>
       */
      public Builder setBatteryPower(int value) {
        bitField0_ |= 0x00000200;
        batteryPower_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 BatteryPower = 10 [default = 0];</code>
       *
       * <pre>
       * 电池电量: 百分比 (废弃，放在Env子对象里)
       * </pre>
       */
      public Builder clearBatteryPower() {
        bitField0_ = (bitField0_ & ~0x00000200);
        batteryPower_ = 0;
        onChanged();
        return this;
      }

      private int signalStrength_ ;
      /**
       * <code>optional int32 SignalStrength = 11 [default = 0];</code>
       *
       * <pre>
       * 信号强度 (废弃，放在Cellular子对象里)
       * </pre>
       */
      public boolean hasSignalStrength() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 SignalStrength = 11 [default = 0];</code>
       *
       * <pre>
       * 信号强度 (废弃，放在Cellular子对象里)
       * </pre>
       */
      public int getSignalStrength() {
        return signalStrength_;
      }
      /**
       * <code>optional int32 SignalStrength = 11 [default = 0];</code>
       *
       * <pre>
       * 信号强度 (废弃，放在Cellular子对象里)
       * </pre>
       */
      public Builder setSignalStrength(int value) {
        bitField0_ |= 0x00000400;
        signalStrength_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 SignalStrength = 11 [default = 0];</code>
       *
       * <pre>
       * 信号强度 (废弃，放在Cellular子对象里)
       * </pre>
       */
      public Builder clearSignalStrength() {
        bitField0_ = (bitField0_ & ~0x00000400);
        signalStrength_ = 0;
        onChanged();
        return this;
      }

      private int bitErrorRate_ ;
      /**
       * <code>optional int32 BitErrorRate = 12 [default = 0];</code>
       *
       * <pre>
       * 误码率  (废弃，放在Cellular子对象里)
       * </pre>
       */
      public boolean hasBitErrorRate() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 BitErrorRate = 12 [default = 0];</code>
       *
       * <pre>
       * 误码率  (废弃，放在Cellular子对象里)
       * </pre>
       */
      public int getBitErrorRate() {
        return bitErrorRate_;
      }
      /**
       * <code>optional int32 BitErrorRate = 12 [default = 0];</code>
       *
       * <pre>
       * 误码率  (废弃，放在Cellular子对象里)
       * </pre>
       */
      public Builder setBitErrorRate(int value) {
        bitField0_ |= 0x00000800;
        bitErrorRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 BitErrorRate = 12 [default = 0];</code>
       *
       * <pre>
       * 误码率  (废弃，放在Cellular子对象里)
       * </pre>
       */
      public Builder clearBitErrorRate() {
        bitField0_ = (bitField0_ & ~0x00000800);
        bitErrorRate_ = 0;
        onChanged();
        return this;
      }

      private int radioAccessTechnology_ ;
      /**
       * <code>optional int32 RadioAccessTechnology = 13 [default = 0];</code>
       *
       * <pre>
       * 网络类型 (废弃，放在Cellular子对象里)
       * </pre>
       */
      public boolean hasRadioAccessTechnology() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 RadioAccessTechnology = 13 [default = 0];</code>
       *
       * <pre>
       * 网络类型 (废弃，放在Cellular子对象里)
       * </pre>
       */
      public int getRadioAccessTechnology() {
        return radioAccessTechnology_;
      }
      /**
       * <code>optional int32 RadioAccessTechnology = 13 [default = 0];</code>
       *
       * <pre>
       * 网络类型 (废弃，放在Cellular子对象里)
       * </pre>
       */
      public Builder setRadioAccessTechnology(int value) {
        bitField0_ |= 0x00001000;
        radioAccessTechnology_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 RadioAccessTechnology = 13 [default = 0];</code>
       *
       * <pre>
       * 网络类型 (废弃，放在Cellular子对象里)
       * </pre>
       */
      public Builder clearRadioAccessTechnology() {
        bitField0_ = (bitField0_ & ~0x00001000);
        radioAccessTechnology_ = 0;
        onChanged();
        return this;
      }

      private int networkOperator_ ;
      /**
       * <code>optional uint32 NetworkOperator = 14 [default = 0];</code>
       *
       * <pre>
       * 运营商代码 (废弃，放在Cellular子对象里)
       * </pre>
       */
      public boolean hasNetworkOperator() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint32 NetworkOperator = 14 [default = 0];</code>
       *
       * <pre>
       * 运营商代码 (废弃，放在Cellular子对象里)
       * </pre>
       */
      public int getNetworkOperator() {
        return networkOperator_;
      }
      /**
       * <code>optional uint32 NetworkOperator = 14 [default = 0];</code>
       *
       * <pre>
       * 运营商代码 (废弃，放在Cellular子对象里)
       * </pre>
       */
      public Builder setNetworkOperator(int value) {
        bitField0_ |= 0x00002000;
        networkOperator_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 NetworkOperator = 14 [default = 0];</code>
       *
       * <pre>
       * 运营商代码 (废弃，放在Cellular子对象里)
       * </pre>
       */
      public Builder clearNetworkOperator() {
        bitField0_ = (bitField0_ & ~0x00002000);
        networkOperator_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object iCCID_ = "";
      /**
       * <code>optional string ICCID = 101 [default = ""];</code>
       */
      public boolean hasICCID() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional string ICCID = 101 [default = ""];</code>
       */
      public java.lang.String getICCID() {
        java.lang.Object ref = iCCID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            iCCID_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ICCID = 101 [default = ""];</code>
       */
      public com.google.protobuf.ByteString
          getICCIDBytes() {
        java.lang.Object ref = iCCID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          iCCID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ICCID = 101 [default = ""];</code>
       */
      public Builder setICCID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        iCCID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ICCID = 101 [default = ""];</code>
       */
      public Builder clearICCID() {
        bitField0_ = (bitField0_ & ~0x00004000);
        iCCID_ = getDefaultInstance().getICCID();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ICCID = 101 [default = ""];</code>
       */
      public Builder setICCIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        iCCID_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object modemFirmwareVersion_ = "";
      /**
       * <code>optional string ModemFirmwareVersion = 102 [default = ""];</code>
       *
       * <pre>
       * 蜂窝模块固件版本
       * </pre>
       */
      public boolean hasModemFirmwareVersion() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional string ModemFirmwareVersion = 102 [default = ""];</code>
       *
       * <pre>
       * 蜂窝模块固件版本
       * </pre>
       */
      public java.lang.String getModemFirmwareVersion() {
        java.lang.Object ref = modemFirmwareVersion_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            modemFirmwareVersion_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ModemFirmwareVersion = 102 [default = ""];</code>
       *
       * <pre>
       * 蜂窝模块固件版本
       * </pre>
       */
      public com.google.protobuf.ByteString
          getModemFirmwareVersionBytes() {
        java.lang.Object ref = modemFirmwareVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          modemFirmwareVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ModemFirmwareVersion = 102 [default = ""];</code>
       *
       * <pre>
       * 蜂窝模块固件版本
       * </pre>
       */
      public Builder setModemFirmwareVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        modemFirmwareVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ModemFirmwareVersion = 102 [default = ""];</code>
       *
       * <pre>
       * 蜂窝模块固件版本
       * </pre>
       */
      public Builder clearModemFirmwareVersion() {
        bitField0_ = (bitField0_ & ~0x00008000);
        modemFirmwareVersion_ = getDefaultInstance().getModemFirmwareVersion();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ModemFirmwareVersion = 102 [default = ""];</code>
       *
       * <pre>
       * 蜂窝模块固件版本
       * </pre>
       */
      public Builder setModemFirmwareVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        modemFirmwareVersion_ = value;
        onChanged();
        return this;
      }

      private protocol_v1.V1TimeHash.Hash settingHash_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1TimeHash.Hash, protocol_v1.V1TimeHash.Hash.Builder, protocol_v1.V1TimeHash.HashOrBuilder> settingHashBuilder_;
      /**
       * <code>optional .protocol_v1.Hash SettingHash = 110;</code>
       *
       * <pre>
       * 各个配置hash
       * </pre>
       */
      public boolean hasSettingHash() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional .protocol_v1.Hash SettingHash = 110;</code>
       *
       * <pre>
       * 各个配置hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.Hash getSettingHash() {
        if (settingHashBuilder_ == null) {
          return settingHash_ == null ? protocol_v1.V1TimeHash.Hash.getDefaultInstance() : settingHash_;
        } else {
          return settingHashBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.Hash SettingHash = 110;</code>
       *
       * <pre>
       * 各个配置hash
       * </pre>
       */
      public Builder setSettingHash(protocol_v1.V1TimeHash.Hash value) {
        if (settingHashBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          settingHash_ = value;
          onChanged();
        } else {
          settingHashBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Hash SettingHash = 110;</code>
       *
       * <pre>
       * 各个配置hash
       * </pre>
       */
      public Builder setSettingHash(
          protocol_v1.V1TimeHash.Hash.Builder builderForValue) {
        if (settingHashBuilder_ == null) {
          settingHash_ = builderForValue.build();
          onChanged();
        } else {
          settingHashBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Hash SettingHash = 110;</code>
       *
       * <pre>
       * 各个配置hash
       * </pre>
       */
      public Builder mergeSettingHash(protocol_v1.V1TimeHash.Hash value) {
        if (settingHashBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000) &&
              settingHash_ != null &&
              settingHash_ != protocol_v1.V1TimeHash.Hash.getDefaultInstance()) {
            settingHash_ =
              protocol_v1.V1TimeHash.Hash.newBuilder(settingHash_).mergeFrom(value).buildPartial();
          } else {
            settingHash_ = value;
          }
          onChanged();
        } else {
          settingHashBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Hash SettingHash = 110;</code>
       *
       * <pre>
       * 各个配置hash
       * </pre>
       */
      public Builder clearSettingHash() {
        if (settingHashBuilder_ == null) {
          settingHash_ = null;
          onChanged();
        } else {
          settingHashBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }
      /**
       * <code>optional .protocol_v1.Hash SettingHash = 110;</code>
       *
       * <pre>
       * 各个配置hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.Hash.Builder getSettingHashBuilder() {
        bitField0_ |= 0x00010000;
        onChanged();
        return getSettingHashFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.Hash SettingHash = 110;</code>
       *
       * <pre>
       * 各个配置hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.HashOrBuilder getSettingHashOrBuilder() {
        if (settingHashBuilder_ != null) {
          return settingHashBuilder_.getMessageOrBuilder();
        } else {
          return settingHash_ == null ?
              protocol_v1.V1TimeHash.Hash.getDefaultInstance() : settingHash_;
        }
      }
      /**
       * <code>optional .protocol_v1.Hash SettingHash = 110;</code>
       *
       * <pre>
       * 各个配置hash
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1TimeHash.Hash, protocol_v1.V1TimeHash.Hash.Builder, protocol_v1.V1TimeHash.HashOrBuilder> 
          getSettingHashFieldBuilder() {
        if (settingHashBuilder_ == null) {
          settingHashBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1TimeHash.Hash, protocol_v1.V1TimeHash.Hash.Builder, protocol_v1.V1TimeHash.HashOrBuilder>(
                  getSettingHash(),
                  getParentForChildren(),
                  isClean());
          settingHash_ = null;
        }
        return settingHashBuilder_;
      }

      private protocol_v1.V1TimeHash.HashLite oEMHash_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1TimeHash.HashLite, protocol_v1.V1TimeHash.HashLite.Builder, protocol_v1.V1TimeHash.HashLiteOrBuilder> oEMHashBuilder_;
      /**
       * <code>optional .protocol_v1.HashLite OEMHash = 111;</code>
       *
       * <pre>
       * OEM信息hash
       * </pre>
       */
      public boolean hasOEMHash() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional .protocol_v1.HashLite OEMHash = 111;</code>
       *
       * <pre>
       * OEM信息hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.HashLite getOEMHash() {
        if (oEMHashBuilder_ == null) {
          return oEMHash_ == null ? protocol_v1.V1TimeHash.HashLite.getDefaultInstance() : oEMHash_;
        } else {
          return oEMHashBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.HashLite OEMHash = 111;</code>
       *
       * <pre>
       * OEM信息hash
       * </pre>
       */
      public Builder setOEMHash(protocol_v1.V1TimeHash.HashLite value) {
        if (oEMHashBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          oEMHash_ = value;
          onChanged();
        } else {
          oEMHashBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.HashLite OEMHash = 111;</code>
       *
       * <pre>
       * OEM信息hash
       * </pre>
       */
      public Builder setOEMHash(
          protocol_v1.V1TimeHash.HashLite.Builder builderForValue) {
        if (oEMHashBuilder_ == null) {
          oEMHash_ = builderForValue.build();
          onChanged();
        } else {
          oEMHashBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.HashLite OEMHash = 111;</code>
       *
       * <pre>
       * OEM信息hash
       * </pre>
       */
      public Builder mergeOEMHash(protocol_v1.V1TimeHash.HashLite value) {
        if (oEMHashBuilder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000) &&
              oEMHash_ != null &&
              oEMHash_ != protocol_v1.V1TimeHash.HashLite.getDefaultInstance()) {
            oEMHash_ =
              protocol_v1.V1TimeHash.HashLite.newBuilder(oEMHash_).mergeFrom(value).buildPartial();
          } else {
            oEMHash_ = value;
          }
          onChanged();
        } else {
          oEMHashBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.HashLite OEMHash = 111;</code>
       *
       * <pre>
       * OEM信息hash
       * </pre>
       */
      public Builder clearOEMHash() {
        if (oEMHashBuilder_ == null) {
          oEMHash_ = null;
          onChanged();
        } else {
          oEMHashBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }
      /**
       * <code>optional .protocol_v1.HashLite OEMHash = 111;</code>
       *
       * <pre>
       * OEM信息hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.HashLite.Builder getOEMHashBuilder() {
        bitField0_ |= 0x00020000;
        onChanged();
        return getOEMHashFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.HashLite OEMHash = 111;</code>
       *
       * <pre>
       * OEM信息hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.HashLiteOrBuilder getOEMHashOrBuilder() {
        if (oEMHashBuilder_ != null) {
          return oEMHashBuilder_.getMessageOrBuilder();
        } else {
          return oEMHash_ == null ?
              protocol_v1.V1TimeHash.HashLite.getDefaultInstance() : oEMHash_;
        }
      }
      /**
       * <code>optional .protocol_v1.HashLite OEMHash = 111;</code>
       *
       * <pre>
       * OEM信息hash
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1TimeHash.HashLite, protocol_v1.V1TimeHash.HashLite.Builder, protocol_v1.V1TimeHash.HashLiteOrBuilder> 
          getOEMHashFieldBuilder() {
        if (oEMHashBuilder_ == null) {
          oEMHashBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1TimeHash.HashLite, protocol_v1.V1TimeHash.HashLite.Builder, protocol_v1.V1TimeHash.HashLiteOrBuilder>(
                  getOEMHash(),
                  getParentForChildren(),
                  isClean());
          oEMHash_ = null;
        }
        return oEMHashBuilder_;
      }

      private protocol_v1.V1TimeHash.HashLite triggerHash_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1TimeHash.HashLite, protocol_v1.V1TimeHash.HashLite.Builder, protocol_v1.V1TimeHash.HashLiteOrBuilder> triggerHashBuilder_;
      /**
       * <code>optional .protocol_v1.HashLite TriggerHash = 112;</code>
       *
       * <pre>
       * 触发器hash
       * </pre>
       */
      public boolean hasTriggerHash() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional .protocol_v1.HashLite TriggerHash = 112;</code>
       *
       * <pre>
       * 触发器hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.HashLite getTriggerHash() {
        if (triggerHashBuilder_ == null) {
          return triggerHash_ == null ? protocol_v1.V1TimeHash.HashLite.getDefaultInstance() : triggerHash_;
        } else {
          return triggerHashBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.HashLite TriggerHash = 112;</code>
       *
       * <pre>
       * 触发器hash
       * </pre>
       */
      public Builder setTriggerHash(protocol_v1.V1TimeHash.HashLite value) {
        if (triggerHashBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          triggerHash_ = value;
          onChanged();
        } else {
          triggerHashBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.HashLite TriggerHash = 112;</code>
       *
       * <pre>
       * 触发器hash
       * </pre>
       */
      public Builder setTriggerHash(
          protocol_v1.V1TimeHash.HashLite.Builder builderForValue) {
        if (triggerHashBuilder_ == null) {
          triggerHash_ = builderForValue.build();
          onChanged();
        } else {
          triggerHashBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.HashLite TriggerHash = 112;</code>
       *
       * <pre>
       * 触发器hash
       * </pre>
       */
      public Builder mergeTriggerHash(protocol_v1.V1TimeHash.HashLite value) {
        if (triggerHashBuilder_ == null) {
          if (((bitField0_ & 0x00040000) == 0x00040000) &&
              triggerHash_ != null &&
              triggerHash_ != protocol_v1.V1TimeHash.HashLite.getDefaultInstance()) {
            triggerHash_ =
              protocol_v1.V1TimeHash.HashLite.newBuilder(triggerHash_).mergeFrom(value).buildPartial();
          } else {
            triggerHash_ = value;
          }
          onChanged();
        } else {
          triggerHashBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.HashLite TriggerHash = 112;</code>
       *
       * <pre>
       * 触发器hash
       * </pre>
       */
      public Builder clearTriggerHash() {
        if (triggerHashBuilder_ == null) {
          triggerHash_ = null;
          onChanged();
        } else {
          triggerHashBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }
      /**
       * <code>optional .protocol_v1.HashLite TriggerHash = 112;</code>
       *
       * <pre>
       * 触发器hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.HashLite.Builder getTriggerHashBuilder() {
        bitField0_ |= 0x00040000;
        onChanged();
        return getTriggerHashFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.HashLite TriggerHash = 112;</code>
       *
       * <pre>
       * 触发器hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.HashLiteOrBuilder getTriggerHashOrBuilder() {
        if (triggerHashBuilder_ != null) {
          return triggerHashBuilder_.getMessageOrBuilder();
        } else {
          return triggerHash_ == null ?
              protocol_v1.V1TimeHash.HashLite.getDefaultInstance() : triggerHash_;
        }
      }
      /**
       * <code>optional .protocol_v1.HashLite TriggerHash = 112;</code>
       *
       * <pre>
       * 触发器hash
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1TimeHash.HashLite, protocol_v1.V1TimeHash.HashLite.Builder, protocol_v1.V1TimeHash.HashLiteOrBuilder> 
          getTriggerHashFieldBuilder() {
        if (triggerHashBuilder_ == null) {
          triggerHashBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1TimeHash.HashLite, protocol_v1.V1TimeHash.HashLite.Builder, protocol_v1.V1TimeHash.HashLiteOrBuilder>(
                  getTriggerHash(),
                  getParentForChildren(),
                  isClean());
          triggerHash_ = null;
        }
        return triggerHashBuilder_;
      }

      private protocol_v1.V1TimeHash.HashLite algorithmHash_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1TimeHash.HashLite, protocol_v1.V1TimeHash.HashLite.Builder, protocol_v1.V1TimeHash.HashLiteOrBuilder> algorithmHashBuilder_;
      /**
       * <code>optional .protocol_v1.HashLite AlgorithmHash = 113;</code>
       *
       * <pre>
       * 算法配置hash
       * </pre>
       */
      public boolean hasAlgorithmHash() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional .protocol_v1.HashLite AlgorithmHash = 113;</code>
       *
       * <pre>
       * 算法配置hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.HashLite getAlgorithmHash() {
        if (algorithmHashBuilder_ == null) {
          return algorithmHash_ == null ? protocol_v1.V1TimeHash.HashLite.getDefaultInstance() : algorithmHash_;
        } else {
          return algorithmHashBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.HashLite AlgorithmHash = 113;</code>
       *
       * <pre>
       * 算法配置hash
       * </pre>
       */
      public Builder setAlgorithmHash(protocol_v1.V1TimeHash.HashLite value) {
        if (algorithmHashBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          algorithmHash_ = value;
          onChanged();
        } else {
          algorithmHashBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.HashLite AlgorithmHash = 113;</code>
       *
       * <pre>
       * 算法配置hash
       * </pre>
       */
      public Builder setAlgorithmHash(
          protocol_v1.V1TimeHash.HashLite.Builder builderForValue) {
        if (algorithmHashBuilder_ == null) {
          algorithmHash_ = builderForValue.build();
          onChanged();
        } else {
          algorithmHashBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.HashLite AlgorithmHash = 113;</code>
       *
       * <pre>
       * 算法配置hash
       * </pre>
       */
      public Builder mergeAlgorithmHash(protocol_v1.V1TimeHash.HashLite value) {
        if (algorithmHashBuilder_ == null) {
          if (((bitField0_ & 0x00080000) == 0x00080000) &&
              algorithmHash_ != null &&
              algorithmHash_ != protocol_v1.V1TimeHash.HashLite.getDefaultInstance()) {
            algorithmHash_ =
              protocol_v1.V1TimeHash.HashLite.newBuilder(algorithmHash_).mergeFrom(value).buildPartial();
          } else {
            algorithmHash_ = value;
          }
          onChanged();
        } else {
          algorithmHashBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.HashLite AlgorithmHash = 113;</code>
       *
       * <pre>
       * 算法配置hash
       * </pre>
       */
      public Builder clearAlgorithmHash() {
        if (algorithmHashBuilder_ == null) {
          algorithmHash_ = null;
          onChanged();
        } else {
          algorithmHashBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00080000);
        return this;
      }
      /**
       * <code>optional .protocol_v1.HashLite AlgorithmHash = 113;</code>
       *
       * <pre>
       * 算法配置hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.HashLite.Builder getAlgorithmHashBuilder() {
        bitField0_ |= 0x00080000;
        onChanged();
        return getAlgorithmHashFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.HashLite AlgorithmHash = 113;</code>
       *
       * <pre>
       * 算法配置hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.HashLiteOrBuilder getAlgorithmHashOrBuilder() {
        if (algorithmHashBuilder_ != null) {
          return algorithmHashBuilder_.getMessageOrBuilder();
        } else {
          return algorithmHash_ == null ?
              protocol_v1.V1TimeHash.HashLite.getDefaultInstance() : algorithmHash_;
        }
      }
      /**
       * <code>optional .protocol_v1.HashLite AlgorithmHash = 113;</code>
       *
       * <pre>
       * 算法配置hash
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1TimeHash.HashLite, protocol_v1.V1TimeHash.HashLite.Builder, protocol_v1.V1TimeHash.HashLiteOrBuilder> 
          getAlgorithmHashFieldBuilder() {
        if (algorithmHashBuilder_ == null) {
          algorithmHashBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1TimeHash.HashLite, protocol_v1.V1TimeHash.HashLite.Builder, protocol_v1.V1TimeHash.HashLiteOrBuilder>(
                  getAlgorithmHash(),
                  getParentForChildren(),
                  isClean());
          algorithmHash_ = null;
        }
        return algorithmHashBuilder_;
      }

      private int workMode_ ;
      /**
       * <code>optional int32 WorkMode = 120 [default = 0];</code>
       *
       * <pre>
       * 设备当前运行状态, 0:未知，1:保留, 2:关机（原库存）, 3:开机, 4:休眠（原关机, 废弃）
       * </pre>
       */
      public boolean hasWorkMode() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int32 WorkMode = 120 [default = 0];</code>
       *
       * <pre>
       * 设备当前运行状态, 0:未知，1:保留, 2:关机（原库存）, 3:开机, 4:休眠（原关机, 废弃）
       * </pre>
       */
      public int getWorkMode() {
        return workMode_;
      }
      /**
       * <code>optional int32 WorkMode = 120 [default = 0];</code>
       *
       * <pre>
       * 设备当前运行状态, 0:未知，1:保留, 2:关机（原库存）, 3:开机, 4:休眠（原关机, 废弃）
       * </pre>
       */
      public Builder setWorkMode(int value) {
        bitField0_ |= 0x00100000;
        workMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 WorkMode = 120 [default = 0];</code>
       *
       * <pre>
       * 设备当前运行状态, 0:未知，1:保留, 2:关机（原库存）, 3:开机, 4:休眠（原关机, 废弃）
       * </pre>
       */
      public Builder clearWorkMode() {
        bitField0_ = (bitField0_ & ~0x00100000);
        workMode_ = 0;
        onChanged();
        return this;
      }

      private int timestamp_ ;
      /**
       * <code>optional uint32 Timestamp = 121 [default = 0];</code>
       *
       * <pre>
       * 开始通信的时间
       * </pre>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional uint32 Timestamp = 121 [default = 0];</code>
       *
       * <pre>
       * 开始通信的时间
       * </pre>
       */
      public int getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional uint32 Timestamp = 121 [default = 0];</code>
       *
       * <pre>
       * 开始通信的时间
       * </pre>
       */
      public Builder setTimestamp(int value) {
        bitField0_ |= 0x00200000;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 Timestamp = 121 [default = 0];</code>
       *
       * <pre>
       * 开始通信的时间
       * </pre>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00200000);
        timestamp_ = 0;
        onChanged();
        return this;
      }

      private protocol_v1.V1Register.GatewayStatus gatewayStatus_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Register.GatewayStatus, protocol_v1.V1Register.GatewayStatus.Builder, protocol_v1.V1Register.GatewayStatusOrBuilder> gatewayStatusBuilder_;
      /**
       * <code>optional .protocol_v1.GatewayStatus GatewayStatus = 131;</code>
       *
       * <pre>
       * 网关状态(废弃)
       * </pre>
       */
      public boolean hasGatewayStatus() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional .protocol_v1.GatewayStatus GatewayStatus = 131;</code>
       *
       * <pre>
       * 网关状态(废弃)
       * </pre>
       */
      public protocol_v1.V1Register.GatewayStatus getGatewayStatus() {
        if (gatewayStatusBuilder_ == null) {
          return gatewayStatus_ == null ? protocol_v1.V1Register.GatewayStatus.getDefaultInstance() : gatewayStatus_;
        } else {
          return gatewayStatusBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.GatewayStatus GatewayStatus = 131;</code>
       *
       * <pre>
       * 网关状态(废弃)
       * </pre>
       */
      public Builder setGatewayStatus(protocol_v1.V1Register.GatewayStatus value) {
        if (gatewayStatusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gatewayStatus_ = value;
          onChanged();
        } else {
          gatewayStatusBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.GatewayStatus GatewayStatus = 131;</code>
       *
       * <pre>
       * 网关状态(废弃)
       * </pre>
       */
      public Builder setGatewayStatus(
          protocol_v1.V1Register.GatewayStatus.Builder builderForValue) {
        if (gatewayStatusBuilder_ == null) {
          gatewayStatus_ = builderForValue.build();
          onChanged();
        } else {
          gatewayStatusBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.GatewayStatus GatewayStatus = 131;</code>
       *
       * <pre>
       * 网关状态(废弃)
       * </pre>
       */
      public Builder mergeGatewayStatus(protocol_v1.V1Register.GatewayStatus value) {
        if (gatewayStatusBuilder_ == null) {
          if (((bitField0_ & 0x00400000) == 0x00400000) &&
              gatewayStatus_ != null &&
              gatewayStatus_ != protocol_v1.V1Register.GatewayStatus.getDefaultInstance()) {
            gatewayStatus_ =
              protocol_v1.V1Register.GatewayStatus.newBuilder(gatewayStatus_).mergeFrom(value).buildPartial();
          } else {
            gatewayStatus_ = value;
          }
          onChanged();
        } else {
          gatewayStatusBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.GatewayStatus GatewayStatus = 131;</code>
       *
       * <pre>
       * 网关状态(废弃)
       * </pre>
       */
      public Builder clearGatewayStatus() {
        if (gatewayStatusBuilder_ == null) {
          gatewayStatus_ = null;
          onChanged();
        } else {
          gatewayStatusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00400000);
        return this;
      }
      /**
       * <code>optional .protocol_v1.GatewayStatus GatewayStatus = 131;</code>
       *
       * <pre>
       * 网关状态(废弃)
       * </pre>
       */
      public protocol_v1.V1Register.GatewayStatus.Builder getGatewayStatusBuilder() {
        bitField0_ |= 0x00400000;
        onChanged();
        return getGatewayStatusFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.GatewayStatus GatewayStatus = 131;</code>
       *
       * <pre>
       * 网关状态(废弃)
       * </pre>
       */
      public protocol_v1.V1Register.GatewayStatusOrBuilder getGatewayStatusOrBuilder() {
        if (gatewayStatusBuilder_ != null) {
          return gatewayStatusBuilder_.getMessageOrBuilder();
        } else {
          return gatewayStatus_ == null ?
              protocol_v1.V1Register.GatewayStatus.getDefaultInstance() : gatewayStatus_;
        }
      }
      /**
       * <code>optional .protocol_v1.GatewayStatus GatewayStatus = 131;</code>
       *
       * <pre>
       * 网关状态(废弃)
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Register.GatewayStatus, protocol_v1.V1Register.GatewayStatus.Builder, protocol_v1.V1Register.GatewayStatusOrBuilder> 
          getGatewayStatusFieldBuilder() {
        if (gatewayStatusBuilder_ == null) {
          gatewayStatusBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1Register.GatewayStatus, protocol_v1.V1Register.GatewayStatus.Builder, protocol_v1.V1Register.GatewayStatusOrBuilder>(
                  getGatewayStatus(),
                  getParentForChildren(),
                  isClean());
          gatewayStatus_ = null;
        }
        return gatewayStatusBuilder_;
      }

      private java.util.List<protocol_v1.V1Register.StorageStatus> storageStatus_ =
        java.util.Collections.emptyList();
      private void ensureStorageStatusIsMutable() {
        if (!((bitField0_ & 0x00800000) == 0x00800000)) {
          storageStatus_ = new java.util.ArrayList<protocol_v1.V1Register.StorageStatus>(storageStatus_);
          bitField0_ |= 0x00800000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protocol_v1.V1Register.StorageStatus, protocol_v1.V1Register.StorageStatus.Builder, protocol_v1.V1Register.StorageStatusOrBuilder> storageStatusBuilder_;

      /**
       * <code>repeated .protocol_v1.StorageStatus StorageStatus = 132;</code>
       *
       * <pre>
       * 存储分区状态
       * </pre>
       */
      public java.util.List<protocol_v1.V1Register.StorageStatus> getStorageStatusList() {
        if (storageStatusBuilder_ == null) {
          return java.util.Collections.unmodifiableList(storageStatus_);
        } else {
          return storageStatusBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protocol_v1.StorageStatus StorageStatus = 132;</code>
       *
       * <pre>
       * 存储分区状态
       * </pre>
       */
      public int getStorageStatusCount() {
        if (storageStatusBuilder_ == null) {
          return storageStatus_.size();
        } else {
          return storageStatusBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protocol_v1.StorageStatus StorageStatus = 132;</code>
       *
       * <pre>
       * 存储分区状态
       * </pre>
       */
      public protocol_v1.V1Register.StorageStatus getStorageStatus(int index) {
        if (storageStatusBuilder_ == null) {
          return storageStatus_.get(index);
        } else {
          return storageStatusBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protocol_v1.StorageStatus StorageStatus = 132;</code>
       *
       * <pre>
       * 存储分区状态
       * </pre>
       */
      public Builder setStorageStatus(
          int index, protocol_v1.V1Register.StorageStatus value) {
        if (storageStatusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStorageStatusIsMutable();
          storageStatus_.set(index, value);
          onChanged();
        } else {
          storageStatusBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.StorageStatus StorageStatus = 132;</code>
       *
       * <pre>
       * 存储分区状态
       * </pre>
       */
      public Builder setStorageStatus(
          int index, protocol_v1.V1Register.StorageStatus.Builder builderForValue) {
        if (storageStatusBuilder_ == null) {
          ensureStorageStatusIsMutable();
          storageStatus_.set(index, builderForValue.build());
          onChanged();
        } else {
          storageStatusBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.StorageStatus StorageStatus = 132;</code>
       *
       * <pre>
       * 存储分区状态
       * </pre>
       */
      public Builder addStorageStatus(protocol_v1.V1Register.StorageStatus value) {
        if (storageStatusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStorageStatusIsMutable();
          storageStatus_.add(value);
          onChanged();
        } else {
          storageStatusBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.StorageStatus StorageStatus = 132;</code>
       *
       * <pre>
       * 存储分区状态
       * </pre>
       */
      public Builder addStorageStatus(
          int index, protocol_v1.V1Register.StorageStatus value) {
        if (storageStatusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStorageStatusIsMutable();
          storageStatus_.add(index, value);
          onChanged();
        } else {
          storageStatusBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.StorageStatus StorageStatus = 132;</code>
       *
       * <pre>
       * 存储分区状态
       * </pre>
       */
      public Builder addStorageStatus(
          protocol_v1.V1Register.StorageStatus.Builder builderForValue) {
        if (storageStatusBuilder_ == null) {
          ensureStorageStatusIsMutable();
          storageStatus_.add(builderForValue.build());
          onChanged();
        } else {
          storageStatusBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.StorageStatus StorageStatus = 132;</code>
       *
       * <pre>
       * 存储分区状态
       * </pre>
       */
      public Builder addStorageStatus(
          int index, protocol_v1.V1Register.StorageStatus.Builder builderForValue) {
        if (storageStatusBuilder_ == null) {
          ensureStorageStatusIsMutable();
          storageStatus_.add(index, builderForValue.build());
          onChanged();
        } else {
          storageStatusBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.StorageStatus StorageStatus = 132;</code>
       *
       * <pre>
       * 存储分区状态
       * </pre>
       */
      public Builder addAllStorageStatus(
          java.lang.Iterable<? extends protocol_v1.V1Register.StorageStatus> values) {
        if (storageStatusBuilder_ == null) {
          ensureStorageStatusIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, storageStatus_);
          onChanged();
        } else {
          storageStatusBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.StorageStatus StorageStatus = 132;</code>
       *
       * <pre>
       * 存储分区状态
       * </pre>
       */
      public Builder clearStorageStatus() {
        if (storageStatusBuilder_ == null) {
          storageStatus_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00800000);
          onChanged();
        } else {
          storageStatusBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.StorageStatus StorageStatus = 132;</code>
       *
       * <pre>
       * 存储分区状态
       * </pre>
       */
      public Builder removeStorageStatus(int index) {
        if (storageStatusBuilder_ == null) {
          ensureStorageStatusIsMutable();
          storageStatus_.remove(index);
          onChanged();
        } else {
          storageStatusBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.StorageStatus StorageStatus = 132;</code>
       *
       * <pre>
       * 存储分区状态
       * </pre>
       */
      public protocol_v1.V1Register.StorageStatus.Builder getStorageStatusBuilder(
          int index) {
        return getStorageStatusFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protocol_v1.StorageStatus StorageStatus = 132;</code>
       *
       * <pre>
       * 存储分区状态
       * </pre>
       */
      public protocol_v1.V1Register.StorageStatusOrBuilder getStorageStatusOrBuilder(
          int index) {
        if (storageStatusBuilder_ == null) {
          return storageStatus_.get(index);  } else {
          return storageStatusBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protocol_v1.StorageStatus StorageStatus = 132;</code>
       *
       * <pre>
       * 存储分区状态
       * </pre>
       */
      public java.util.List<? extends protocol_v1.V1Register.StorageStatusOrBuilder> 
           getStorageStatusOrBuilderList() {
        if (storageStatusBuilder_ != null) {
          return storageStatusBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(storageStatus_);
        }
      }
      /**
       * <code>repeated .protocol_v1.StorageStatus StorageStatus = 132;</code>
       *
       * <pre>
       * 存储分区状态
       * </pre>
       */
      public protocol_v1.V1Register.StorageStatus.Builder addStorageStatusBuilder() {
        return getStorageStatusFieldBuilder().addBuilder(
            protocol_v1.V1Register.StorageStatus.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol_v1.StorageStatus StorageStatus = 132;</code>
       *
       * <pre>
       * 存储分区状态
       * </pre>
       */
      public protocol_v1.V1Register.StorageStatus.Builder addStorageStatusBuilder(
          int index) {
        return getStorageStatusFieldBuilder().addBuilder(
            index, protocol_v1.V1Register.StorageStatus.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol_v1.StorageStatus StorageStatus = 132;</code>
       *
       * <pre>
       * 存储分区状态
       * </pre>
       */
      public java.util.List<protocol_v1.V1Register.StorageStatus.Builder> 
           getStorageStatusBuilderList() {
        return getStorageStatusFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protocol_v1.V1Register.StorageStatus, protocol_v1.V1Register.StorageStatus.Builder, protocol_v1.V1Register.StorageStatusOrBuilder> 
          getStorageStatusFieldBuilder() {
        if (storageStatusBuilder_ == null) {
          storageStatusBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protocol_v1.V1Register.StorageStatus, protocol_v1.V1Register.StorageStatus.Builder, protocol_v1.V1Register.StorageStatusOrBuilder>(
                  storageStatus_,
                  ((bitField0_ & 0x00800000) == 0x00800000),
                  getParentForChildren(),
                  isClean());
          storageStatus_ = null;
        }
        return storageStatusBuilder_;
      }

      private protocol_v1.V1Env.Env env_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Env.Env, protocol_v1.V1Env.Env.Builder, protocol_v1.V1Env.EnvOrBuilder> envBuilder_;
      /**
       * <code>optional .protocol_v1.Env Env = 136;</code>
       *
       * <pre>
       * optional GPS GPS = 135;                     // 上传时采集定位信息(暂不实现)
       * </pre>
       */
      public boolean hasEnv() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional .protocol_v1.Env Env = 136;</code>
       *
       * <pre>
       * optional GPS GPS = 135;                     // 上传时采集定位信息(暂不实现)
       * </pre>
       */
      public protocol_v1.V1Env.Env getEnv() {
        if (envBuilder_ == null) {
          return env_ == null ? protocol_v1.V1Env.Env.getDefaultInstance() : env_;
        } else {
          return envBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.Env Env = 136;</code>
       *
       * <pre>
       * optional GPS GPS = 135;                     // 上传时采集定位信息(暂不实现)
       * </pre>
       */
      public Builder setEnv(protocol_v1.V1Env.Env value) {
        if (envBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          env_ = value;
          onChanged();
        } else {
          envBuilder_.setMessage(value);
        }
        bitField0_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Env Env = 136;</code>
       *
       * <pre>
       * optional GPS GPS = 135;                     // 上传时采集定位信息(暂不实现)
       * </pre>
       */
      public Builder setEnv(
          protocol_v1.V1Env.Env.Builder builderForValue) {
        if (envBuilder_ == null) {
          env_ = builderForValue.build();
          onChanged();
        } else {
          envBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Env Env = 136;</code>
       *
       * <pre>
       * optional GPS GPS = 135;                     // 上传时采集定位信息(暂不实现)
       * </pre>
       */
      public Builder mergeEnv(protocol_v1.V1Env.Env value) {
        if (envBuilder_ == null) {
          if (((bitField0_ & 0x01000000) == 0x01000000) &&
              env_ != null &&
              env_ != protocol_v1.V1Env.Env.getDefaultInstance()) {
            env_ =
              protocol_v1.V1Env.Env.newBuilder(env_).mergeFrom(value).buildPartial();
          } else {
            env_ = value;
          }
          onChanged();
        } else {
          envBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Env Env = 136;</code>
       *
       * <pre>
       * optional GPS GPS = 135;                     // 上传时采集定位信息(暂不实现)
       * </pre>
       */
      public Builder clearEnv() {
        if (envBuilder_ == null) {
          env_ = null;
          onChanged();
        } else {
          envBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x01000000);
        return this;
      }
      /**
       * <code>optional .protocol_v1.Env Env = 136;</code>
       *
       * <pre>
       * optional GPS GPS = 135;                     // 上传时采集定位信息(暂不实现)
       * </pre>
       */
      public protocol_v1.V1Env.Env.Builder getEnvBuilder() {
        bitField0_ |= 0x01000000;
        onChanged();
        return getEnvFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.Env Env = 136;</code>
       *
       * <pre>
       * optional GPS GPS = 135;                     // 上传时采集定位信息(暂不实现)
       * </pre>
       */
      public protocol_v1.V1Env.EnvOrBuilder getEnvOrBuilder() {
        if (envBuilder_ != null) {
          return envBuilder_.getMessageOrBuilder();
        } else {
          return env_ == null ?
              protocol_v1.V1Env.Env.getDefaultInstance() : env_;
        }
      }
      /**
       * <code>optional .protocol_v1.Env Env = 136;</code>
       *
       * <pre>
       * optional GPS GPS = 135;                     // 上传时采集定位信息(暂不实现)
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Env.Env, protocol_v1.V1Env.Env.Builder, protocol_v1.V1Env.EnvOrBuilder> 
          getEnvFieldBuilder() {
        if (envBuilder_ == null) {
          envBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1Env.Env, protocol_v1.V1Env.Env.Builder, protocol_v1.V1Env.EnvOrBuilder>(
                  getEnv(),
                  getParentForChildren(),
                  isClean());
          env_ = null;
        }
        return envBuilder_;
      }

      private protocol_v1.V1Cellular.Cellular cellular_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Cellular.Cellular, protocol_v1.V1Cellular.Cellular.Builder, protocol_v1.V1Cellular.CellularOrBuilder> cellularBuilder_;
      /**
       * <code>optional .protocol_v1.Cellular Cellular = 138;</code>
       *
       * <pre>
       * 上传时蜂窝网络信息
       * </pre>
       */
      public boolean hasCellular() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional .protocol_v1.Cellular Cellular = 138;</code>
       *
       * <pre>
       * 上传时蜂窝网络信息
       * </pre>
       */
      public protocol_v1.V1Cellular.Cellular getCellular() {
        if (cellularBuilder_ == null) {
          return cellular_ == null ? protocol_v1.V1Cellular.Cellular.getDefaultInstance() : cellular_;
        } else {
          return cellularBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.Cellular Cellular = 138;</code>
       *
       * <pre>
       * 上传时蜂窝网络信息
       * </pre>
       */
      public Builder setCellular(protocol_v1.V1Cellular.Cellular value) {
        if (cellularBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cellular_ = value;
          onChanged();
        } else {
          cellularBuilder_.setMessage(value);
        }
        bitField0_ |= 0x02000000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Cellular Cellular = 138;</code>
       *
       * <pre>
       * 上传时蜂窝网络信息
       * </pre>
       */
      public Builder setCellular(
          protocol_v1.V1Cellular.Cellular.Builder builderForValue) {
        if (cellularBuilder_ == null) {
          cellular_ = builderForValue.build();
          onChanged();
        } else {
          cellularBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x02000000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Cellular Cellular = 138;</code>
       *
       * <pre>
       * 上传时蜂窝网络信息
       * </pre>
       */
      public Builder mergeCellular(protocol_v1.V1Cellular.Cellular value) {
        if (cellularBuilder_ == null) {
          if (((bitField0_ & 0x02000000) == 0x02000000) &&
              cellular_ != null &&
              cellular_ != protocol_v1.V1Cellular.Cellular.getDefaultInstance()) {
            cellular_ =
              protocol_v1.V1Cellular.Cellular.newBuilder(cellular_).mergeFrom(value).buildPartial();
          } else {
            cellular_ = value;
          }
          onChanged();
        } else {
          cellularBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x02000000;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Cellular Cellular = 138;</code>
       *
       * <pre>
       * 上传时蜂窝网络信息
       * </pre>
       */
      public Builder clearCellular() {
        if (cellularBuilder_ == null) {
          cellular_ = null;
          onChanged();
        } else {
          cellularBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x02000000);
        return this;
      }
      /**
       * <code>optional .protocol_v1.Cellular Cellular = 138;</code>
       *
       * <pre>
       * 上传时蜂窝网络信息
       * </pre>
       */
      public protocol_v1.V1Cellular.Cellular.Builder getCellularBuilder() {
        bitField0_ |= 0x02000000;
        onChanged();
        return getCellularFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.Cellular Cellular = 138;</code>
       *
       * <pre>
       * 上传时蜂窝网络信息
       * </pre>
       */
      public protocol_v1.V1Cellular.CellularOrBuilder getCellularOrBuilder() {
        if (cellularBuilder_ != null) {
          return cellularBuilder_.getMessageOrBuilder();
        } else {
          return cellular_ == null ?
              protocol_v1.V1Cellular.Cellular.getDefaultInstance() : cellular_;
        }
      }
      /**
       * <code>optional .protocol_v1.Cellular Cellular = 138;</code>
       *
       * <pre>
       * 上传时蜂窝网络信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Cellular.Cellular, protocol_v1.V1Cellular.Cellular.Builder, protocol_v1.V1Cellular.CellularOrBuilder> 
          getCellularFieldBuilder() {
        if (cellularBuilder_ == null) {
          cellularBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1Cellular.Cellular, protocol_v1.V1Cellular.Cellular.Builder, protocol_v1.V1Cellular.CellularOrBuilder>(
                  getCellular(),
                  getParentForChildren(),
                  isClean());
          cellular_ = null;
        }
        return cellularBuilder_;
      }

      private java.util.List<protocol_v1.V1Algorithm.AlgorithmVersion> algorithmVersion_ =
        java.util.Collections.emptyList();
      private void ensureAlgorithmVersionIsMutable() {
        if (!((bitField0_ & 0x04000000) == 0x04000000)) {
          algorithmVersion_ = new java.util.ArrayList<protocol_v1.V1Algorithm.AlgorithmVersion>(algorithmVersion_);
          bitField0_ |= 0x04000000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protocol_v1.V1Algorithm.AlgorithmVersion, protocol_v1.V1Algorithm.AlgorithmVersion.Builder, protocol_v1.V1Algorithm.AlgorithmVersionOrBuilder> algorithmVersionBuilder_;

      /**
       * <code>repeated .protocol_v1.AlgorithmVersion AlgorithmVersion = 140;</code>
       *
       * <pre>
       * 支持的算法版本
       * </pre>
       */
      public java.util.List<protocol_v1.V1Algorithm.AlgorithmVersion> getAlgorithmVersionList() {
        if (algorithmVersionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(algorithmVersion_);
        } else {
          return algorithmVersionBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protocol_v1.AlgorithmVersion AlgorithmVersion = 140;</code>
       *
       * <pre>
       * 支持的算法版本
       * </pre>
       */
      public int getAlgorithmVersionCount() {
        if (algorithmVersionBuilder_ == null) {
          return algorithmVersion_.size();
        } else {
          return algorithmVersionBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protocol_v1.AlgorithmVersion AlgorithmVersion = 140;</code>
       *
       * <pre>
       * 支持的算法版本
       * </pre>
       */
      public protocol_v1.V1Algorithm.AlgorithmVersion getAlgorithmVersion(int index) {
        if (algorithmVersionBuilder_ == null) {
          return algorithmVersion_.get(index);
        } else {
          return algorithmVersionBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protocol_v1.AlgorithmVersion AlgorithmVersion = 140;</code>
       *
       * <pre>
       * 支持的算法版本
       * </pre>
       */
      public Builder setAlgorithmVersion(
          int index, protocol_v1.V1Algorithm.AlgorithmVersion value) {
        if (algorithmVersionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAlgorithmVersionIsMutable();
          algorithmVersion_.set(index, value);
          onChanged();
        } else {
          algorithmVersionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.AlgorithmVersion AlgorithmVersion = 140;</code>
       *
       * <pre>
       * 支持的算法版本
       * </pre>
       */
      public Builder setAlgorithmVersion(
          int index, protocol_v1.V1Algorithm.AlgorithmVersion.Builder builderForValue) {
        if (algorithmVersionBuilder_ == null) {
          ensureAlgorithmVersionIsMutable();
          algorithmVersion_.set(index, builderForValue.build());
          onChanged();
        } else {
          algorithmVersionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.AlgorithmVersion AlgorithmVersion = 140;</code>
       *
       * <pre>
       * 支持的算法版本
       * </pre>
       */
      public Builder addAlgorithmVersion(protocol_v1.V1Algorithm.AlgorithmVersion value) {
        if (algorithmVersionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAlgorithmVersionIsMutable();
          algorithmVersion_.add(value);
          onChanged();
        } else {
          algorithmVersionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.AlgorithmVersion AlgorithmVersion = 140;</code>
       *
       * <pre>
       * 支持的算法版本
       * </pre>
       */
      public Builder addAlgorithmVersion(
          int index, protocol_v1.V1Algorithm.AlgorithmVersion value) {
        if (algorithmVersionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAlgorithmVersionIsMutable();
          algorithmVersion_.add(index, value);
          onChanged();
        } else {
          algorithmVersionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.AlgorithmVersion AlgorithmVersion = 140;</code>
       *
       * <pre>
       * 支持的算法版本
       * </pre>
       */
      public Builder addAlgorithmVersion(
          protocol_v1.V1Algorithm.AlgorithmVersion.Builder builderForValue) {
        if (algorithmVersionBuilder_ == null) {
          ensureAlgorithmVersionIsMutable();
          algorithmVersion_.add(builderForValue.build());
          onChanged();
        } else {
          algorithmVersionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.AlgorithmVersion AlgorithmVersion = 140;</code>
       *
       * <pre>
       * 支持的算法版本
       * </pre>
       */
      public Builder addAlgorithmVersion(
          int index, protocol_v1.V1Algorithm.AlgorithmVersion.Builder builderForValue) {
        if (algorithmVersionBuilder_ == null) {
          ensureAlgorithmVersionIsMutable();
          algorithmVersion_.add(index, builderForValue.build());
          onChanged();
        } else {
          algorithmVersionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.AlgorithmVersion AlgorithmVersion = 140;</code>
       *
       * <pre>
       * 支持的算法版本
       * </pre>
       */
      public Builder addAllAlgorithmVersion(
          java.lang.Iterable<? extends protocol_v1.V1Algorithm.AlgorithmVersion> values) {
        if (algorithmVersionBuilder_ == null) {
          ensureAlgorithmVersionIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, algorithmVersion_);
          onChanged();
        } else {
          algorithmVersionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.AlgorithmVersion AlgorithmVersion = 140;</code>
       *
       * <pre>
       * 支持的算法版本
       * </pre>
       */
      public Builder clearAlgorithmVersion() {
        if (algorithmVersionBuilder_ == null) {
          algorithmVersion_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x04000000);
          onChanged();
        } else {
          algorithmVersionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.AlgorithmVersion AlgorithmVersion = 140;</code>
       *
       * <pre>
       * 支持的算法版本
       * </pre>
       */
      public Builder removeAlgorithmVersion(int index) {
        if (algorithmVersionBuilder_ == null) {
          ensureAlgorithmVersionIsMutable();
          algorithmVersion_.remove(index);
          onChanged();
        } else {
          algorithmVersionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.AlgorithmVersion AlgorithmVersion = 140;</code>
       *
       * <pre>
       * 支持的算法版本
       * </pre>
       */
      public protocol_v1.V1Algorithm.AlgorithmVersion.Builder getAlgorithmVersionBuilder(
          int index) {
        return getAlgorithmVersionFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protocol_v1.AlgorithmVersion AlgorithmVersion = 140;</code>
       *
       * <pre>
       * 支持的算法版本
       * </pre>
       */
      public protocol_v1.V1Algorithm.AlgorithmVersionOrBuilder getAlgorithmVersionOrBuilder(
          int index) {
        if (algorithmVersionBuilder_ == null) {
          return algorithmVersion_.get(index);  } else {
          return algorithmVersionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protocol_v1.AlgorithmVersion AlgorithmVersion = 140;</code>
       *
       * <pre>
       * 支持的算法版本
       * </pre>
       */
      public java.util.List<? extends protocol_v1.V1Algorithm.AlgorithmVersionOrBuilder> 
           getAlgorithmVersionOrBuilderList() {
        if (algorithmVersionBuilder_ != null) {
          return algorithmVersionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(algorithmVersion_);
        }
      }
      /**
       * <code>repeated .protocol_v1.AlgorithmVersion AlgorithmVersion = 140;</code>
       *
       * <pre>
       * 支持的算法版本
       * </pre>
       */
      public protocol_v1.V1Algorithm.AlgorithmVersion.Builder addAlgorithmVersionBuilder() {
        return getAlgorithmVersionFieldBuilder().addBuilder(
            protocol_v1.V1Algorithm.AlgorithmVersion.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol_v1.AlgorithmVersion AlgorithmVersion = 140;</code>
       *
       * <pre>
       * 支持的算法版本
       * </pre>
       */
      public protocol_v1.V1Algorithm.AlgorithmVersion.Builder addAlgorithmVersionBuilder(
          int index) {
        return getAlgorithmVersionFieldBuilder().addBuilder(
            index, protocol_v1.V1Algorithm.AlgorithmVersion.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol_v1.AlgorithmVersion AlgorithmVersion = 140;</code>
       *
       * <pre>
       * 支持的算法版本
       * </pre>
       */
      public java.util.List<protocol_v1.V1Algorithm.AlgorithmVersion.Builder> 
           getAlgorithmVersionBuilderList() {
        return getAlgorithmVersionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protocol_v1.V1Algorithm.AlgorithmVersion, protocol_v1.V1Algorithm.AlgorithmVersion.Builder, protocol_v1.V1Algorithm.AlgorithmVersionOrBuilder> 
          getAlgorithmVersionFieldBuilder() {
        if (algorithmVersionBuilder_ == null) {
          algorithmVersionBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protocol_v1.V1Algorithm.AlgorithmVersion, protocol_v1.V1Algorithm.AlgorithmVersion.Builder, protocol_v1.V1Algorithm.AlgorithmVersionOrBuilder>(
                  algorithmVersion_,
                  ((bitField0_ & 0x04000000) == 0x04000000),
                  getParentForChildren(),
                  isClean());
          algorithmVersion_ = null;
        }
        return algorithmVersionBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:protocol_v1.RegisterReq)
    }

    // @@protoc_insertion_point(class_scope:protocol_v1.RegisterReq)
    private static final protocol_v1.V1Register.RegisterReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol_v1.V1Register.RegisterReq();
    }

    public static protocol_v1.V1Register.RegisterReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RegisterReq>
        PARSER = new com.google.protobuf.AbstractParser<RegisterReq>() {
      public RegisterReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new RegisterReq(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<RegisterReq> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RegisterReq> getParserForType() {
      return PARSER;
    }

    public protocol_v1.V1Register.RegisterReq getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StorageStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol_v1.StorageStatus)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 Type = 1;</code>
     *
     * <pre>
     * 存储分区类型  1.gps  2.env  3.bhv
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required uint32 Type = 1;</code>
     *
     * <pre>
     * 存储分区类型  1.gps  2.env  3.bhv
     * </pre>
     */
    int getType();

    /**
     * <code>optional uint32 TotalSpace = 2 [default = 0];</code>
     *
     * <pre>
     * 存储分区大小, 条数
     * </pre>
     */
    boolean hasTotalSpace();
    /**
     * <code>optional uint32 TotalSpace = 2 [default = 0];</code>
     *
     * <pre>
     * 存储分区大小, 条数
     * </pre>
     */
    int getTotalSpace();

    /**
     * <code>optional uint32 RemainingData = 3 [default = 0];</code>
     *
     * <pre>
     * 未传输的数据量, 条数
     * </pre>
     */
    boolean hasRemainingData();
    /**
     * <code>optional uint32 RemainingData = 3 [default = 0];</code>
     *
     * <pre>
     * 未传输的数据量, 条数
     * </pre>
     */
    int getRemainingData();
  }
  /**
   * Protobuf type {@code protocol_v1.StorageStatus}
   */
  public  static final class StorageStatus extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protocol_v1.StorageStatus)
      StorageStatusOrBuilder {
    // Use StorageStatus.newBuilder() to construct.
    private StorageStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private StorageStatus() {
      type_ = 0;
      totalSpace_ = 0;
      remainingData_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StorageStatus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              type_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              totalSpace_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              remainingData_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol_v1.V1Register.internal_static_protocol_v1_StorageStatus_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol_v1.V1Register.internal_static_protocol_v1_StorageStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol_v1.V1Register.StorageStatus.class, protocol_v1.V1Register.StorageStatus.Builder.class);
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>required uint32 Type = 1;</code>
     *
     * <pre>
     * 存储分区类型  1.gps  2.env  3.bhv
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 Type = 1;</code>
     *
     * <pre>
     * 存储分区类型  1.gps  2.env  3.bhv
     * </pre>
     */
    public int getType() {
      return type_;
    }

    public static final int TOTALSPACE_FIELD_NUMBER = 2;
    private int totalSpace_;
    /**
     * <code>optional uint32 TotalSpace = 2 [default = 0];</code>
     *
     * <pre>
     * 存储分区大小, 条数
     * </pre>
     */
    public boolean hasTotalSpace() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 TotalSpace = 2 [default = 0];</code>
     *
     * <pre>
     * 存储分区大小, 条数
     * </pre>
     */
    public int getTotalSpace() {
      return totalSpace_;
    }

    public static final int REMAININGDATA_FIELD_NUMBER = 3;
    private int remainingData_;
    /**
     * <code>optional uint32 RemainingData = 3 [default = 0];</code>
     *
     * <pre>
     * 未传输的数据量, 条数
     * </pre>
     */
    public boolean hasRemainingData() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 RemainingData = 3 [default = 0];</code>
     *
     * <pre>
     * 未传输的数据量, 条数
     * </pre>
     */
    public int getRemainingData() {
      return remainingData_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, totalSpace_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, remainingData_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, totalSpace_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, remainingData_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static protocol_v1.V1Register.StorageStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Register.StorageStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Register.StorageStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Register.StorageStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Register.StorageStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Register.StorageStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Register.StorageStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protocol_v1.V1Register.StorageStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Register.StorageStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Register.StorageStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol_v1.V1Register.StorageStatus prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol_v1.StorageStatus}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol_v1.StorageStatus)
        protocol_v1.V1Register.StorageStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol_v1.V1Register.internal_static_protocol_v1_StorageStatus_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol_v1.V1Register.internal_static_protocol_v1_StorageStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol_v1.V1Register.StorageStatus.class, protocol_v1.V1Register.StorageStatus.Builder.class);
      }

      // Construct using protocol_v1.V1Register.StorageStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        totalSpace_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        remainingData_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol_v1.V1Register.internal_static_protocol_v1_StorageStatus_descriptor;
      }

      public protocol_v1.V1Register.StorageStatus getDefaultInstanceForType() {
        return protocol_v1.V1Register.StorageStatus.getDefaultInstance();
      }

      public protocol_v1.V1Register.StorageStatus build() {
        protocol_v1.V1Register.StorageStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol_v1.V1Register.StorageStatus buildPartial() {
        protocol_v1.V1Register.StorageStatus result = new protocol_v1.V1Register.StorageStatus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.totalSpace_ = totalSpace_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.remainingData_ = remainingData_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol_v1.V1Register.StorageStatus) {
          return mergeFrom((protocol_v1.V1Register.StorageStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol_v1.V1Register.StorageStatus other) {
        if (other == protocol_v1.V1Register.StorageStatus.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasTotalSpace()) {
          setTotalSpace(other.getTotalSpace());
        }
        if (other.hasRemainingData()) {
          setRemainingData(other.getRemainingData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol_v1.V1Register.StorageStatus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol_v1.V1Register.StorageStatus) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int type_ ;
      /**
       * <code>required uint32 Type = 1;</code>
       *
       * <pre>
       * 存储分区类型  1.gps  2.env  3.bhv
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 Type = 1;</code>
       *
       * <pre>
       * 存储分区类型  1.gps  2.env  3.bhv
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required uint32 Type = 1;</code>
       *
       * <pre>
       * 存储分区类型  1.gps  2.env  3.bhv
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 Type = 1;</code>
       *
       * <pre>
       * 存储分区类型  1.gps  2.env  3.bhv
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      private int totalSpace_ ;
      /**
       * <code>optional uint32 TotalSpace = 2 [default = 0];</code>
       *
       * <pre>
       * 存储分区大小, 条数
       * </pre>
       */
      public boolean hasTotalSpace() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 TotalSpace = 2 [default = 0];</code>
       *
       * <pre>
       * 存储分区大小, 条数
       * </pre>
       */
      public int getTotalSpace() {
        return totalSpace_;
      }
      /**
       * <code>optional uint32 TotalSpace = 2 [default = 0];</code>
       *
       * <pre>
       * 存储分区大小, 条数
       * </pre>
       */
      public Builder setTotalSpace(int value) {
        bitField0_ |= 0x00000002;
        totalSpace_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 TotalSpace = 2 [default = 0];</code>
       *
       * <pre>
       * 存储分区大小, 条数
       * </pre>
       */
      public Builder clearTotalSpace() {
        bitField0_ = (bitField0_ & ~0x00000002);
        totalSpace_ = 0;
        onChanged();
        return this;
      }

      private int remainingData_ ;
      /**
       * <code>optional uint32 RemainingData = 3 [default = 0];</code>
       *
       * <pre>
       * 未传输的数据量, 条数
       * </pre>
       */
      public boolean hasRemainingData() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 RemainingData = 3 [default = 0];</code>
       *
       * <pre>
       * 未传输的数据量, 条数
       * </pre>
       */
      public int getRemainingData() {
        return remainingData_;
      }
      /**
       * <code>optional uint32 RemainingData = 3 [default = 0];</code>
       *
       * <pre>
       * 未传输的数据量, 条数
       * </pre>
       */
      public Builder setRemainingData(int value) {
        bitField0_ |= 0x00000004;
        remainingData_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 RemainingData = 3 [default = 0];</code>
       *
       * <pre>
       * 未传输的数据量, 条数
       * </pre>
       */
      public Builder clearRemainingData() {
        bitField0_ = (bitField0_ & ~0x00000004);
        remainingData_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol_v1.StorageStatus)
    }

    // @@protoc_insertion_point(class_scope:protocol_v1.StorageStatus)
    private static final protocol_v1.V1Register.StorageStatus DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol_v1.V1Register.StorageStatus();
    }

    public static protocol_v1.V1Register.StorageStatus getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<StorageStatus>
        PARSER = new com.google.protobuf.AbstractParser<StorageStatus>() {
      public StorageStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new StorageStatus(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<StorageStatus> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StorageStatus> getParserForType() {
      return PARSER;
    }

    public protocol_v1.V1Register.StorageStatus getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RegisterRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol_v1.RegisterRsp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
     */
    boolean hasIden();
    /**
     * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
     */
    protocol_v1.V1IdentityMsg.IdentityMsg getIden();
    /**
     * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
     */
    protocol_v1.V1IdentityMsg.IdentityMsgOrBuilder getIdenOrBuilder();

    /**
     * <code>required uint32 Timestamp = 2;</code>
     *
     * <pre>
     * UTC时间戳，校时用
     * </pre>
     */
    boolean hasTimestamp();
    /**
     * <code>required uint32 Timestamp = 2;</code>
     *
     * <pre>
     * UTC时间戳，校时用
     * </pre>
     */
    int getTimestamp();

    /**
     * <code>optional int32 SimType = 101 [default = 0];</code>
     *
     * <pre>
     * SIM卡类型
     * </pre>
     */
    boolean hasSimType();
    /**
     * <code>optional int32 SimType = 101 [default = 0];</code>
     *
     * <pre>
     * SIM卡类型
     * </pre>
     */
    int getSimType();

    /**
     * <code>optional uint32 UserID = 102 [default = 0];</code>
     *
     * <pre>
     * UserID为crc16(userid)，如果计算出来结果为0x000，则加10返回，如结果为0xffff，则减10返回
     * </pre>
     */
    boolean hasUserID();
    /**
     * <code>optional uint32 UserID = 102 [default = 0];</code>
     *
     * <pre>
     * UserID为crc16(userid)，如果计算出来结果为0x000，则加10返回，如结果为0xffff，则减10返回
     * </pre>
     */
    int getUserID();

    /**
     * <code>optional .protocol_v1.Hash SettingHash = 110;</code>
     *
     * <pre>
     * 各个配置hash
     * </pre>
     */
    boolean hasSettingHash();
    /**
     * <code>optional .protocol_v1.Hash SettingHash = 110;</code>
     *
     * <pre>
     * 各个配置hash
     * </pre>
     */
    protocol_v1.V1TimeHash.Hash getSettingHash();
    /**
     * <code>optional .protocol_v1.Hash SettingHash = 110;</code>
     *
     * <pre>
     * 各个配置hash
     * </pre>
     */
    protocol_v1.V1TimeHash.HashOrBuilder getSettingHashOrBuilder();

    /**
     * <code>optional .protocol_v1.HashLite TriggerHash = 112;</code>
     *
     * <pre>
     * 触发器hash
     * </pre>
     */
    boolean hasTriggerHash();
    /**
     * <code>optional .protocol_v1.HashLite TriggerHash = 112;</code>
     *
     * <pre>
     * 触发器hash
     * </pre>
     */
    protocol_v1.V1TimeHash.HashLite getTriggerHash();
    /**
     * <code>optional .protocol_v1.HashLite TriggerHash = 112;</code>
     *
     * <pre>
     * 触发器hash
     * </pre>
     */
    protocol_v1.V1TimeHash.HashLiteOrBuilder getTriggerHashOrBuilder();

    /**
     * <code>optional .protocol_v1.HashLite AlgorithmHash = 113;</code>
     *
     * <pre>
     * 算法配置hash
     * </pre>
     */
    boolean hasAlgorithmHash();
    /**
     * <code>optional .protocol_v1.HashLite AlgorithmHash = 113;</code>
     *
     * <pre>
     * 算法配置hash
     * </pre>
     */
    protocol_v1.V1TimeHash.HashLite getAlgorithmHash();
    /**
     * <code>optional .protocol_v1.HashLite AlgorithmHash = 113;</code>
     *
     * <pre>
     * 算法配置hash
     * </pre>
     */
    protocol_v1.V1TimeHash.HashLiteOrBuilder getAlgorithmHashOrBuilder();

    /**
     * <code>optional int32 WorkMode = 120 [default = 0];</code>
     *
     * <pre>
     * 开机命令, 0: 无动作，3: 开机
     * </pre>
     */
    boolean hasWorkMode();
    /**
     * <code>optional int32 WorkMode = 120 [default = 0];</code>
     *
     * <pre>
     * 开机命令, 0: 无动作，3: 开机
     * </pre>
     */
    int getWorkMode();

    /**
     * <code>optional .protocol_v1.Firmware Firmware = 130;</code>
     *
     * <pre>
     * 固件升级配置，同setting
     * </pre>
     */
    boolean hasFirmware();
    /**
     * <code>optional .protocol_v1.Firmware Firmware = 130;</code>
     *
     * <pre>
     * 固件升级配置，同setting
     * </pre>
     */
    protocol_v1.V1Firmware.Firmware getFirmware();
    /**
     * <code>optional .protocol_v1.Firmware Firmware = 130;</code>
     *
     * <pre>
     * 固件升级配置，同setting
     * </pre>
     */
    protocol_v1.V1Firmware.FirmwareOrBuilder getFirmwareOrBuilder();

    /**
     * <code>optional .protocol_v1.GatewayStatus GatewayStatus = 131;</code>
     *
     * <pre>
     * 网关状态(废弃)
     * </pre>
     */
    boolean hasGatewayStatus();
    /**
     * <code>optional .protocol_v1.GatewayStatus GatewayStatus = 131;</code>
     *
     * <pre>
     * 网关状态(废弃)
     * </pre>
     */
    protocol_v1.V1Register.GatewayStatus getGatewayStatus();
    /**
     * <code>optional .protocol_v1.GatewayStatus GatewayStatus = 131;</code>
     *
     * <pre>
     * 网关状态(废弃)
     * </pre>
     */
    protocol_v1.V1Register.GatewayStatusOrBuilder getGatewayStatusOrBuilder();
  }
  /**
   * Protobuf type {@code protocol_v1.RegisterRsp}
   */
  public  static final class RegisterRsp extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protocol_v1.RegisterRsp)
      RegisterRspOrBuilder {
    // Use RegisterRsp.newBuilder() to construct.
    private RegisterRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private RegisterRsp() {
      timestamp_ = 0;
      simType_ = 0;
      userID_ = 0;
      workMode_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RegisterRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protocol_v1.V1IdentityMsg.IdentityMsg.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = iden_.toBuilder();
              }
              iden_ = input.readMessage(protocol_v1.V1IdentityMsg.IdentityMsg.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(iden_);
                iden_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              timestamp_ = input.readUInt32();
              break;
            }
            case 808: {
              bitField0_ |= 0x00000004;
              simType_ = input.readInt32();
              break;
            }
            case 816: {
              bitField0_ |= 0x00000008;
              userID_ = input.readUInt32();
              break;
            }
            case 882: {
              protocol_v1.V1TimeHash.Hash.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = settingHash_.toBuilder();
              }
              settingHash_ = input.readMessage(protocol_v1.V1TimeHash.Hash.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(settingHash_);
                settingHash_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 898: {
              protocol_v1.V1TimeHash.HashLite.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = triggerHash_.toBuilder();
              }
              triggerHash_ = input.readMessage(protocol_v1.V1TimeHash.HashLite.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(triggerHash_);
                triggerHash_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 906: {
              protocol_v1.V1TimeHash.HashLite.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = algorithmHash_.toBuilder();
              }
              algorithmHash_ = input.readMessage(protocol_v1.V1TimeHash.HashLite.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(algorithmHash_);
                algorithmHash_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 960: {
              bitField0_ |= 0x00000080;
              workMode_ = input.readInt32();
              break;
            }
            case 1042: {
              protocol_v1.V1Firmware.Firmware.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = firmware_.toBuilder();
              }
              firmware_ = input.readMessage(protocol_v1.V1Firmware.Firmware.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(firmware_);
                firmware_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 1050: {
              protocol_v1.V1Register.GatewayStatus.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = gatewayStatus_.toBuilder();
              }
              gatewayStatus_ = input.readMessage(protocol_v1.V1Register.GatewayStatus.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gatewayStatus_);
                gatewayStatus_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol_v1.V1Register.internal_static_protocol_v1_RegisterRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol_v1.V1Register.internal_static_protocol_v1_RegisterRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol_v1.V1Register.RegisterRsp.class, protocol_v1.V1Register.RegisterRsp.Builder.class);
    }

    private int bitField0_;
    public static final int IDEN_FIELD_NUMBER = 1;
    private protocol_v1.V1IdentityMsg.IdentityMsg iden_;
    /**
     * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
     */
    public boolean hasIden() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
     */
    public protocol_v1.V1IdentityMsg.IdentityMsg getIden() {
      return iden_ == null ? protocol_v1.V1IdentityMsg.IdentityMsg.getDefaultInstance() : iden_;
    }
    /**
     * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
     */
    public protocol_v1.V1IdentityMsg.IdentityMsgOrBuilder getIdenOrBuilder() {
      return iden_ == null ? protocol_v1.V1IdentityMsg.IdentityMsg.getDefaultInstance() : iden_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private int timestamp_;
    /**
     * <code>required uint32 Timestamp = 2;</code>
     *
     * <pre>
     * UTC时间戳，校时用
     * </pre>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 Timestamp = 2;</code>
     *
     * <pre>
     * UTC时间戳，校时用
     * </pre>
     */
    public int getTimestamp() {
      return timestamp_;
    }

    public static final int SIMTYPE_FIELD_NUMBER = 101;
    private int simType_;
    /**
     * <code>optional int32 SimType = 101 [default = 0];</code>
     *
     * <pre>
     * SIM卡类型
     * </pre>
     */
    public boolean hasSimType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 SimType = 101 [default = 0];</code>
     *
     * <pre>
     * SIM卡类型
     * </pre>
     */
    public int getSimType() {
      return simType_;
    }

    public static final int USERID_FIELD_NUMBER = 102;
    private int userID_;
    /**
     * <code>optional uint32 UserID = 102 [default = 0];</code>
     *
     * <pre>
     * UserID为crc16(userid)，如果计算出来结果为0x000，则加10返回，如结果为0xffff，则减10返回
     * </pre>
     */
    public boolean hasUserID() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 UserID = 102 [default = 0];</code>
     *
     * <pre>
     * UserID为crc16(userid)，如果计算出来结果为0x000，则加10返回，如结果为0xffff，则减10返回
     * </pre>
     */
    public int getUserID() {
      return userID_;
    }

    public static final int SETTINGHASH_FIELD_NUMBER = 110;
    private protocol_v1.V1TimeHash.Hash settingHash_;
    /**
     * <code>optional .protocol_v1.Hash SettingHash = 110;</code>
     *
     * <pre>
     * 各个配置hash
     * </pre>
     */
    public boolean hasSettingHash() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .protocol_v1.Hash SettingHash = 110;</code>
     *
     * <pre>
     * 各个配置hash
     * </pre>
     */
    public protocol_v1.V1TimeHash.Hash getSettingHash() {
      return settingHash_ == null ? protocol_v1.V1TimeHash.Hash.getDefaultInstance() : settingHash_;
    }
    /**
     * <code>optional .protocol_v1.Hash SettingHash = 110;</code>
     *
     * <pre>
     * 各个配置hash
     * </pre>
     */
    public protocol_v1.V1TimeHash.HashOrBuilder getSettingHashOrBuilder() {
      return settingHash_ == null ? protocol_v1.V1TimeHash.Hash.getDefaultInstance() : settingHash_;
    }

    public static final int TRIGGERHASH_FIELD_NUMBER = 112;
    private protocol_v1.V1TimeHash.HashLite triggerHash_;
    /**
     * <code>optional .protocol_v1.HashLite TriggerHash = 112;</code>
     *
     * <pre>
     * 触发器hash
     * </pre>
     */
    public boolean hasTriggerHash() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .protocol_v1.HashLite TriggerHash = 112;</code>
     *
     * <pre>
     * 触发器hash
     * </pre>
     */
    public protocol_v1.V1TimeHash.HashLite getTriggerHash() {
      return triggerHash_ == null ? protocol_v1.V1TimeHash.HashLite.getDefaultInstance() : triggerHash_;
    }
    /**
     * <code>optional .protocol_v1.HashLite TriggerHash = 112;</code>
     *
     * <pre>
     * 触发器hash
     * </pre>
     */
    public protocol_v1.V1TimeHash.HashLiteOrBuilder getTriggerHashOrBuilder() {
      return triggerHash_ == null ? protocol_v1.V1TimeHash.HashLite.getDefaultInstance() : triggerHash_;
    }

    public static final int ALGORITHMHASH_FIELD_NUMBER = 113;
    private protocol_v1.V1TimeHash.HashLite algorithmHash_;
    /**
     * <code>optional .protocol_v1.HashLite AlgorithmHash = 113;</code>
     *
     * <pre>
     * 算法配置hash
     * </pre>
     */
    public boolean hasAlgorithmHash() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .protocol_v1.HashLite AlgorithmHash = 113;</code>
     *
     * <pre>
     * 算法配置hash
     * </pre>
     */
    public protocol_v1.V1TimeHash.HashLite getAlgorithmHash() {
      return algorithmHash_ == null ? protocol_v1.V1TimeHash.HashLite.getDefaultInstance() : algorithmHash_;
    }
    /**
     * <code>optional .protocol_v1.HashLite AlgorithmHash = 113;</code>
     *
     * <pre>
     * 算法配置hash
     * </pre>
     */
    public protocol_v1.V1TimeHash.HashLiteOrBuilder getAlgorithmHashOrBuilder() {
      return algorithmHash_ == null ? protocol_v1.V1TimeHash.HashLite.getDefaultInstance() : algorithmHash_;
    }

    public static final int WORKMODE_FIELD_NUMBER = 120;
    private int workMode_;
    /**
     * <code>optional int32 WorkMode = 120 [default = 0];</code>
     *
     * <pre>
     * 开机命令, 0: 无动作，3: 开机
     * </pre>
     */
    public boolean hasWorkMode() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 WorkMode = 120 [default = 0];</code>
     *
     * <pre>
     * 开机命令, 0: 无动作，3: 开机
     * </pre>
     */
    public int getWorkMode() {
      return workMode_;
    }

    public static final int FIRMWARE_FIELD_NUMBER = 130;
    private protocol_v1.V1Firmware.Firmware firmware_;
    /**
     * <code>optional .protocol_v1.Firmware Firmware = 130;</code>
     *
     * <pre>
     * 固件升级配置，同setting
     * </pre>
     */
    public boolean hasFirmware() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .protocol_v1.Firmware Firmware = 130;</code>
     *
     * <pre>
     * 固件升级配置，同setting
     * </pre>
     */
    public protocol_v1.V1Firmware.Firmware getFirmware() {
      return firmware_ == null ? protocol_v1.V1Firmware.Firmware.getDefaultInstance() : firmware_;
    }
    /**
     * <code>optional .protocol_v1.Firmware Firmware = 130;</code>
     *
     * <pre>
     * 固件升级配置，同setting
     * </pre>
     */
    public protocol_v1.V1Firmware.FirmwareOrBuilder getFirmwareOrBuilder() {
      return firmware_ == null ? protocol_v1.V1Firmware.Firmware.getDefaultInstance() : firmware_;
    }

    public static final int GATEWAYSTATUS_FIELD_NUMBER = 131;
    private protocol_v1.V1Register.GatewayStatus gatewayStatus_;
    /**
     * <code>optional .protocol_v1.GatewayStatus GatewayStatus = 131;</code>
     *
     * <pre>
     * 网关状态(废弃)
     * </pre>
     */
    public boolean hasGatewayStatus() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .protocol_v1.GatewayStatus GatewayStatus = 131;</code>
     *
     * <pre>
     * 网关状态(废弃)
     * </pre>
     */
    public protocol_v1.V1Register.GatewayStatus getGatewayStatus() {
      return gatewayStatus_ == null ? protocol_v1.V1Register.GatewayStatus.getDefaultInstance() : gatewayStatus_;
    }
    /**
     * <code>optional .protocol_v1.GatewayStatus GatewayStatus = 131;</code>
     *
     * <pre>
     * 网关状态(废弃)
     * </pre>
     */
    public protocol_v1.V1Register.GatewayStatusOrBuilder getGatewayStatusOrBuilder() {
      return gatewayStatus_ == null ? protocol_v1.V1Register.GatewayStatus.getDefaultInstance() : gatewayStatus_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasIden()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getIden().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getIden());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(101, simType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(102, userID_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(110, getSettingHash());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(112, getTriggerHash());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(113, getAlgorithmHash());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(120, workMode_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(130, getFirmware());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(131, getGatewayStatus());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getIden());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(101, simType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(102, userID_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(110, getSettingHash());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(112, getTriggerHash());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(113, getAlgorithmHash());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(120, workMode_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(130, getFirmware());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(131, getGatewayStatus());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static protocol_v1.V1Register.RegisterRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Register.RegisterRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Register.RegisterRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Register.RegisterRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Register.RegisterRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Register.RegisterRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Register.RegisterRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protocol_v1.V1Register.RegisterRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Register.RegisterRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Register.RegisterRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol_v1.V1Register.RegisterRsp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol_v1.RegisterRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol_v1.RegisterRsp)
        protocol_v1.V1Register.RegisterRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol_v1.V1Register.internal_static_protocol_v1_RegisterRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol_v1.V1Register.internal_static_protocol_v1_RegisterRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol_v1.V1Register.RegisterRsp.class, protocol_v1.V1Register.RegisterRsp.Builder.class);
      }

      // Construct using protocol_v1.V1Register.RegisterRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getIdenFieldBuilder();
          getSettingHashFieldBuilder();
          getTriggerHashFieldBuilder();
          getAlgorithmHashFieldBuilder();
          getFirmwareFieldBuilder();
          getGatewayStatusFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (idenBuilder_ == null) {
          iden_ = null;
        } else {
          idenBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        simType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        userID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (settingHashBuilder_ == null) {
          settingHash_ = null;
        } else {
          settingHashBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (triggerHashBuilder_ == null) {
          triggerHash_ = null;
        } else {
          triggerHashBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (algorithmHashBuilder_ == null) {
          algorithmHash_ = null;
        } else {
          algorithmHashBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        workMode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (firmwareBuilder_ == null) {
          firmware_ = null;
        } else {
          firmwareBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (gatewayStatusBuilder_ == null) {
          gatewayStatus_ = null;
        } else {
          gatewayStatusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol_v1.V1Register.internal_static_protocol_v1_RegisterRsp_descriptor;
      }

      public protocol_v1.V1Register.RegisterRsp getDefaultInstanceForType() {
        return protocol_v1.V1Register.RegisterRsp.getDefaultInstance();
      }

      public protocol_v1.V1Register.RegisterRsp build() {
        protocol_v1.V1Register.RegisterRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol_v1.V1Register.RegisterRsp buildPartial() {
        protocol_v1.V1Register.RegisterRsp result = new protocol_v1.V1Register.RegisterRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (idenBuilder_ == null) {
          result.iden_ = iden_;
        } else {
          result.iden_ = idenBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.simType_ = simType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.userID_ = userID_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (settingHashBuilder_ == null) {
          result.settingHash_ = settingHash_;
        } else {
          result.settingHash_ = settingHashBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (triggerHashBuilder_ == null) {
          result.triggerHash_ = triggerHash_;
        } else {
          result.triggerHash_ = triggerHashBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (algorithmHashBuilder_ == null) {
          result.algorithmHash_ = algorithmHash_;
        } else {
          result.algorithmHash_ = algorithmHashBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.workMode_ = workMode_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (firmwareBuilder_ == null) {
          result.firmware_ = firmware_;
        } else {
          result.firmware_ = firmwareBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        if (gatewayStatusBuilder_ == null) {
          result.gatewayStatus_ = gatewayStatus_;
        } else {
          result.gatewayStatus_ = gatewayStatusBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol_v1.V1Register.RegisterRsp) {
          return mergeFrom((protocol_v1.V1Register.RegisterRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol_v1.V1Register.RegisterRsp other) {
        if (other == protocol_v1.V1Register.RegisterRsp.getDefaultInstance()) return this;
        if (other.hasIden()) {
          mergeIden(other.getIden());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasSimType()) {
          setSimType(other.getSimType());
        }
        if (other.hasUserID()) {
          setUserID(other.getUserID());
        }
        if (other.hasSettingHash()) {
          mergeSettingHash(other.getSettingHash());
        }
        if (other.hasTriggerHash()) {
          mergeTriggerHash(other.getTriggerHash());
        }
        if (other.hasAlgorithmHash()) {
          mergeAlgorithmHash(other.getAlgorithmHash());
        }
        if (other.hasWorkMode()) {
          setWorkMode(other.getWorkMode());
        }
        if (other.hasFirmware()) {
          mergeFirmware(other.getFirmware());
        }
        if (other.hasGatewayStatus()) {
          mergeGatewayStatus(other.getGatewayStatus());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasIden()) {
          return false;
        }
        if (!hasTimestamp()) {
          return false;
        }
        if (!getIden().isInitialized()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol_v1.V1Register.RegisterRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol_v1.V1Register.RegisterRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private protocol_v1.V1IdentityMsg.IdentityMsg iden_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1IdentityMsg.IdentityMsg, protocol_v1.V1IdentityMsg.IdentityMsg.Builder, protocol_v1.V1IdentityMsg.IdentityMsgOrBuilder> idenBuilder_;
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public boolean hasIden() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public protocol_v1.V1IdentityMsg.IdentityMsg getIden() {
        if (idenBuilder_ == null) {
          return iden_ == null ? protocol_v1.V1IdentityMsg.IdentityMsg.getDefaultInstance() : iden_;
        } else {
          return idenBuilder_.getMessage();
        }
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public Builder setIden(protocol_v1.V1IdentityMsg.IdentityMsg value) {
        if (idenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          iden_ = value;
          onChanged();
        } else {
          idenBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public Builder setIden(
          protocol_v1.V1IdentityMsg.IdentityMsg.Builder builderForValue) {
        if (idenBuilder_ == null) {
          iden_ = builderForValue.build();
          onChanged();
        } else {
          idenBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public Builder mergeIden(protocol_v1.V1IdentityMsg.IdentityMsg value) {
        if (idenBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              iden_ != null &&
              iden_ != protocol_v1.V1IdentityMsg.IdentityMsg.getDefaultInstance()) {
            iden_ =
              protocol_v1.V1IdentityMsg.IdentityMsg.newBuilder(iden_).mergeFrom(value).buildPartial();
          } else {
            iden_ = value;
          }
          onChanged();
        } else {
          idenBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public Builder clearIden() {
        if (idenBuilder_ == null) {
          iden_ = null;
          onChanged();
        } else {
          idenBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public protocol_v1.V1IdentityMsg.IdentityMsg.Builder getIdenBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getIdenFieldBuilder().getBuilder();
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      public protocol_v1.V1IdentityMsg.IdentityMsgOrBuilder getIdenOrBuilder() {
        if (idenBuilder_ != null) {
          return idenBuilder_.getMessageOrBuilder();
        } else {
          return iden_ == null ?
              protocol_v1.V1IdentityMsg.IdentityMsg.getDefaultInstance() : iden_;
        }
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1IdentityMsg.IdentityMsg, protocol_v1.V1IdentityMsg.IdentityMsg.Builder, protocol_v1.V1IdentityMsg.IdentityMsgOrBuilder> 
          getIdenFieldBuilder() {
        if (idenBuilder_ == null) {
          idenBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1IdentityMsg.IdentityMsg, protocol_v1.V1IdentityMsg.IdentityMsg.Builder, protocol_v1.V1IdentityMsg.IdentityMsgOrBuilder>(
                  getIden(),
                  getParentForChildren(),
                  isClean());
          iden_ = null;
        }
        return idenBuilder_;
      }

      private int timestamp_ ;
      /**
       * <code>required uint32 Timestamp = 2;</code>
       *
       * <pre>
       * UTC时间戳，校时用
       * </pre>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 Timestamp = 2;</code>
       *
       * <pre>
       * UTC时间戳，校时用
       * </pre>
       */
      public int getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>required uint32 Timestamp = 2;</code>
       *
       * <pre>
       * UTC时间戳，校时用
       * </pre>
       */
      public Builder setTimestamp(int value) {
        bitField0_ |= 0x00000002;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 Timestamp = 2;</code>
       *
       * <pre>
       * UTC时间戳，校时用
       * </pre>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0;
        onChanged();
        return this;
      }

      private int simType_ ;
      /**
       * <code>optional int32 SimType = 101 [default = 0];</code>
       *
       * <pre>
       * SIM卡类型
       * </pre>
       */
      public boolean hasSimType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 SimType = 101 [default = 0];</code>
       *
       * <pre>
       * SIM卡类型
       * </pre>
       */
      public int getSimType() {
        return simType_;
      }
      /**
       * <code>optional int32 SimType = 101 [default = 0];</code>
       *
       * <pre>
       * SIM卡类型
       * </pre>
       */
      public Builder setSimType(int value) {
        bitField0_ |= 0x00000004;
        simType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 SimType = 101 [default = 0];</code>
       *
       * <pre>
       * SIM卡类型
       * </pre>
       */
      public Builder clearSimType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        simType_ = 0;
        onChanged();
        return this;
      }

      private int userID_ ;
      /**
       * <code>optional uint32 UserID = 102 [default = 0];</code>
       *
       * <pre>
       * UserID为crc16(userid)，如果计算出来结果为0x000，则加10返回，如结果为0xffff，则减10返回
       * </pre>
       */
      public boolean hasUserID() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 UserID = 102 [default = 0];</code>
       *
       * <pre>
       * UserID为crc16(userid)，如果计算出来结果为0x000，则加10返回，如结果为0xffff，则减10返回
       * </pre>
       */
      public int getUserID() {
        return userID_;
      }
      /**
       * <code>optional uint32 UserID = 102 [default = 0];</code>
       *
       * <pre>
       * UserID为crc16(userid)，如果计算出来结果为0x000，则加10返回，如结果为0xffff，则减10返回
       * </pre>
       */
      public Builder setUserID(int value) {
        bitField0_ |= 0x00000008;
        userID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 UserID = 102 [default = 0];</code>
       *
       * <pre>
       * UserID为crc16(userid)，如果计算出来结果为0x000，则加10返回，如结果为0xffff，则减10返回
       * </pre>
       */
      public Builder clearUserID() {
        bitField0_ = (bitField0_ & ~0x00000008);
        userID_ = 0;
        onChanged();
        return this;
      }

      private protocol_v1.V1TimeHash.Hash settingHash_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1TimeHash.Hash, protocol_v1.V1TimeHash.Hash.Builder, protocol_v1.V1TimeHash.HashOrBuilder> settingHashBuilder_;
      /**
       * <code>optional .protocol_v1.Hash SettingHash = 110;</code>
       *
       * <pre>
       * 各个配置hash
       * </pre>
       */
      public boolean hasSettingHash() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .protocol_v1.Hash SettingHash = 110;</code>
       *
       * <pre>
       * 各个配置hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.Hash getSettingHash() {
        if (settingHashBuilder_ == null) {
          return settingHash_ == null ? protocol_v1.V1TimeHash.Hash.getDefaultInstance() : settingHash_;
        } else {
          return settingHashBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.Hash SettingHash = 110;</code>
       *
       * <pre>
       * 各个配置hash
       * </pre>
       */
      public Builder setSettingHash(protocol_v1.V1TimeHash.Hash value) {
        if (settingHashBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          settingHash_ = value;
          onChanged();
        } else {
          settingHashBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Hash SettingHash = 110;</code>
       *
       * <pre>
       * 各个配置hash
       * </pre>
       */
      public Builder setSettingHash(
          protocol_v1.V1TimeHash.Hash.Builder builderForValue) {
        if (settingHashBuilder_ == null) {
          settingHash_ = builderForValue.build();
          onChanged();
        } else {
          settingHashBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Hash SettingHash = 110;</code>
       *
       * <pre>
       * 各个配置hash
       * </pre>
       */
      public Builder mergeSettingHash(protocol_v1.V1TimeHash.Hash value) {
        if (settingHashBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              settingHash_ != null &&
              settingHash_ != protocol_v1.V1TimeHash.Hash.getDefaultInstance()) {
            settingHash_ =
              protocol_v1.V1TimeHash.Hash.newBuilder(settingHash_).mergeFrom(value).buildPartial();
          } else {
            settingHash_ = value;
          }
          onChanged();
        } else {
          settingHashBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Hash SettingHash = 110;</code>
       *
       * <pre>
       * 各个配置hash
       * </pre>
       */
      public Builder clearSettingHash() {
        if (settingHashBuilder_ == null) {
          settingHash_ = null;
          onChanged();
        } else {
          settingHashBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .protocol_v1.Hash SettingHash = 110;</code>
       *
       * <pre>
       * 各个配置hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.Hash.Builder getSettingHashBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getSettingHashFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.Hash SettingHash = 110;</code>
       *
       * <pre>
       * 各个配置hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.HashOrBuilder getSettingHashOrBuilder() {
        if (settingHashBuilder_ != null) {
          return settingHashBuilder_.getMessageOrBuilder();
        } else {
          return settingHash_ == null ?
              protocol_v1.V1TimeHash.Hash.getDefaultInstance() : settingHash_;
        }
      }
      /**
       * <code>optional .protocol_v1.Hash SettingHash = 110;</code>
       *
       * <pre>
       * 各个配置hash
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1TimeHash.Hash, protocol_v1.V1TimeHash.Hash.Builder, protocol_v1.V1TimeHash.HashOrBuilder> 
          getSettingHashFieldBuilder() {
        if (settingHashBuilder_ == null) {
          settingHashBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1TimeHash.Hash, protocol_v1.V1TimeHash.Hash.Builder, protocol_v1.V1TimeHash.HashOrBuilder>(
                  getSettingHash(),
                  getParentForChildren(),
                  isClean());
          settingHash_ = null;
        }
        return settingHashBuilder_;
      }

      private protocol_v1.V1TimeHash.HashLite triggerHash_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1TimeHash.HashLite, protocol_v1.V1TimeHash.HashLite.Builder, protocol_v1.V1TimeHash.HashLiteOrBuilder> triggerHashBuilder_;
      /**
       * <code>optional .protocol_v1.HashLite TriggerHash = 112;</code>
       *
       * <pre>
       * 触发器hash
       * </pre>
       */
      public boolean hasTriggerHash() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .protocol_v1.HashLite TriggerHash = 112;</code>
       *
       * <pre>
       * 触发器hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.HashLite getTriggerHash() {
        if (triggerHashBuilder_ == null) {
          return triggerHash_ == null ? protocol_v1.V1TimeHash.HashLite.getDefaultInstance() : triggerHash_;
        } else {
          return triggerHashBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.HashLite TriggerHash = 112;</code>
       *
       * <pre>
       * 触发器hash
       * </pre>
       */
      public Builder setTriggerHash(protocol_v1.V1TimeHash.HashLite value) {
        if (triggerHashBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          triggerHash_ = value;
          onChanged();
        } else {
          triggerHashBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .protocol_v1.HashLite TriggerHash = 112;</code>
       *
       * <pre>
       * 触发器hash
       * </pre>
       */
      public Builder setTriggerHash(
          protocol_v1.V1TimeHash.HashLite.Builder builderForValue) {
        if (triggerHashBuilder_ == null) {
          triggerHash_ = builderForValue.build();
          onChanged();
        } else {
          triggerHashBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .protocol_v1.HashLite TriggerHash = 112;</code>
       *
       * <pre>
       * 触发器hash
       * </pre>
       */
      public Builder mergeTriggerHash(protocol_v1.V1TimeHash.HashLite value) {
        if (triggerHashBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              triggerHash_ != null &&
              triggerHash_ != protocol_v1.V1TimeHash.HashLite.getDefaultInstance()) {
            triggerHash_ =
              protocol_v1.V1TimeHash.HashLite.newBuilder(triggerHash_).mergeFrom(value).buildPartial();
          } else {
            triggerHash_ = value;
          }
          onChanged();
        } else {
          triggerHashBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .protocol_v1.HashLite TriggerHash = 112;</code>
       *
       * <pre>
       * 触发器hash
       * </pre>
       */
      public Builder clearTriggerHash() {
        if (triggerHashBuilder_ == null) {
          triggerHash_ = null;
          onChanged();
        } else {
          triggerHashBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .protocol_v1.HashLite TriggerHash = 112;</code>
       *
       * <pre>
       * 触发器hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.HashLite.Builder getTriggerHashBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getTriggerHashFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.HashLite TriggerHash = 112;</code>
       *
       * <pre>
       * 触发器hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.HashLiteOrBuilder getTriggerHashOrBuilder() {
        if (triggerHashBuilder_ != null) {
          return triggerHashBuilder_.getMessageOrBuilder();
        } else {
          return triggerHash_ == null ?
              protocol_v1.V1TimeHash.HashLite.getDefaultInstance() : triggerHash_;
        }
      }
      /**
       * <code>optional .protocol_v1.HashLite TriggerHash = 112;</code>
       *
       * <pre>
       * 触发器hash
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1TimeHash.HashLite, protocol_v1.V1TimeHash.HashLite.Builder, protocol_v1.V1TimeHash.HashLiteOrBuilder> 
          getTriggerHashFieldBuilder() {
        if (triggerHashBuilder_ == null) {
          triggerHashBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1TimeHash.HashLite, protocol_v1.V1TimeHash.HashLite.Builder, protocol_v1.V1TimeHash.HashLiteOrBuilder>(
                  getTriggerHash(),
                  getParentForChildren(),
                  isClean());
          triggerHash_ = null;
        }
        return triggerHashBuilder_;
      }

      private protocol_v1.V1TimeHash.HashLite algorithmHash_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1TimeHash.HashLite, protocol_v1.V1TimeHash.HashLite.Builder, protocol_v1.V1TimeHash.HashLiteOrBuilder> algorithmHashBuilder_;
      /**
       * <code>optional .protocol_v1.HashLite AlgorithmHash = 113;</code>
       *
       * <pre>
       * 算法配置hash
       * </pre>
       */
      public boolean hasAlgorithmHash() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .protocol_v1.HashLite AlgorithmHash = 113;</code>
       *
       * <pre>
       * 算法配置hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.HashLite getAlgorithmHash() {
        if (algorithmHashBuilder_ == null) {
          return algorithmHash_ == null ? protocol_v1.V1TimeHash.HashLite.getDefaultInstance() : algorithmHash_;
        } else {
          return algorithmHashBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.HashLite AlgorithmHash = 113;</code>
       *
       * <pre>
       * 算法配置hash
       * </pre>
       */
      public Builder setAlgorithmHash(protocol_v1.V1TimeHash.HashLite value) {
        if (algorithmHashBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          algorithmHash_ = value;
          onChanged();
        } else {
          algorithmHashBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .protocol_v1.HashLite AlgorithmHash = 113;</code>
       *
       * <pre>
       * 算法配置hash
       * </pre>
       */
      public Builder setAlgorithmHash(
          protocol_v1.V1TimeHash.HashLite.Builder builderForValue) {
        if (algorithmHashBuilder_ == null) {
          algorithmHash_ = builderForValue.build();
          onChanged();
        } else {
          algorithmHashBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .protocol_v1.HashLite AlgorithmHash = 113;</code>
       *
       * <pre>
       * 算法配置hash
       * </pre>
       */
      public Builder mergeAlgorithmHash(protocol_v1.V1TimeHash.HashLite value) {
        if (algorithmHashBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              algorithmHash_ != null &&
              algorithmHash_ != protocol_v1.V1TimeHash.HashLite.getDefaultInstance()) {
            algorithmHash_ =
              protocol_v1.V1TimeHash.HashLite.newBuilder(algorithmHash_).mergeFrom(value).buildPartial();
          } else {
            algorithmHash_ = value;
          }
          onChanged();
        } else {
          algorithmHashBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .protocol_v1.HashLite AlgorithmHash = 113;</code>
       *
       * <pre>
       * 算法配置hash
       * </pre>
       */
      public Builder clearAlgorithmHash() {
        if (algorithmHashBuilder_ == null) {
          algorithmHash_ = null;
          onChanged();
        } else {
          algorithmHashBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .protocol_v1.HashLite AlgorithmHash = 113;</code>
       *
       * <pre>
       * 算法配置hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.HashLite.Builder getAlgorithmHashBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getAlgorithmHashFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.HashLite AlgorithmHash = 113;</code>
       *
       * <pre>
       * 算法配置hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.HashLiteOrBuilder getAlgorithmHashOrBuilder() {
        if (algorithmHashBuilder_ != null) {
          return algorithmHashBuilder_.getMessageOrBuilder();
        } else {
          return algorithmHash_ == null ?
              protocol_v1.V1TimeHash.HashLite.getDefaultInstance() : algorithmHash_;
        }
      }
      /**
       * <code>optional .protocol_v1.HashLite AlgorithmHash = 113;</code>
       *
       * <pre>
       * 算法配置hash
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1TimeHash.HashLite, protocol_v1.V1TimeHash.HashLite.Builder, protocol_v1.V1TimeHash.HashLiteOrBuilder> 
          getAlgorithmHashFieldBuilder() {
        if (algorithmHashBuilder_ == null) {
          algorithmHashBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1TimeHash.HashLite, protocol_v1.V1TimeHash.HashLite.Builder, protocol_v1.V1TimeHash.HashLiteOrBuilder>(
                  getAlgorithmHash(),
                  getParentForChildren(),
                  isClean());
          algorithmHash_ = null;
        }
        return algorithmHashBuilder_;
      }

      private int workMode_ ;
      /**
       * <code>optional int32 WorkMode = 120 [default = 0];</code>
       *
       * <pre>
       * 开机命令, 0: 无动作，3: 开机
       * </pre>
       */
      public boolean hasWorkMode() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 WorkMode = 120 [default = 0];</code>
       *
       * <pre>
       * 开机命令, 0: 无动作，3: 开机
       * </pre>
       */
      public int getWorkMode() {
        return workMode_;
      }
      /**
       * <code>optional int32 WorkMode = 120 [default = 0];</code>
       *
       * <pre>
       * 开机命令, 0: 无动作，3: 开机
       * </pre>
       */
      public Builder setWorkMode(int value) {
        bitField0_ |= 0x00000080;
        workMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 WorkMode = 120 [default = 0];</code>
       *
       * <pre>
       * 开机命令, 0: 无动作，3: 开机
       * </pre>
       */
      public Builder clearWorkMode() {
        bitField0_ = (bitField0_ & ~0x00000080);
        workMode_ = 0;
        onChanged();
        return this;
      }

      private protocol_v1.V1Firmware.Firmware firmware_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Firmware.Firmware, protocol_v1.V1Firmware.Firmware.Builder, protocol_v1.V1Firmware.FirmwareOrBuilder> firmwareBuilder_;
      /**
       * <code>optional .protocol_v1.Firmware Firmware = 130;</code>
       *
       * <pre>
       * 固件升级配置，同setting
       * </pre>
       */
      public boolean hasFirmware() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .protocol_v1.Firmware Firmware = 130;</code>
       *
       * <pre>
       * 固件升级配置，同setting
       * </pre>
       */
      public protocol_v1.V1Firmware.Firmware getFirmware() {
        if (firmwareBuilder_ == null) {
          return firmware_ == null ? protocol_v1.V1Firmware.Firmware.getDefaultInstance() : firmware_;
        } else {
          return firmwareBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.Firmware Firmware = 130;</code>
       *
       * <pre>
       * 固件升级配置，同setting
       * </pre>
       */
      public Builder setFirmware(protocol_v1.V1Firmware.Firmware value) {
        if (firmwareBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          firmware_ = value;
          onChanged();
        } else {
          firmwareBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Firmware Firmware = 130;</code>
       *
       * <pre>
       * 固件升级配置，同setting
       * </pre>
       */
      public Builder setFirmware(
          protocol_v1.V1Firmware.Firmware.Builder builderForValue) {
        if (firmwareBuilder_ == null) {
          firmware_ = builderForValue.build();
          onChanged();
        } else {
          firmwareBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Firmware Firmware = 130;</code>
       *
       * <pre>
       * 固件升级配置，同setting
       * </pre>
       */
      public Builder mergeFirmware(protocol_v1.V1Firmware.Firmware value) {
        if (firmwareBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              firmware_ != null &&
              firmware_ != protocol_v1.V1Firmware.Firmware.getDefaultInstance()) {
            firmware_ =
              protocol_v1.V1Firmware.Firmware.newBuilder(firmware_).mergeFrom(value).buildPartial();
          } else {
            firmware_ = value;
          }
          onChanged();
        } else {
          firmwareBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Firmware Firmware = 130;</code>
       *
       * <pre>
       * 固件升级配置，同setting
       * </pre>
       */
      public Builder clearFirmware() {
        if (firmwareBuilder_ == null) {
          firmware_ = null;
          onChanged();
        } else {
          firmwareBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .protocol_v1.Firmware Firmware = 130;</code>
       *
       * <pre>
       * 固件升级配置，同setting
       * </pre>
       */
      public protocol_v1.V1Firmware.Firmware.Builder getFirmwareBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getFirmwareFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.Firmware Firmware = 130;</code>
       *
       * <pre>
       * 固件升级配置，同setting
       * </pre>
       */
      public protocol_v1.V1Firmware.FirmwareOrBuilder getFirmwareOrBuilder() {
        if (firmwareBuilder_ != null) {
          return firmwareBuilder_.getMessageOrBuilder();
        } else {
          return firmware_ == null ?
              protocol_v1.V1Firmware.Firmware.getDefaultInstance() : firmware_;
        }
      }
      /**
       * <code>optional .protocol_v1.Firmware Firmware = 130;</code>
       *
       * <pre>
       * 固件升级配置，同setting
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Firmware.Firmware, protocol_v1.V1Firmware.Firmware.Builder, protocol_v1.V1Firmware.FirmwareOrBuilder> 
          getFirmwareFieldBuilder() {
        if (firmwareBuilder_ == null) {
          firmwareBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1Firmware.Firmware, protocol_v1.V1Firmware.Firmware.Builder, protocol_v1.V1Firmware.FirmwareOrBuilder>(
                  getFirmware(),
                  getParentForChildren(),
                  isClean());
          firmware_ = null;
        }
        return firmwareBuilder_;
      }

      private protocol_v1.V1Register.GatewayStatus gatewayStatus_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Register.GatewayStatus, protocol_v1.V1Register.GatewayStatus.Builder, protocol_v1.V1Register.GatewayStatusOrBuilder> gatewayStatusBuilder_;
      /**
       * <code>optional .protocol_v1.GatewayStatus GatewayStatus = 131;</code>
       *
       * <pre>
       * 网关状态(废弃)
       * </pre>
       */
      public boolean hasGatewayStatus() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .protocol_v1.GatewayStatus GatewayStatus = 131;</code>
       *
       * <pre>
       * 网关状态(废弃)
       * </pre>
       */
      public protocol_v1.V1Register.GatewayStatus getGatewayStatus() {
        if (gatewayStatusBuilder_ == null) {
          return gatewayStatus_ == null ? protocol_v1.V1Register.GatewayStatus.getDefaultInstance() : gatewayStatus_;
        } else {
          return gatewayStatusBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.GatewayStatus GatewayStatus = 131;</code>
       *
       * <pre>
       * 网关状态(废弃)
       * </pre>
       */
      public Builder setGatewayStatus(protocol_v1.V1Register.GatewayStatus value) {
        if (gatewayStatusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gatewayStatus_ = value;
          onChanged();
        } else {
          gatewayStatusBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .protocol_v1.GatewayStatus GatewayStatus = 131;</code>
       *
       * <pre>
       * 网关状态(废弃)
       * </pre>
       */
      public Builder setGatewayStatus(
          protocol_v1.V1Register.GatewayStatus.Builder builderForValue) {
        if (gatewayStatusBuilder_ == null) {
          gatewayStatus_ = builderForValue.build();
          onChanged();
        } else {
          gatewayStatusBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .protocol_v1.GatewayStatus GatewayStatus = 131;</code>
       *
       * <pre>
       * 网关状态(废弃)
       * </pre>
       */
      public Builder mergeGatewayStatus(protocol_v1.V1Register.GatewayStatus value) {
        if (gatewayStatusBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              gatewayStatus_ != null &&
              gatewayStatus_ != protocol_v1.V1Register.GatewayStatus.getDefaultInstance()) {
            gatewayStatus_ =
              protocol_v1.V1Register.GatewayStatus.newBuilder(gatewayStatus_).mergeFrom(value).buildPartial();
          } else {
            gatewayStatus_ = value;
          }
          onChanged();
        } else {
          gatewayStatusBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .protocol_v1.GatewayStatus GatewayStatus = 131;</code>
       *
       * <pre>
       * 网关状态(废弃)
       * </pre>
       */
      public Builder clearGatewayStatus() {
        if (gatewayStatusBuilder_ == null) {
          gatewayStatus_ = null;
          onChanged();
        } else {
          gatewayStatusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .protocol_v1.GatewayStatus GatewayStatus = 131;</code>
       *
       * <pre>
       * 网关状态(废弃)
       * </pre>
       */
      public protocol_v1.V1Register.GatewayStatus.Builder getGatewayStatusBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getGatewayStatusFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.GatewayStatus GatewayStatus = 131;</code>
       *
       * <pre>
       * 网关状态(废弃)
       * </pre>
       */
      public protocol_v1.V1Register.GatewayStatusOrBuilder getGatewayStatusOrBuilder() {
        if (gatewayStatusBuilder_ != null) {
          return gatewayStatusBuilder_.getMessageOrBuilder();
        } else {
          return gatewayStatus_ == null ?
              protocol_v1.V1Register.GatewayStatus.getDefaultInstance() : gatewayStatus_;
        }
      }
      /**
       * <code>optional .protocol_v1.GatewayStatus GatewayStatus = 131;</code>
       *
       * <pre>
       * 网关状态(废弃)
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1Register.GatewayStatus, protocol_v1.V1Register.GatewayStatus.Builder, protocol_v1.V1Register.GatewayStatusOrBuilder> 
          getGatewayStatusFieldBuilder() {
        if (gatewayStatusBuilder_ == null) {
          gatewayStatusBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1Register.GatewayStatus, protocol_v1.V1Register.GatewayStatus.Builder, protocol_v1.V1Register.GatewayStatusOrBuilder>(
                  getGatewayStatus(),
                  getParentForChildren(),
                  isClean());
          gatewayStatus_ = null;
        }
        return gatewayStatusBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:protocol_v1.RegisterRsp)
    }

    // @@protoc_insertion_point(class_scope:protocol_v1.RegisterRsp)
    private static final protocol_v1.V1Register.RegisterRsp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol_v1.V1Register.RegisterRsp();
    }

    public static protocol_v1.V1Register.RegisterRsp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RegisterRsp>
        PARSER = new com.google.protobuf.AbstractParser<RegisterRsp>() {
      public RegisterRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new RegisterRsp(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<RegisterRsp> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RegisterRsp> getParserForType() {
      return PARSER;
    }

    public protocol_v1.V1Register.RegisterRsp getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GatewayStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol_v1.GatewayStatus)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .protocol_v1.Hash GatewaySettingHash = 1;</code>
     *
     * <pre>
     * gateway setting hash
     * </pre>
     */
    boolean hasGatewaySettingHash();
    /**
     * <code>optional .protocol_v1.Hash GatewaySettingHash = 1;</code>
     *
     * <pre>
     * gateway setting hash
     * </pre>
     */
    protocol_v1.V1TimeHash.Hash getGatewaySettingHash();
    /**
     * <code>optional .protocol_v1.Hash GatewaySettingHash = 1;</code>
     *
     * <pre>
     * gateway setting hash
     * </pre>
     */
    protocol_v1.V1TimeHash.HashOrBuilder getGatewaySettingHashOrBuilder();

    /**
     * <code>optional .protocol_v1.HashLite GatewayWhiteHash = 2;</code>
     *
     * <pre>
     * gateway white hash
     * </pre>
     */
    boolean hasGatewayWhiteHash();
    /**
     * <code>optional .protocol_v1.HashLite GatewayWhiteHash = 2;</code>
     *
     * <pre>
     * gateway white hash
     * </pre>
     */
    protocol_v1.V1TimeHash.HashLite getGatewayWhiteHash();
    /**
     * <code>optional .protocol_v1.HashLite GatewayWhiteHash = 2;</code>
     *
     * <pre>
     * gateway white hash
     * </pre>
     */
    protocol_v1.V1TimeHash.HashLiteOrBuilder getGatewayWhiteHashOrBuilder();

    /**
     * <code>repeated .protocol_v1.HashLite TerminalSettingHash = 3;</code>
     *
     * <pre>
     * terminal's setting hash
     * </pre>
     */
    java.util.List<protocol_v1.V1TimeHash.HashLite> 
        getTerminalSettingHashList();
    /**
     * <code>repeated .protocol_v1.HashLite TerminalSettingHash = 3;</code>
     *
     * <pre>
     * terminal's setting hash
     * </pre>
     */
    protocol_v1.V1TimeHash.HashLite getTerminalSettingHash(int index);
    /**
     * <code>repeated .protocol_v1.HashLite TerminalSettingHash = 3;</code>
     *
     * <pre>
     * terminal's setting hash
     * </pre>
     */
    int getTerminalSettingHashCount();
    /**
     * <code>repeated .protocol_v1.HashLite TerminalSettingHash = 3;</code>
     *
     * <pre>
     * terminal's setting hash
     * </pre>
     */
    java.util.List<? extends protocol_v1.V1TimeHash.HashLiteOrBuilder> 
        getTerminalSettingHashOrBuilderList();
    /**
     * <code>repeated .protocol_v1.HashLite TerminalSettingHash = 3;</code>
     *
     * <pre>
     * terminal's setting hash
     * </pre>
     */
    protocol_v1.V1TimeHash.HashLiteOrBuilder getTerminalSettingHashOrBuilder(
        int index);

    /**
     * <code>repeated .protocol_v1.HashLite TerminalParameterHash = 4;</code>
     *
     * <pre>
     * terminal's parameter hash
     * </pre>
     */
    java.util.List<protocol_v1.V1TimeHash.HashLite> 
        getTerminalParameterHashList();
    /**
     * <code>repeated .protocol_v1.HashLite TerminalParameterHash = 4;</code>
     *
     * <pre>
     * terminal's parameter hash
     * </pre>
     */
    protocol_v1.V1TimeHash.HashLite getTerminalParameterHash(int index);
    /**
     * <code>repeated .protocol_v1.HashLite TerminalParameterHash = 4;</code>
     *
     * <pre>
     * terminal's parameter hash
     * </pre>
     */
    int getTerminalParameterHashCount();
    /**
     * <code>repeated .protocol_v1.HashLite TerminalParameterHash = 4;</code>
     *
     * <pre>
     * terminal's parameter hash
     * </pre>
     */
    java.util.List<? extends protocol_v1.V1TimeHash.HashLiteOrBuilder> 
        getTerminalParameterHashOrBuilderList();
    /**
     * <code>repeated .protocol_v1.HashLite TerminalParameterHash = 4;</code>
     *
     * <pre>
     * terminal's parameter hash
     * </pre>
     */
    protocol_v1.V1TimeHash.HashLiteOrBuilder getTerminalParameterHashOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code protocol_v1.GatewayStatus}
   */
  public  static final class GatewayStatus extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protocol_v1.GatewayStatus)
      GatewayStatusOrBuilder {
    // Use GatewayStatus.newBuilder() to construct.
    private GatewayStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private GatewayStatus() {
      terminalSettingHash_ = java.util.Collections.emptyList();
      terminalParameterHash_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GatewayStatus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protocol_v1.V1TimeHash.Hash.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = gatewaySettingHash_.toBuilder();
              }
              gatewaySettingHash_ = input.readMessage(protocol_v1.V1TimeHash.Hash.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gatewaySettingHash_);
                gatewaySettingHash_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              protocol_v1.V1TimeHash.HashLite.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = gatewayWhiteHash_.toBuilder();
              }
              gatewayWhiteHash_ = input.readMessage(protocol_v1.V1TimeHash.HashLite.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gatewayWhiteHash_);
                gatewayWhiteHash_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                terminalSettingHash_ = new java.util.ArrayList<protocol_v1.V1TimeHash.HashLite>();
                mutable_bitField0_ |= 0x00000004;
              }
              terminalSettingHash_.add(input.readMessage(protocol_v1.V1TimeHash.HashLite.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                terminalParameterHash_ = new java.util.ArrayList<protocol_v1.V1TimeHash.HashLite>();
                mutable_bitField0_ |= 0x00000008;
              }
              terminalParameterHash_.add(input.readMessage(protocol_v1.V1TimeHash.HashLite.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          terminalSettingHash_ = java.util.Collections.unmodifiableList(terminalSettingHash_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          terminalParameterHash_ = java.util.Collections.unmodifiableList(terminalParameterHash_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol_v1.V1Register.internal_static_protocol_v1_GatewayStatus_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol_v1.V1Register.internal_static_protocol_v1_GatewayStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol_v1.V1Register.GatewayStatus.class, protocol_v1.V1Register.GatewayStatus.Builder.class);
    }

    private int bitField0_;
    public static final int GATEWAYSETTINGHASH_FIELD_NUMBER = 1;
    private protocol_v1.V1TimeHash.Hash gatewaySettingHash_;
    /**
     * <code>optional .protocol_v1.Hash GatewaySettingHash = 1;</code>
     *
     * <pre>
     * gateway setting hash
     * </pre>
     */
    public boolean hasGatewaySettingHash() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .protocol_v1.Hash GatewaySettingHash = 1;</code>
     *
     * <pre>
     * gateway setting hash
     * </pre>
     */
    public protocol_v1.V1TimeHash.Hash getGatewaySettingHash() {
      return gatewaySettingHash_ == null ? protocol_v1.V1TimeHash.Hash.getDefaultInstance() : gatewaySettingHash_;
    }
    /**
     * <code>optional .protocol_v1.Hash GatewaySettingHash = 1;</code>
     *
     * <pre>
     * gateway setting hash
     * </pre>
     */
    public protocol_v1.V1TimeHash.HashOrBuilder getGatewaySettingHashOrBuilder() {
      return gatewaySettingHash_ == null ? protocol_v1.V1TimeHash.Hash.getDefaultInstance() : gatewaySettingHash_;
    }

    public static final int GATEWAYWHITEHASH_FIELD_NUMBER = 2;
    private protocol_v1.V1TimeHash.HashLite gatewayWhiteHash_;
    /**
     * <code>optional .protocol_v1.HashLite GatewayWhiteHash = 2;</code>
     *
     * <pre>
     * gateway white hash
     * </pre>
     */
    public boolean hasGatewayWhiteHash() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .protocol_v1.HashLite GatewayWhiteHash = 2;</code>
     *
     * <pre>
     * gateway white hash
     * </pre>
     */
    public protocol_v1.V1TimeHash.HashLite getGatewayWhiteHash() {
      return gatewayWhiteHash_ == null ? protocol_v1.V1TimeHash.HashLite.getDefaultInstance() : gatewayWhiteHash_;
    }
    /**
     * <code>optional .protocol_v1.HashLite GatewayWhiteHash = 2;</code>
     *
     * <pre>
     * gateway white hash
     * </pre>
     */
    public protocol_v1.V1TimeHash.HashLiteOrBuilder getGatewayWhiteHashOrBuilder() {
      return gatewayWhiteHash_ == null ? protocol_v1.V1TimeHash.HashLite.getDefaultInstance() : gatewayWhiteHash_;
    }

    public static final int TERMINALSETTINGHASH_FIELD_NUMBER = 3;
    private java.util.List<protocol_v1.V1TimeHash.HashLite> terminalSettingHash_;
    /**
     * <code>repeated .protocol_v1.HashLite TerminalSettingHash = 3;</code>
     *
     * <pre>
     * terminal's setting hash
     * </pre>
     */
    public java.util.List<protocol_v1.V1TimeHash.HashLite> getTerminalSettingHashList() {
      return terminalSettingHash_;
    }
    /**
     * <code>repeated .protocol_v1.HashLite TerminalSettingHash = 3;</code>
     *
     * <pre>
     * terminal's setting hash
     * </pre>
     */
    public java.util.List<? extends protocol_v1.V1TimeHash.HashLiteOrBuilder> 
        getTerminalSettingHashOrBuilderList() {
      return terminalSettingHash_;
    }
    /**
     * <code>repeated .protocol_v1.HashLite TerminalSettingHash = 3;</code>
     *
     * <pre>
     * terminal's setting hash
     * </pre>
     */
    public int getTerminalSettingHashCount() {
      return terminalSettingHash_.size();
    }
    /**
     * <code>repeated .protocol_v1.HashLite TerminalSettingHash = 3;</code>
     *
     * <pre>
     * terminal's setting hash
     * </pre>
     */
    public protocol_v1.V1TimeHash.HashLite getTerminalSettingHash(int index) {
      return terminalSettingHash_.get(index);
    }
    /**
     * <code>repeated .protocol_v1.HashLite TerminalSettingHash = 3;</code>
     *
     * <pre>
     * terminal's setting hash
     * </pre>
     */
    public protocol_v1.V1TimeHash.HashLiteOrBuilder getTerminalSettingHashOrBuilder(
        int index) {
      return terminalSettingHash_.get(index);
    }

    public static final int TERMINALPARAMETERHASH_FIELD_NUMBER = 4;
    private java.util.List<protocol_v1.V1TimeHash.HashLite> terminalParameterHash_;
    /**
     * <code>repeated .protocol_v1.HashLite TerminalParameterHash = 4;</code>
     *
     * <pre>
     * terminal's parameter hash
     * </pre>
     */
    public java.util.List<protocol_v1.V1TimeHash.HashLite> getTerminalParameterHashList() {
      return terminalParameterHash_;
    }
    /**
     * <code>repeated .protocol_v1.HashLite TerminalParameterHash = 4;</code>
     *
     * <pre>
     * terminal's parameter hash
     * </pre>
     */
    public java.util.List<? extends protocol_v1.V1TimeHash.HashLiteOrBuilder> 
        getTerminalParameterHashOrBuilderList() {
      return terminalParameterHash_;
    }
    /**
     * <code>repeated .protocol_v1.HashLite TerminalParameterHash = 4;</code>
     *
     * <pre>
     * terminal's parameter hash
     * </pre>
     */
    public int getTerminalParameterHashCount() {
      return terminalParameterHash_.size();
    }
    /**
     * <code>repeated .protocol_v1.HashLite TerminalParameterHash = 4;</code>
     *
     * <pre>
     * terminal's parameter hash
     * </pre>
     */
    public protocol_v1.V1TimeHash.HashLite getTerminalParameterHash(int index) {
      return terminalParameterHash_.get(index);
    }
    /**
     * <code>repeated .protocol_v1.HashLite TerminalParameterHash = 4;</code>
     *
     * <pre>
     * terminal's parameter hash
     * </pre>
     */
    public protocol_v1.V1TimeHash.HashLiteOrBuilder getTerminalParameterHashOrBuilder(
        int index) {
      return terminalParameterHash_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getGatewaySettingHash());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getGatewayWhiteHash());
      }
      for (int i = 0; i < terminalSettingHash_.size(); i++) {
        output.writeMessage(3, terminalSettingHash_.get(i));
      }
      for (int i = 0; i < terminalParameterHash_.size(); i++) {
        output.writeMessage(4, terminalParameterHash_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getGatewaySettingHash());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getGatewayWhiteHash());
      }
      for (int i = 0; i < terminalSettingHash_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, terminalSettingHash_.get(i));
      }
      for (int i = 0; i < terminalParameterHash_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, terminalParameterHash_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static protocol_v1.V1Register.GatewayStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Register.GatewayStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Register.GatewayStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1Register.GatewayStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1Register.GatewayStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Register.GatewayStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Register.GatewayStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protocol_v1.V1Register.GatewayStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1Register.GatewayStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1Register.GatewayStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol_v1.V1Register.GatewayStatus prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol_v1.GatewayStatus}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol_v1.GatewayStatus)
        protocol_v1.V1Register.GatewayStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol_v1.V1Register.internal_static_protocol_v1_GatewayStatus_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol_v1.V1Register.internal_static_protocol_v1_GatewayStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol_v1.V1Register.GatewayStatus.class, protocol_v1.V1Register.GatewayStatus.Builder.class);
      }

      // Construct using protocol_v1.V1Register.GatewayStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getGatewaySettingHashFieldBuilder();
          getGatewayWhiteHashFieldBuilder();
          getTerminalSettingHashFieldBuilder();
          getTerminalParameterHashFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (gatewaySettingHashBuilder_ == null) {
          gatewaySettingHash_ = null;
        } else {
          gatewaySettingHashBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (gatewayWhiteHashBuilder_ == null) {
          gatewayWhiteHash_ = null;
        } else {
          gatewayWhiteHashBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (terminalSettingHashBuilder_ == null) {
          terminalSettingHash_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          terminalSettingHashBuilder_.clear();
        }
        if (terminalParameterHashBuilder_ == null) {
          terminalParameterHash_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          terminalParameterHashBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol_v1.V1Register.internal_static_protocol_v1_GatewayStatus_descriptor;
      }

      public protocol_v1.V1Register.GatewayStatus getDefaultInstanceForType() {
        return protocol_v1.V1Register.GatewayStatus.getDefaultInstance();
      }

      public protocol_v1.V1Register.GatewayStatus build() {
        protocol_v1.V1Register.GatewayStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol_v1.V1Register.GatewayStatus buildPartial() {
        protocol_v1.V1Register.GatewayStatus result = new protocol_v1.V1Register.GatewayStatus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (gatewaySettingHashBuilder_ == null) {
          result.gatewaySettingHash_ = gatewaySettingHash_;
        } else {
          result.gatewaySettingHash_ = gatewaySettingHashBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (gatewayWhiteHashBuilder_ == null) {
          result.gatewayWhiteHash_ = gatewayWhiteHash_;
        } else {
          result.gatewayWhiteHash_ = gatewayWhiteHashBuilder_.build();
        }
        if (terminalSettingHashBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            terminalSettingHash_ = java.util.Collections.unmodifiableList(terminalSettingHash_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.terminalSettingHash_ = terminalSettingHash_;
        } else {
          result.terminalSettingHash_ = terminalSettingHashBuilder_.build();
        }
        if (terminalParameterHashBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            terminalParameterHash_ = java.util.Collections.unmodifiableList(terminalParameterHash_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.terminalParameterHash_ = terminalParameterHash_;
        } else {
          result.terminalParameterHash_ = terminalParameterHashBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol_v1.V1Register.GatewayStatus) {
          return mergeFrom((protocol_v1.V1Register.GatewayStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol_v1.V1Register.GatewayStatus other) {
        if (other == protocol_v1.V1Register.GatewayStatus.getDefaultInstance()) return this;
        if (other.hasGatewaySettingHash()) {
          mergeGatewaySettingHash(other.getGatewaySettingHash());
        }
        if (other.hasGatewayWhiteHash()) {
          mergeGatewayWhiteHash(other.getGatewayWhiteHash());
        }
        if (terminalSettingHashBuilder_ == null) {
          if (!other.terminalSettingHash_.isEmpty()) {
            if (terminalSettingHash_.isEmpty()) {
              terminalSettingHash_ = other.terminalSettingHash_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureTerminalSettingHashIsMutable();
              terminalSettingHash_.addAll(other.terminalSettingHash_);
            }
            onChanged();
          }
        } else {
          if (!other.terminalSettingHash_.isEmpty()) {
            if (terminalSettingHashBuilder_.isEmpty()) {
              terminalSettingHashBuilder_.dispose();
              terminalSettingHashBuilder_ = null;
              terminalSettingHash_ = other.terminalSettingHash_;
              bitField0_ = (bitField0_ & ~0x00000004);
              terminalSettingHashBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTerminalSettingHashFieldBuilder() : null;
            } else {
              terminalSettingHashBuilder_.addAllMessages(other.terminalSettingHash_);
            }
          }
        }
        if (terminalParameterHashBuilder_ == null) {
          if (!other.terminalParameterHash_.isEmpty()) {
            if (terminalParameterHash_.isEmpty()) {
              terminalParameterHash_ = other.terminalParameterHash_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureTerminalParameterHashIsMutable();
              terminalParameterHash_.addAll(other.terminalParameterHash_);
            }
            onChanged();
          }
        } else {
          if (!other.terminalParameterHash_.isEmpty()) {
            if (terminalParameterHashBuilder_.isEmpty()) {
              terminalParameterHashBuilder_.dispose();
              terminalParameterHashBuilder_ = null;
              terminalParameterHash_ = other.terminalParameterHash_;
              bitField0_ = (bitField0_ & ~0x00000008);
              terminalParameterHashBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTerminalParameterHashFieldBuilder() : null;
            } else {
              terminalParameterHashBuilder_.addAllMessages(other.terminalParameterHash_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol_v1.V1Register.GatewayStatus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol_v1.V1Register.GatewayStatus) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private protocol_v1.V1TimeHash.Hash gatewaySettingHash_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1TimeHash.Hash, protocol_v1.V1TimeHash.Hash.Builder, protocol_v1.V1TimeHash.HashOrBuilder> gatewaySettingHashBuilder_;
      /**
       * <code>optional .protocol_v1.Hash GatewaySettingHash = 1;</code>
       *
       * <pre>
       * gateway setting hash
       * </pre>
       */
      public boolean hasGatewaySettingHash() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .protocol_v1.Hash GatewaySettingHash = 1;</code>
       *
       * <pre>
       * gateway setting hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.Hash getGatewaySettingHash() {
        if (gatewaySettingHashBuilder_ == null) {
          return gatewaySettingHash_ == null ? protocol_v1.V1TimeHash.Hash.getDefaultInstance() : gatewaySettingHash_;
        } else {
          return gatewaySettingHashBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.Hash GatewaySettingHash = 1;</code>
       *
       * <pre>
       * gateway setting hash
       * </pre>
       */
      public Builder setGatewaySettingHash(protocol_v1.V1TimeHash.Hash value) {
        if (gatewaySettingHashBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gatewaySettingHash_ = value;
          onChanged();
        } else {
          gatewaySettingHashBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Hash GatewaySettingHash = 1;</code>
       *
       * <pre>
       * gateway setting hash
       * </pre>
       */
      public Builder setGatewaySettingHash(
          protocol_v1.V1TimeHash.Hash.Builder builderForValue) {
        if (gatewaySettingHashBuilder_ == null) {
          gatewaySettingHash_ = builderForValue.build();
          onChanged();
        } else {
          gatewaySettingHashBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Hash GatewaySettingHash = 1;</code>
       *
       * <pre>
       * gateway setting hash
       * </pre>
       */
      public Builder mergeGatewaySettingHash(protocol_v1.V1TimeHash.Hash value) {
        if (gatewaySettingHashBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              gatewaySettingHash_ != null &&
              gatewaySettingHash_ != protocol_v1.V1TimeHash.Hash.getDefaultInstance()) {
            gatewaySettingHash_ =
              protocol_v1.V1TimeHash.Hash.newBuilder(gatewaySettingHash_).mergeFrom(value).buildPartial();
          } else {
            gatewaySettingHash_ = value;
          }
          onChanged();
        } else {
          gatewaySettingHashBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .protocol_v1.Hash GatewaySettingHash = 1;</code>
       *
       * <pre>
       * gateway setting hash
       * </pre>
       */
      public Builder clearGatewaySettingHash() {
        if (gatewaySettingHashBuilder_ == null) {
          gatewaySettingHash_ = null;
          onChanged();
        } else {
          gatewaySettingHashBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .protocol_v1.Hash GatewaySettingHash = 1;</code>
       *
       * <pre>
       * gateway setting hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.Hash.Builder getGatewaySettingHashBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getGatewaySettingHashFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.Hash GatewaySettingHash = 1;</code>
       *
       * <pre>
       * gateway setting hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.HashOrBuilder getGatewaySettingHashOrBuilder() {
        if (gatewaySettingHashBuilder_ != null) {
          return gatewaySettingHashBuilder_.getMessageOrBuilder();
        } else {
          return gatewaySettingHash_ == null ?
              protocol_v1.V1TimeHash.Hash.getDefaultInstance() : gatewaySettingHash_;
        }
      }
      /**
       * <code>optional .protocol_v1.Hash GatewaySettingHash = 1;</code>
       *
       * <pre>
       * gateway setting hash
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1TimeHash.Hash, protocol_v1.V1TimeHash.Hash.Builder, protocol_v1.V1TimeHash.HashOrBuilder> 
          getGatewaySettingHashFieldBuilder() {
        if (gatewaySettingHashBuilder_ == null) {
          gatewaySettingHashBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1TimeHash.Hash, protocol_v1.V1TimeHash.Hash.Builder, protocol_v1.V1TimeHash.HashOrBuilder>(
                  getGatewaySettingHash(),
                  getParentForChildren(),
                  isClean());
          gatewaySettingHash_ = null;
        }
        return gatewaySettingHashBuilder_;
      }

      private protocol_v1.V1TimeHash.HashLite gatewayWhiteHash_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1TimeHash.HashLite, protocol_v1.V1TimeHash.HashLite.Builder, protocol_v1.V1TimeHash.HashLiteOrBuilder> gatewayWhiteHashBuilder_;
      /**
       * <code>optional .protocol_v1.HashLite GatewayWhiteHash = 2;</code>
       *
       * <pre>
       * gateway white hash
       * </pre>
       */
      public boolean hasGatewayWhiteHash() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .protocol_v1.HashLite GatewayWhiteHash = 2;</code>
       *
       * <pre>
       * gateway white hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.HashLite getGatewayWhiteHash() {
        if (gatewayWhiteHashBuilder_ == null) {
          return gatewayWhiteHash_ == null ? protocol_v1.V1TimeHash.HashLite.getDefaultInstance() : gatewayWhiteHash_;
        } else {
          return gatewayWhiteHashBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protocol_v1.HashLite GatewayWhiteHash = 2;</code>
       *
       * <pre>
       * gateway white hash
       * </pre>
       */
      public Builder setGatewayWhiteHash(protocol_v1.V1TimeHash.HashLite value) {
        if (gatewayWhiteHashBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gatewayWhiteHash_ = value;
          onChanged();
        } else {
          gatewayWhiteHashBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .protocol_v1.HashLite GatewayWhiteHash = 2;</code>
       *
       * <pre>
       * gateway white hash
       * </pre>
       */
      public Builder setGatewayWhiteHash(
          protocol_v1.V1TimeHash.HashLite.Builder builderForValue) {
        if (gatewayWhiteHashBuilder_ == null) {
          gatewayWhiteHash_ = builderForValue.build();
          onChanged();
        } else {
          gatewayWhiteHashBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .protocol_v1.HashLite GatewayWhiteHash = 2;</code>
       *
       * <pre>
       * gateway white hash
       * </pre>
       */
      public Builder mergeGatewayWhiteHash(protocol_v1.V1TimeHash.HashLite value) {
        if (gatewayWhiteHashBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              gatewayWhiteHash_ != null &&
              gatewayWhiteHash_ != protocol_v1.V1TimeHash.HashLite.getDefaultInstance()) {
            gatewayWhiteHash_ =
              protocol_v1.V1TimeHash.HashLite.newBuilder(gatewayWhiteHash_).mergeFrom(value).buildPartial();
          } else {
            gatewayWhiteHash_ = value;
          }
          onChanged();
        } else {
          gatewayWhiteHashBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .protocol_v1.HashLite GatewayWhiteHash = 2;</code>
       *
       * <pre>
       * gateway white hash
       * </pre>
       */
      public Builder clearGatewayWhiteHash() {
        if (gatewayWhiteHashBuilder_ == null) {
          gatewayWhiteHash_ = null;
          onChanged();
        } else {
          gatewayWhiteHashBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .protocol_v1.HashLite GatewayWhiteHash = 2;</code>
       *
       * <pre>
       * gateway white hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.HashLite.Builder getGatewayWhiteHashBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getGatewayWhiteHashFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protocol_v1.HashLite GatewayWhiteHash = 2;</code>
       *
       * <pre>
       * gateway white hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.HashLiteOrBuilder getGatewayWhiteHashOrBuilder() {
        if (gatewayWhiteHashBuilder_ != null) {
          return gatewayWhiteHashBuilder_.getMessageOrBuilder();
        } else {
          return gatewayWhiteHash_ == null ?
              protocol_v1.V1TimeHash.HashLite.getDefaultInstance() : gatewayWhiteHash_;
        }
      }
      /**
       * <code>optional .protocol_v1.HashLite GatewayWhiteHash = 2;</code>
       *
       * <pre>
       * gateway white hash
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1TimeHash.HashLite, protocol_v1.V1TimeHash.HashLite.Builder, protocol_v1.V1TimeHash.HashLiteOrBuilder> 
          getGatewayWhiteHashFieldBuilder() {
        if (gatewayWhiteHashBuilder_ == null) {
          gatewayWhiteHashBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1TimeHash.HashLite, protocol_v1.V1TimeHash.HashLite.Builder, protocol_v1.V1TimeHash.HashLiteOrBuilder>(
                  getGatewayWhiteHash(),
                  getParentForChildren(),
                  isClean());
          gatewayWhiteHash_ = null;
        }
        return gatewayWhiteHashBuilder_;
      }

      private java.util.List<protocol_v1.V1TimeHash.HashLite> terminalSettingHash_ =
        java.util.Collections.emptyList();
      private void ensureTerminalSettingHashIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          terminalSettingHash_ = new java.util.ArrayList<protocol_v1.V1TimeHash.HashLite>(terminalSettingHash_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protocol_v1.V1TimeHash.HashLite, protocol_v1.V1TimeHash.HashLite.Builder, protocol_v1.V1TimeHash.HashLiteOrBuilder> terminalSettingHashBuilder_;

      /**
       * <code>repeated .protocol_v1.HashLite TerminalSettingHash = 3;</code>
       *
       * <pre>
       * terminal's setting hash
       * </pre>
       */
      public java.util.List<protocol_v1.V1TimeHash.HashLite> getTerminalSettingHashList() {
        if (terminalSettingHashBuilder_ == null) {
          return java.util.Collections.unmodifiableList(terminalSettingHash_);
        } else {
          return terminalSettingHashBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalSettingHash = 3;</code>
       *
       * <pre>
       * terminal's setting hash
       * </pre>
       */
      public int getTerminalSettingHashCount() {
        if (terminalSettingHashBuilder_ == null) {
          return terminalSettingHash_.size();
        } else {
          return terminalSettingHashBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalSettingHash = 3;</code>
       *
       * <pre>
       * terminal's setting hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.HashLite getTerminalSettingHash(int index) {
        if (terminalSettingHashBuilder_ == null) {
          return terminalSettingHash_.get(index);
        } else {
          return terminalSettingHashBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalSettingHash = 3;</code>
       *
       * <pre>
       * terminal's setting hash
       * </pre>
       */
      public Builder setTerminalSettingHash(
          int index, protocol_v1.V1TimeHash.HashLite value) {
        if (terminalSettingHashBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTerminalSettingHashIsMutable();
          terminalSettingHash_.set(index, value);
          onChanged();
        } else {
          terminalSettingHashBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalSettingHash = 3;</code>
       *
       * <pre>
       * terminal's setting hash
       * </pre>
       */
      public Builder setTerminalSettingHash(
          int index, protocol_v1.V1TimeHash.HashLite.Builder builderForValue) {
        if (terminalSettingHashBuilder_ == null) {
          ensureTerminalSettingHashIsMutable();
          terminalSettingHash_.set(index, builderForValue.build());
          onChanged();
        } else {
          terminalSettingHashBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalSettingHash = 3;</code>
       *
       * <pre>
       * terminal's setting hash
       * </pre>
       */
      public Builder addTerminalSettingHash(protocol_v1.V1TimeHash.HashLite value) {
        if (terminalSettingHashBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTerminalSettingHashIsMutable();
          terminalSettingHash_.add(value);
          onChanged();
        } else {
          terminalSettingHashBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalSettingHash = 3;</code>
       *
       * <pre>
       * terminal's setting hash
       * </pre>
       */
      public Builder addTerminalSettingHash(
          int index, protocol_v1.V1TimeHash.HashLite value) {
        if (terminalSettingHashBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTerminalSettingHashIsMutable();
          terminalSettingHash_.add(index, value);
          onChanged();
        } else {
          terminalSettingHashBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalSettingHash = 3;</code>
       *
       * <pre>
       * terminal's setting hash
       * </pre>
       */
      public Builder addTerminalSettingHash(
          protocol_v1.V1TimeHash.HashLite.Builder builderForValue) {
        if (terminalSettingHashBuilder_ == null) {
          ensureTerminalSettingHashIsMutable();
          terminalSettingHash_.add(builderForValue.build());
          onChanged();
        } else {
          terminalSettingHashBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalSettingHash = 3;</code>
       *
       * <pre>
       * terminal's setting hash
       * </pre>
       */
      public Builder addTerminalSettingHash(
          int index, protocol_v1.V1TimeHash.HashLite.Builder builderForValue) {
        if (terminalSettingHashBuilder_ == null) {
          ensureTerminalSettingHashIsMutable();
          terminalSettingHash_.add(index, builderForValue.build());
          onChanged();
        } else {
          terminalSettingHashBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalSettingHash = 3;</code>
       *
       * <pre>
       * terminal's setting hash
       * </pre>
       */
      public Builder addAllTerminalSettingHash(
          java.lang.Iterable<? extends protocol_v1.V1TimeHash.HashLite> values) {
        if (terminalSettingHashBuilder_ == null) {
          ensureTerminalSettingHashIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, terminalSettingHash_);
          onChanged();
        } else {
          terminalSettingHashBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalSettingHash = 3;</code>
       *
       * <pre>
       * terminal's setting hash
       * </pre>
       */
      public Builder clearTerminalSettingHash() {
        if (terminalSettingHashBuilder_ == null) {
          terminalSettingHash_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          terminalSettingHashBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalSettingHash = 3;</code>
       *
       * <pre>
       * terminal's setting hash
       * </pre>
       */
      public Builder removeTerminalSettingHash(int index) {
        if (terminalSettingHashBuilder_ == null) {
          ensureTerminalSettingHashIsMutable();
          terminalSettingHash_.remove(index);
          onChanged();
        } else {
          terminalSettingHashBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalSettingHash = 3;</code>
       *
       * <pre>
       * terminal's setting hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.HashLite.Builder getTerminalSettingHashBuilder(
          int index) {
        return getTerminalSettingHashFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalSettingHash = 3;</code>
       *
       * <pre>
       * terminal's setting hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.HashLiteOrBuilder getTerminalSettingHashOrBuilder(
          int index) {
        if (terminalSettingHashBuilder_ == null) {
          return terminalSettingHash_.get(index);  } else {
          return terminalSettingHashBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalSettingHash = 3;</code>
       *
       * <pre>
       * terminal's setting hash
       * </pre>
       */
      public java.util.List<? extends protocol_v1.V1TimeHash.HashLiteOrBuilder> 
           getTerminalSettingHashOrBuilderList() {
        if (terminalSettingHashBuilder_ != null) {
          return terminalSettingHashBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(terminalSettingHash_);
        }
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalSettingHash = 3;</code>
       *
       * <pre>
       * terminal's setting hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.HashLite.Builder addTerminalSettingHashBuilder() {
        return getTerminalSettingHashFieldBuilder().addBuilder(
            protocol_v1.V1TimeHash.HashLite.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalSettingHash = 3;</code>
       *
       * <pre>
       * terminal's setting hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.HashLite.Builder addTerminalSettingHashBuilder(
          int index) {
        return getTerminalSettingHashFieldBuilder().addBuilder(
            index, protocol_v1.V1TimeHash.HashLite.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalSettingHash = 3;</code>
       *
       * <pre>
       * terminal's setting hash
       * </pre>
       */
      public java.util.List<protocol_v1.V1TimeHash.HashLite.Builder> 
           getTerminalSettingHashBuilderList() {
        return getTerminalSettingHashFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protocol_v1.V1TimeHash.HashLite, protocol_v1.V1TimeHash.HashLite.Builder, protocol_v1.V1TimeHash.HashLiteOrBuilder> 
          getTerminalSettingHashFieldBuilder() {
        if (terminalSettingHashBuilder_ == null) {
          terminalSettingHashBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protocol_v1.V1TimeHash.HashLite, protocol_v1.V1TimeHash.HashLite.Builder, protocol_v1.V1TimeHash.HashLiteOrBuilder>(
                  terminalSettingHash_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          terminalSettingHash_ = null;
        }
        return terminalSettingHashBuilder_;
      }

      private java.util.List<protocol_v1.V1TimeHash.HashLite> terminalParameterHash_ =
        java.util.Collections.emptyList();
      private void ensureTerminalParameterHashIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          terminalParameterHash_ = new java.util.ArrayList<protocol_v1.V1TimeHash.HashLite>(terminalParameterHash_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protocol_v1.V1TimeHash.HashLite, protocol_v1.V1TimeHash.HashLite.Builder, protocol_v1.V1TimeHash.HashLiteOrBuilder> terminalParameterHashBuilder_;

      /**
       * <code>repeated .protocol_v1.HashLite TerminalParameterHash = 4;</code>
       *
       * <pre>
       * terminal's parameter hash
       * </pre>
       */
      public java.util.List<protocol_v1.V1TimeHash.HashLite> getTerminalParameterHashList() {
        if (terminalParameterHashBuilder_ == null) {
          return java.util.Collections.unmodifiableList(terminalParameterHash_);
        } else {
          return terminalParameterHashBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalParameterHash = 4;</code>
       *
       * <pre>
       * terminal's parameter hash
       * </pre>
       */
      public int getTerminalParameterHashCount() {
        if (terminalParameterHashBuilder_ == null) {
          return terminalParameterHash_.size();
        } else {
          return terminalParameterHashBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalParameterHash = 4;</code>
       *
       * <pre>
       * terminal's parameter hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.HashLite getTerminalParameterHash(int index) {
        if (terminalParameterHashBuilder_ == null) {
          return terminalParameterHash_.get(index);
        } else {
          return terminalParameterHashBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalParameterHash = 4;</code>
       *
       * <pre>
       * terminal's parameter hash
       * </pre>
       */
      public Builder setTerminalParameterHash(
          int index, protocol_v1.V1TimeHash.HashLite value) {
        if (terminalParameterHashBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTerminalParameterHashIsMutable();
          terminalParameterHash_.set(index, value);
          onChanged();
        } else {
          terminalParameterHashBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalParameterHash = 4;</code>
       *
       * <pre>
       * terminal's parameter hash
       * </pre>
       */
      public Builder setTerminalParameterHash(
          int index, protocol_v1.V1TimeHash.HashLite.Builder builderForValue) {
        if (terminalParameterHashBuilder_ == null) {
          ensureTerminalParameterHashIsMutable();
          terminalParameterHash_.set(index, builderForValue.build());
          onChanged();
        } else {
          terminalParameterHashBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalParameterHash = 4;</code>
       *
       * <pre>
       * terminal's parameter hash
       * </pre>
       */
      public Builder addTerminalParameterHash(protocol_v1.V1TimeHash.HashLite value) {
        if (terminalParameterHashBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTerminalParameterHashIsMutable();
          terminalParameterHash_.add(value);
          onChanged();
        } else {
          terminalParameterHashBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalParameterHash = 4;</code>
       *
       * <pre>
       * terminal's parameter hash
       * </pre>
       */
      public Builder addTerminalParameterHash(
          int index, protocol_v1.V1TimeHash.HashLite value) {
        if (terminalParameterHashBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTerminalParameterHashIsMutable();
          terminalParameterHash_.add(index, value);
          onChanged();
        } else {
          terminalParameterHashBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalParameterHash = 4;</code>
       *
       * <pre>
       * terminal's parameter hash
       * </pre>
       */
      public Builder addTerminalParameterHash(
          protocol_v1.V1TimeHash.HashLite.Builder builderForValue) {
        if (terminalParameterHashBuilder_ == null) {
          ensureTerminalParameterHashIsMutable();
          terminalParameterHash_.add(builderForValue.build());
          onChanged();
        } else {
          terminalParameterHashBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalParameterHash = 4;</code>
       *
       * <pre>
       * terminal's parameter hash
       * </pre>
       */
      public Builder addTerminalParameterHash(
          int index, protocol_v1.V1TimeHash.HashLite.Builder builderForValue) {
        if (terminalParameterHashBuilder_ == null) {
          ensureTerminalParameterHashIsMutable();
          terminalParameterHash_.add(index, builderForValue.build());
          onChanged();
        } else {
          terminalParameterHashBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalParameterHash = 4;</code>
       *
       * <pre>
       * terminal's parameter hash
       * </pre>
       */
      public Builder addAllTerminalParameterHash(
          java.lang.Iterable<? extends protocol_v1.V1TimeHash.HashLite> values) {
        if (terminalParameterHashBuilder_ == null) {
          ensureTerminalParameterHashIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, terminalParameterHash_);
          onChanged();
        } else {
          terminalParameterHashBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalParameterHash = 4;</code>
       *
       * <pre>
       * terminal's parameter hash
       * </pre>
       */
      public Builder clearTerminalParameterHash() {
        if (terminalParameterHashBuilder_ == null) {
          terminalParameterHash_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          terminalParameterHashBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalParameterHash = 4;</code>
       *
       * <pre>
       * terminal's parameter hash
       * </pre>
       */
      public Builder removeTerminalParameterHash(int index) {
        if (terminalParameterHashBuilder_ == null) {
          ensureTerminalParameterHashIsMutable();
          terminalParameterHash_.remove(index);
          onChanged();
        } else {
          terminalParameterHashBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalParameterHash = 4;</code>
       *
       * <pre>
       * terminal's parameter hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.HashLite.Builder getTerminalParameterHashBuilder(
          int index) {
        return getTerminalParameterHashFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalParameterHash = 4;</code>
       *
       * <pre>
       * terminal's parameter hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.HashLiteOrBuilder getTerminalParameterHashOrBuilder(
          int index) {
        if (terminalParameterHashBuilder_ == null) {
          return terminalParameterHash_.get(index);  } else {
          return terminalParameterHashBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalParameterHash = 4;</code>
       *
       * <pre>
       * terminal's parameter hash
       * </pre>
       */
      public java.util.List<? extends protocol_v1.V1TimeHash.HashLiteOrBuilder> 
           getTerminalParameterHashOrBuilderList() {
        if (terminalParameterHashBuilder_ != null) {
          return terminalParameterHashBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(terminalParameterHash_);
        }
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalParameterHash = 4;</code>
       *
       * <pre>
       * terminal's parameter hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.HashLite.Builder addTerminalParameterHashBuilder() {
        return getTerminalParameterHashFieldBuilder().addBuilder(
            protocol_v1.V1TimeHash.HashLite.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalParameterHash = 4;</code>
       *
       * <pre>
       * terminal's parameter hash
       * </pre>
       */
      public protocol_v1.V1TimeHash.HashLite.Builder addTerminalParameterHashBuilder(
          int index) {
        return getTerminalParameterHashFieldBuilder().addBuilder(
            index, protocol_v1.V1TimeHash.HashLite.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol_v1.HashLite TerminalParameterHash = 4;</code>
       *
       * <pre>
       * terminal's parameter hash
       * </pre>
       */
      public java.util.List<protocol_v1.V1TimeHash.HashLite.Builder> 
           getTerminalParameterHashBuilderList() {
        return getTerminalParameterHashFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protocol_v1.V1TimeHash.HashLite, protocol_v1.V1TimeHash.HashLite.Builder, protocol_v1.V1TimeHash.HashLiteOrBuilder> 
          getTerminalParameterHashFieldBuilder() {
        if (terminalParameterHashBuilder_ == null) {
          terminalParameterHashBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protocol_v1.V1TimeHash.HashLite, protocol_v1.V1TimeHash.HashLite.Builder, protocol_v1.V1TimeHash.HashLiteOrBuilder>(
                  terminalParameterHash_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          terminalParameterHash_ = null;
        }
        return terminalParameterHashBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:protocol_v1.GatewayStatus)
    }

    // @@protoc_insertion_point(class_scope:protocol_v1.GatewayStatus)
    private static final protocol_v1.V1Register.GatewayStatus DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol_v1.V1Register.GatewayStatus();
    }

    public static protocol_v1.V1Register.GatewayStatus getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<GatewayStatus>
        PARSER = new com.google.protobuf.AbstractParser<GatewayStatus>() {
      public GatewayStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new GatewayStatus(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<GatewayStatus> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GatewayStatus> getParserForType() {
      return PARSER;
    }

    public protocol_v1.V1Register.GatewayStatus getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_v1_RegisterReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_v1_RegisterReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_v1_StorageStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_v1_StorageStatus_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_v1_RegisterRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_v1_RegisterRsp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_v1_GatewayStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_v1_GatewayStatus_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021v1.Register.proto\022\013protocol_v1\032\024v1.Ide" +
      "ntityMsg.proto\032\021v1.TimeHash.proto\032\021v1.Fi" +
      "rmware.proto\032\022v1.Algorithm.proto\032\014v1.Env" +
      ".proto\032\021v1.Cellular.proto\"\334\006\n\013RegisterRe" +
      "q\022&\n\004Iden\030\001 \002(\0132\030.protocol_v1.IdentityMs" +
      "g\022\014\n\004IMSI\030\002 \002(\t\022\016\n\004IMEI\030\003 \001(\t:\000\022\r\n\003MAC\030\004" +
      " \001(\t:\000\022\025\n\nDeviceType\030\005 \001(\005:\0010\022\032\n\017Hardwar" +
      "eVersion\030\006 \001(\005:\0010\022\032\n\017FirmwareVersion\030\007 \001" +
      "(\005:\0010\022\021\n\006Status\030\010 \001(\005:\0010\022\031\n\016BatteryVolta" +
      "ge\030\t \001(\005:\0010\022\027\n\014BatteryPower\030\n \001(\005:\0010\022\031\n\016",
      "SignalStrength\030\013 \001(\005:\0010\022\027\n\014BitErrorRate\030" +
      "\014 \001(\005:\0010\022 \n\025RadioAccessTechnology\030\r \001(\005:" +
      "\0010\022\032\n\017NetworkOperator\030\016 \001(\r:\0010\022\017\n\005ICCID\030" +
      "e \001(\t:\000\022\036\n\024ModemFirmwareVersion\030f \001(\t:\000\022" +
      "&\n\013SettingHash\030n \001(\0132\021.protocol_v1.Hash\022" +
      "&\n\007OEMHash\030o \001(\0132\025.protocol_v1.HashLite\022" +
      "*\n\013TriggerHash\030p \001(\0132\025.protocol_v1.HashL" +
      "ite\022,\n\rAlgorithmHash\030q \001(\0132\025.protocol_v1" +
      ".HashLite\022\023\n\010WorkMode\030x \001(\005:\0010\022\024\n\tTimest" +
      "amp\030y \001(\r:\0010\0222\n\rGatewayStatus\030\203\001 \001(\0132\032.p",
      "rotocol_v1.GatewayStatus\0222\n\rStorageStatu" +
      "s\030\204\001 \003(\0132\032.protocol_v1.StorageStatus\022\036\n\003" +
      "Env\030\210\001 \001(\0132\020.protocol_v1.Env\022(\n\010Cellular" +
      "\030\212\001 \001(\0132\025.protocol_v1.Cellular\0228\n\020Algori" +
      "thmVersion\030\214\001 \003(\0132\035.protocol_v1.Algorith" +
      "mVersion\"N\n\rStorageStatus\022\014\n\004Type\030\001 \002(\r\022" +
      "\025\n\nTotalSpace\030\002 \001(\r:\0010\022\030\n\rRemainingData\030" +
      "\003 \001(\r:\0010\"\344\002\n\013RegisterRsp\022&\n\004Iden\030\001 \002(\0132\030" +
      ".protocol_v1.IdentityMsg\022\021\n\tTimestamp\030\002 " +
      "\002(\r\022\022\n\007SimType\030e \001(\005:\0010\022\021\n\006UserID\030f \001(\r:",
      "\0010\022&\n\013SettingHash\030n \001(\0132\021.protocol_v1.Ha" +
      "sh\022*\n\013TriggerHash\030p \001(\0132\025.protocol_v1.Ha" +
      "shLite\022,\n\rAlgorithmHash\030q \001(\0132\025.protocol" +
      "_v1.HashLite\022\023\n\010WorkMode\030x \001(\005:\0010\022(\n\010Fir" +
      "mware\030\202\001 \001(\0132\025.protocol_v1.Firmware\0222\n\rG" +
      "atewayStatus\030\203\001 \001(\0132\032.protocol_v1.Gatewa" +
      "yStatus\"\331\001\n\rGatewayStatus\022-\n\022GatewaySett" +
      "ingHash\030\001 \001(\0132\021.protocol_v1.Hash\022/\n\020Gate" +
      "wayWhiteHash\030\002 \001(\0132\025.protocol_v1.HashLit" +
      "e\0222\n\023TerminalSettingHash\030\003 \003(\0132\025.protoco",
      "l_v1.HashLite\0224\n\025TerminalParameterHash\030\004" +
      " \003(\0132\025.protocol_v1.HashLiteB\005\242\002\002V1"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protocol_v1.V1IdentityMsg.getDescriptor(),
          protocol_v1.V1TimeHash.getDescriptor(),
          protocol_v1.V1Firmware.getDescriptor(),
          protocol_v1.V1Algorithm.getDescriptor(),
          protocol_v1.V1Env.getDescriptor(),
          protocol_v1.V1Cellular.getDescriptor(),
        }, assigner);
    internal_static_protocol_v1_RegisterReq_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_protocol_v1_RegisterReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_v1_RegisterReq_descriptor,
        new java.lang.String[] { "Iden", "IMSI", "IMEI", "MAC", "DeviceType", "HardwareVersion", "FirmwareVersion", "Status", "BatteryVoltage", "BatteryPower", "SignalStrength", "BitErrorRate", "RadioAccessTechnology", "NetworkOperator", "ICCID", "ModemFirmwareVersion", "SettingHash", "OEMHash", "TriggerHash", "AlgorithmHash", "WorkMode", "Timestamp", "GatewayStatus", "StorageStatus", "Env", "Cellular", "AlgorithmVersion", });
    internal_static_protocol_v1_StorageStatus_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_protocol_v1_StorageStatus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_v1_StorageStatus_descriptor,
        new java.lang.String[] { "Type", "TotalSpace", "RemainingData", });
    internal_static_protocol_v1_RegisterRsp_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_protocol_v1_RegisterRsp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_v1_RegisterRsp_descriptor,
        new java.lang.String[] { "Iden", "Timestamp", "SimType", "UserID", "SettingHash", "TriggerHash", "AlgorithmHash", "WorkMode", "Firmware", "GatewayStatus", });
    internal_static_protocol_v1_GatewayStatus_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_protocol_v1_GatewayStatus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_v1_GatewayStatus_descriptor,
        new java.lang.String[] { "GatewaySettingHash", "GatewayWhiteHash", "TerminalSettingHash", "TerminalParameterHash", });
    protocol_v1.V1IdentityMsg.getDescriptor();
    protocol_v1.V1TimeHash.getDescriptor();
    protocol_v1.V1Firmware.getDescriptor();
    protocol_v1.V1Algorithm.getDescriptor();
    protocol_v1.V1Env.getDescriptor();
    protocol_v1.V1Cellular.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
