// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v1.GPS.proto

package protocol_v1;

public final class V1GPS {
  private V1GPS() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface GPSReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol_v1.GPSReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
     *
     * <pre>
     * 身份验证
     * </pre>
     */
    boolean hasIden();
    /**
     * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
     *
     * <pre>
     * 身份验证
     * </pre>
     */
    protocol_v1.V1IdentityMsg.IdentityMsg getIden();
    /**
     * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
     *
     * <pre>
     * 身份验证
     * </pre>
     */
    protocol_v1.V1IdentityMsg.IdentityMsgOrBuilder getIdenOrBuilder();

    /**
     * <code>repeated .protocol_v1.GPS GPSInfo = 2;</code>
     *
     * <pre>
     * gps信息
     * </pre>
     */
    java.util.List<protocol_v1.V1GPS.GPS> 
        getGPSInfoList();
    /**
     * <code>repeated .protocol_v1.GPS GPSInfo = 2;</code>
     *
     * <pre>
     * gps信息
     * </pre>
     */
    protocol_v1.V1GPS.GPS getGPSInfo(int index);
    /**
     * <code>repeated .protocol_v1.GPS GPSInfo = 2;</code>
     *
     * <pre>
     * gps信息
     * </pre>
     */
    int getGPSInfoCount();
    /**
     * <code>repeated .protocol_v1.GPS GPSInfo = 2;</code>
     *
     * <pre>
     * gps信息
     * </pre>
     */
    java.util.List<? extends protocol_v1.V1GPS.GPSOrBuilder> 
        getGPSInfoOrBuilderList();
    /**
     * <code>repeated .protocol_v1.GPS GPSInfo = 2;</code>
     *
     * <pre>
     * gps信息
     * </pre>
     */
    protocol_v1.V1GPS.GPSOrBuilder getGPSInfoOrBuilder(
        int index);

    /**
     * <code>repeated .protocol_v1.Beacon BeaconInfo = 3;</code>
     *
     * <pre>
     * 信标定位信息
     * </pre>
     */
    java.util.List<protocol_v1.V1GPS.Beacon> 
        getBeaconInfoList();
    /**
     * <code>repeated .protocol_v1.Beacon BeaconInfo = 3;</code>
     *
     * <pre>
     * 信标定位信息
     * </pre>
     */
    protocol_v1.V1GPS.Beacon getBeaconInfo(int index);
    /**
     * <code>repeated .protocol_v1.Beacon BeaconInfo = 3;</code>
     *
     * <pre>
     * 信标定位信息
     * </pre>
     */
    int getBeaconInfoCount();
    /**
     * <code>repeated .protocol_v1.Beacon BeaconInfo = 3;</code>
     *
     * <pre>
     * 信标定位信息
     * </pre>
     */
    java.util.List<? extends protocol_v1.V1GPS.BeaconOrBuilder> 
        getBeaconInfoOrBuilderList();
    /**
     * <code>repeated .protocol_v1.Beacon BeaconInfo = 3;</code>
     *
     * <pre>
     * 信标定位信息
     * </pre>
     */
    protocol_v1.V1GPS.BeaconOrBuilder getBeaconInfoOrBuilder(
        int index);

    /**
     * <code>optional int32 SMS = 101;</code>
     *
     * <pre>
     * 是否短信回传
     * </pre>
     */
    boolean hasSMS();
    /**
     * <code>optional int32 SMS = 101;</code>
     *
     * <pre>
     * 是否短信回传
     * </pre>
     */
    int getSMS();
  }
  /**
   * Protobuf type {@code protocol_v1.GPSReq}
   *
   * <pre>
   * 请求上传GPS数据
   * </pre>
   */
  public  static final class GPSReq extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protocol_v1.GPSReq)
      GPSReqOrBuilder {
    // Use GPSReq.newBuilder() to construct.
    private GPSReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private GPSReq() {
      gPSInfo_ = java.util.Collections.emptyList();
      beaconInfo_ = java.util.Collections.emptyList();
      sMS_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GPSReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protocol_v1.V1IdentityMsg.IdentityMsg.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = iden_.toBuilder();
              }
              iden_ = input.readMessage(protocol_v1.V1IdentityMsg.IdentityMsg.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(iden_);
                iden_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                gPSInfo_ = new java.util.ArrayList<protocol_v1.V1GPS.GPS>();
                mutable_bitField0_ |= 0x00000002;
              }
              gPSInfo_.add(input.readMessage(protocol_v1.V1GPS.GPS.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                beaconInfo_ = new java.util.ArrayList<protocol_v1.V1GPS.Beacon>();
                mutable_bitField0_ |= 0x00000004;
              }
              beaconInfo_.add(input.readMessage(protocol_v1.V1GPS.Beacon.parser(), extensionRegistry));
              break;
            }
            case 808: {
              bitField0_ |= 0x00000002;
              sMS_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          gPSInfo_ = java.util.Collections.unmodifiableList(gPSInfo_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          beaconInfo_ = java.util.Collections.unmodifiableList(beaconInfo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol_v1.V1GPS.internal_static_protocol_v1_GPSReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol_v1.V1GPS.internal_static_protocol_v1_GPSReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol_v1.V1GPS.GPSReq.class, protocol_v1.V1GPS.GPSReq.Builder.class);
    }

    private int bitField0_;
    public static final int IDEN_FIELD_NUMBER = 1;
    private protocol_v1.V1IdentityMsg.IdentityMsg iden_;
    /**
     * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
     *
     * <pre>
     * 身份验证
     * </pre>
     */
    public boolean hasIden() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
     *
     * <pre>
     * 身份验证
     * </pre>
     */
    public protocol_v1.V1IdentityMsg.IdentityMsg getIden() {
      return iden_ == null ? protocol_v1.V1IdentityMsg.IdentityMsg.getDefaultInstance() : iden_;
    }
    /**
     * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
     *
     * <pre>
     * 身份验证
     * </pre>
     */
    public protocol_v1.V1IdentityMsg.IdentityMsgOrBuilder getIdenOrBuilder() {
      return iden_ == null ? protocol_v1.V1IdentityMsg.IdentityMsg.getDefaultInstance() : iden_;
    }

    public static final int GPSINFO_FIELD_NUMBER = 2;
    private java.util.List<protocol_v1.V1GPS.GPS> gPSInfo_;
    /**
     * <code>repeated .protocol_v1.GPS GPSInfo = 2;</code>
     *
     * <pre>
     * gps信息
     * </pre>
     */
    public java.util.List<protocol_v1.V1GPS.GPS> getGPSInfoList() {
      return gPSInfo_;
    }
    /**
     * <code>repeated .protocol_v1.GPS GPSInfo = 2;</code>
     *
     * <pre>
     * gps信息
     * </pre>
     */
    public java.util.List<? extends protocol_v1.V1GPS.GPSOrBuilder> 
        getGPSInfoOrBuilderList() {
      return gPSInfo_;
    }
    /**
     * <code>repeated .protocol_v1.GPS GPSInfo = 2;</code>
     *
     * <pre>
     * gps信息
     * </pre>
     */
    public int getGPSInfoCount() {
      return gPSInfo_.size();
    }
    /**
     * <code>repeated .protocol_v1.GPS GPSInfo = 2;</code>
     *
     * <pre>
     * gps信息
     * </pre>
     */
    public protocol_v1.V1GPS.GPS getGPSInfo(int index) {
      return gPSInfo_.get(index);
    }
    /**
     * <code>repeated .protocol_v1.GPS GPSInfo = 2;</code>
     *
     * <pre>
     * gps信息
     * </pre>
     */
    public protocol_v1.V1GPS.GPSOrBuilder getGPSInfoOrBuilder(
        int index) {
      return gPSInfo_.get(index);
    }

    public static final int BEACONINFO_FIELD_NUMBER = 3;
    private java.util.List<protocol_v1.V1GPS.Beacon> beaconInfo_;
    /**
     * <code>repeated .protocol_v1.Beacon BeaconInfo = 3;</code>
     *
     * <pre>
     * 信标定位信息
     * </pre>
     */
    public java.util.List<protocol_v1.V1GPS.Beacon> getBeaconInfoList() {
      return beaconInfo_;
    }
    /**
     * <code>repeated .protocol_v1.Beacon BeaconInfo = 3;</code>
     *
     * <pre>
     * 信标定位信息
     * </pre>
     */
    public java.util.List<? extends protocol_v1.V1GPS.BeaconOrBuilder> 
        getBeaconInfoOrBuilderList() {
      return beaconInfo_;
    }
    /**
     * <code>repeated .protocol_v1.Beacon BeaconInfo = 3;</code>
     *
     * <pre>
     * 信标定位信息
     * </pre>
     */
    public int getBeaconInfoCount() {
      return beaconInfo_.size();
    }
    /**
     * <code>repeated .protocol_v1.Beacon BeaconInfo = 3;</code>
     *
     * <pre>
     * 信标定位信息
     * </pre>
     */
    public protocol_v1.V1GPS.Beacon getBeaconInfo(int index) {
      return beaconInfo_.get(index);
    }
    /**
     * <code>repeated .protocol_v1.Beacon BeaconInfo = 3;</code>
     *
     * <pre>
     * 信标定位信息
     * </pre>
     */
    public protocol_v1.V1GPS.BeaconOrBuilder getBeaconInfoOrBuilder(
        int index) {
      return beaconInfo_.get(index);
    }

    public static final int SMS_FIELD_NUMBER = 101;
    private int sMS_;
    /**
     * <code>optional int32 SMS = 101;</code>
     *
     * <pre>
     * 是否短信回传
     * </pre>
     */
    public boolean hasSMS() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 SMS = 101;</code>
     *
     * <pre>
     * 是否短信回传
     * </pre>
     */
    public int getSMS() {
      return sMS_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasIden()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getIden().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getGPSInfoCount(); i++) {
        if (!getGPSInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getBeaconInfoCount(); i++) {
        if (!getBeaconInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getIden());
      }
      for (int i = 0; i < gPSInfo_.size(); i++) {
        output.writeMessage(2, gPSInfo_.get(i));
      }
      for (int i = 0; i < beaconInfo_.size(); i++) {
        output.writeMessage(3, beaconInfo_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(101, sMS_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getIden());
      }
      for (int i = 0; i < gPSInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, gPSInfo_.get(i));
      }
      for (int i = 0; i < beaconInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, beaconInfo_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(101, sMS_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static protocol_v1.V1GPS.GPSReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1GPS.GPSReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1GPS.GPSReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1GPS.GPSReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1GPS.GPSReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1GPS.GPSReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1GPS.GPSReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protocol_v1.V1GPS.GPSReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1GPS.GPSReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1GPS.GPSReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol_v1.V1GPS.GPSReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol_v1.GPSReq}
     *
     * <pre>
     * 请求上传GPS数据
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol_v1.GPSReq)
        protocol_v1.V1GPS.GPSReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol_v1.V1GPS.internal_static_protocol_v1_GPSReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol_v1.V1GPS.internal_static_protocol_v1_GPSReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol_v1.V1GPS.GPSReq.class, protocol_v1.V1GPS.GPSReq.Builder.class);
      }

      // Construct using protocol_v1.V1GPS.GPSReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getIdenFieldBuilder();
          getGPSInfoFieldBuilder();
          getBeaconInfoFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (idenBuilder_ == null) {
          iden_ = null;
        } else {
          idenBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (gPSInfoBuilder_ == null) {
          gPSInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          gPSInfoBuilder_.clear();
        }
        if (beaconInfoBuilder_ == null) {
          beaconInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          beaconInfoBuilder_.clear();
        }
        sMS_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol_v1.V1GPS.internal_static_protocol_v1_GPSReq_descriptor;
      }

      public protocol_v1.V1GPS.GPSReq getDefaultInstanceForType() {
        return protocol_v1.V1GPS.GPSReq.getDefaultInstance();
      }

      public protocol_v1.V1GPS.GPSReq build() {
        protocol_v1.V1GPS.GPSReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol_v1.V1GPS.GPSReq buildPartial() {
        protocol_v1.V1GPS.GPSReq result = new protocol_v1.V1GPS.GPSReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (idenBuilder_ == null) {
          result.iden_ = iden_;
        } else {
          result.iden_ = idenBuilder_.build();
        }
        if (gPSInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            gPSInfo_ = java.util.Collections.unmodifiableList(gPSInfo_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.gPSInfo_ = gPSInfo_;
        } else {
          result.gPSInfo_ = gPSInfoBuilder_.build();
        }
        if (beaconInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            beaconInfo_ = java.util.Collections.unmodifiableList(beaconInfo_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.beaconInfo_ = beaconInfo_;
        } else {
          result.beaconInfo_ = beaconInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sMS_ = sMS_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol_v1.V1GPS.GPSReq) {
          return mergeFrom((protocol_v1.V1GPS.GPSReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol_v1.V1GPS.GPSReq other) {
        if (other == protocol_v1.V1GPS.GPSReq.getDefaultInstance()) return this;
        if (other.hasIden()) {
          mergeIden(other.getIden());
        }
        if (gPSInfoBuilder_ == null) {
          if (!other.gPSInfo_.isEmpty()) {
            if (gPSInfo_.isEmpty()) {
              gPSInfo_ = other.gPSInfo_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureGPSInfoIsMutable();
              gPSInfo_.addAll(other.gPSInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.gPSInfo_.isEmpty()) {
            if (gPSInfoBuilder_.isEmpty()) {
              gPSInfoBuilder_.dispose();
              gPSInfoBuilder_ = null;
              gPSInfo_ = other.gPSInfo_;
              bitField0_ = (bitField0_ & ~0x00000002);
              gPSInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGPSInfoFieldBuilder() : null;
            } else {
              gPSInfoBuilder_.addAllMessages(other.gPSInfo_);
            }
          }
        }
        if (beaconInfoBuilder_ == null) {
          if (!other.beaconInfo_.isEmpty()) {
            if (beaconInfo_.isEmpty()) {
              beaconInfo_ = other.beaconInfo_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureBeaconInfoIsMutable();
              beaconInfo_.addAll(other.beaconInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.beaconInfo_.isEmpty()) {
            if (beaconInfoBuilder_.isEmpty()) {
              beaconInfoBuilder_.dispose();
              beaconInfoBuilder_ = null;
              beaconInfo_ = other.beaconInfo_;
              bitField0_ = (bitField0_ & ~0x00000004);
              beaconInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBeaconInfoFieldBuilder() : null;
            } else {
              beaconInfoBuilder_.addAllMessages(other.beaconInfo_);
            }
          }
        }
        if (other.hasSMS()) {
          setSMS(other.getSMS());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasIden()) {
          return false;
        }
        if (!getIden().isInitialized()) {
          return false;
        }
        for (int i = 0; i < getGPSInfoCount(); i++) {
          if (!getGPSInfo(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getBeaconInfoCount(); i++) {
          if (!getBeaconInfo(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol_v1.V1GPS.GPSReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol_v1.V1GPS.GPSReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private protocol_v1.V1IdentityMsg.IdentityMsg iden_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1IdentityMsg.IdentityMsg, protocol_v1.V1IdentityMsg.IdentityMsg.Builder, protocol_v1.V1IdentityMsg.IdentityMsgOrBuilder> idenBuilder_;
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       *
       * <pre>
       * 身份验证
       * </pre>
       */
      public boolean hasIden() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       *
       * <pre>
       * 身份验证
       * </pre>
       */
      public protocol_v1.V1IdentityMsg.IdentityMsg getIden() {
        if (idenBuilder_ == null) {
          return iden_ == null ? protocol_v1.V1IdentityMsg.IdentityMsg.getDefaultInstance() : iden_;
        } else {
          return idenBuilder_.getMessage();
        }
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       *
       * <pre>
       * 身份验证
       * </pre>
       */
      public Builder setIden(protocol_v1.V1IdentityMsg.IdentityMsg value) {
        if (idenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          iden_ = value;
          onChanged();
        } else {
          idenBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       *
       * <pre>
       * 身份验证
       * </pre>
       */
      public Builder setIden(
          protocol_v1.V1IdentityMsg.IdentityMsg.Builder builderForValue) {
        if (idenBuilder_ == null) {
          iden_ = builderForValue.build();
          onChanged();
        } else {
          idenBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       *
       * <pre>
       * 身份验证
       * </pre>
       */
      public Builder mergeIden(protocol_v1.V1IdentityMsg.IdentityMsg value) {
        if (idenBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              iden_ != null &&
              iden_ != protocol_v1.V1IdentityMsg.IdentityMsg.getDefaultInstance()) {
            iden_ =
              protocol_v1.V1IdentityMsg.IdentityMsg.newBuilder(iden_).mergeFrom(value).buildPartial();
          } else {
            iden_ = value;
          }
          onChanged();
        } else {
          idenBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       *
       * <pre>
       * 身份验证
       * </pre>
       */
      public Builder clearIden() {
        if (idenBuilder_ == null) {
          iden_ = null;
          onChanged();
        } else {
          idenBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       *
       * <pre>
       * 身份验证
       * </pre>
       */
      public protocol_v1.V1IdentityMsg.IdentityMsg.Builder getIdenBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getIdenFieldBuilder().getBuilder();
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       *
       * <pre>
       * 身份验证
       * </pre>
       */
      public protocol_v1.V1IdentityMsg.IdentityMsgOrBuilder getIdenOrBuilder() {
        if (idenBuilder_ != null) {
          return idenBuilder_.getMessageOrBuilder();
        } else {
          return iden_ == null ?
              protocol_v1.V1IdentityMsg.IdentityMsg.getDefaultInstance() : iden_;
        }
      }
      /**
       * <code>required .protocol_v1.IdentityMsg Iden = 1;</code>
       *
       * <pre>
       * 身份验证
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          protocol_v1.V1IdentityMsg.IdentityMsg, protocol_v1.V1IdentityMsg.IdentityMsg.Builder, protocol_v1.V1IdentityMsg.IdentityMsgOrBuilder> 
          getIdenFieldBuilder() {
        if (idenBuilder_ == null) {
          idenBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              protocol_v1.V1IdentityMsg.IdentityMsg, protocol_v1.V1IdentityMsg.IdentityMsg.Builder, protocol_v1.V1IdentityMsg.IdentityMsgOrBuilder>(
                  getIden(),
                  getParentForChildren(),
                  isClean());
          iden_ = null;
        }
        return idenBuilder_;
      }

      private java.util.List<protocol_v1.V1GPS.GPS> gPSInfo_ =
        java.util.Collections.emptyList();
      private void ensureGPSInfoIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          gPSInfo_ = new java.util.ArrayList<protocol_v1.V1GPS.GPS>(gPSInfo_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protocol_v1.V1GPS.GPS, protocol_v1.V1GPS.GPS.Builder, protocol_v1.V1GPS.GPSOrBuilder> gPSInfoBuilder_;

      /**
       * <code>repeated .protocol_v1.GPS GPSInfo = 2;</code>
       *
       * <pre>
       * gps信息
       * </pre>
       */
      public java.util.List<protocol_v1.V1GPS.GPS> getGPSInfoList() {
        if (gPSInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(gPSInfo_);
        } else {
          return gPSInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protocol_v1.GPS GPSInfo = 2;</code>
       *
       * <pre>
       * gps信息
       * </pre>
       */
      public int getGPSInfoCount() {
        if (gPSInfoBuilder_ == null) {
          return gPSInfo_.size();
        } else {
          return gPSInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protocol_v1.GPS GPSInfo = 2;</code>
       *
       * <pre>
       * gps信息
       * </pre>
       */
      public protocol_v1.V1GPS.GPS getGPSInfo(int index) {
        if (gPSInfoBuilder_ == null) {
          return gPSInfo_.get(index);
        } else {
          return gPSInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protocol_v1.GPS GPSInfo = 2;</code>
       *
       * <pre>
       * gps信息
       * </pre>
       */
      public Builder setGPSInfo(
          int index, protocol_v1.V1GPS.GPS value) {
        if (gPSInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGPSInfoIsMutable();
          gPSInfo_.set(index, value);
          onChanged();
        } else {
          gPSInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.GPS GPSInfo = 2;</code>
       *
       * <pre>
       * gps信息
       * </pre>
       */
      public Builder setGPSInfo(
          int index, protocol_v1.V1GPS.GPS.Builder builderForValue) {
        if (gPSInfoBuilder_ == null) {
          ensureGPSInfoIsMutable();
          gPSInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          gPSInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.GPS GPSInfo = 2;</code>
       *
       * <pre>
       * gps信息
       * </pre>
       */
      public Builder addGPSInfo(protocol_v1.V1GPS.GPS value) {
        if (gPSInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGPSInfoIsMutable();
          gPSInfo_.add(value);
          onChanged();
        } else {
          gPSInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.GPS GPSInfo = 2;</code>
       *
       * <pre>
       * gps信息
       * </pre>
       */
      public Builder addGPSInfo(
          int index, protocol_v1.V1GPS.GPS value) {
        if (gPSInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGPSInfoIsMutable();
          gPSInfo_.add(index, value);
          onChanged();
        } else {
          gPSInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.GPS GPSInfo = 2;</code>
       *
       * <pre>
       * gps信息
       * </pre>
       */
      public Builder addGPSInfo(
          protocol_v1.V1GPS.GPS.Builder builderForValue) {
        if (gPSInfoBuilder_ == null) {
          ensureGPSInfoIsMutable();
          gPSInfo_.add(builderForValue.build());
          onChanged();
        } else {
          gPSInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.GPS GPSInfo = 2;</code>
       *
       * <pre>
       * gps信息
       * </pre>
       */
      public Builder addGPSInfo(
          int index, protocol_v1.V1GPS.GPS.Builder builderForValue) {
        if (gPSInfoBuilder_ == null) {
          ensureGPSInfoIsMutable();
          gPSInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          gPSInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.GPS GPSInfo = 2;</code>
       *
       * <pre>
       * gps信息
       * </pre>
       */
      public Builder addAllGPSInfo(
          java.lang.Iterable<? extends protocol_v1.V1GPS.GPS> values) {
        if (gPSInfoBuilder_ == null) {
          ensureGPSInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, gPSInfo_);
          onChanged();
        } else {
          gPSInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.GPS GPSInfo = 2;</code>
       *
       * <pre>
       * gps信息
       * </pre>
       */
      public Builder clearGPSInfo() {
        if (gPSInfoBuilder_ == null) {
          gPSInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          gPSInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.GPS GPSInfo = 2;</code>
       *
       * <pre>
       * gps信息
       * </pre>
       */
      public Builder removeGPSInfo(int index) {
        if (gPSInfoBuilder_ == null) {
          ensureGPSInfoIsMutable();
          gPSInfo_.remove(index);
          onChanged();
        } else {
          gPSInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.GPS GPSInfo = 2;</code>
       *
       * <pre>
       * gps信息
       * </pre>
       */
      public protocol_v1.V1GPS.GPS.Builder getGPSInfoBuilder(
          int index) {
        return getGPSInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protocol_v1.GPS GPSInfo = 2;</code>
       *
       * <pre>
       * gps信息
       * </pre>
       */
      public protocol_v1.V1GPS.GPSOrBuilder getGPSInfoOrBuilder(
          int index) {
        if (gPSInfoBuilder_ == null) {
          return gPSInfo_.get(index);  } else {
          return gPSInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protocol_v1.GPS GPSInfo = 2;</code>
       *
       * <pre>
       * gps信息
       * </pre>
       */
      public java.util.List<? extends protocol_v1.V1GPS.GPSOrBuilder> 
           getGPSInfoOrBuilderList() {
        if (gPSInfoBuilder_ != null) {
          return gPSInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(gPSInfo_);
        }
      }
      /**
       * <code>repeated .protocol_v1.GPS GPSInfo = 2;</code>
       *
       * <pre>
       * gps信息
       * </pre>
       */
      public protocol_v1.V1GPS.GPS.Builder addGPSInfoBuilder() {
        return getGPSInfoFieldBuilder().addBuilder(
            protocol_v1.V1GPS.GPS.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol_v1.GPS GPSInfo = 2;</code>
       *
       * <pre>
       * gps信息
       * </pre>
       */
      public protocol_v1.V1GPS.GPS.Builder addGPSInfoBuilder(
          int index) {
        return getGPSInfoFieldBuilder().addBuilder(
            index, protocol_v1.V1GPS.GPS.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol_v1.GPS GPSInfo = 2;</code>
       *
       * <pre>
       * gps信息
       * </pre>
       */
      public java.util.List<protocol_v1.V1GPS.GPS.Builder> 
           getGPSInfoBuilderList() {
        return getGPSInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protocol_v1.V1GPS.GPS, protocol_v1.V1GPS.GPS.Builder, protocol_v1.V1GPS.GPSOrBuilder> 
          getGPSInfoFieldBuilder() {
        if (gPSInfoBuilder_ == null) {
          gPSInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protocol_v1.V1GPS.GPS, protocol_v1.V1GPS.GPS.Builder, protocol_v1.V1GPS.GPSOrBuilder>(
                  gPSInfo_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          gPSInfo_ = null;
        }
        return gPSInfoBuilder_;
      }

      private java.util.List<protocol_v1.V1GPS.Beacon> beaconInfo_ =
        java.util.Collections.emptyList();
      private void ensureBeaconInfoIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          beaconInfo_ = new java.util.ArrayList<protocol_v1.V1GPS.Beacon>(beaconInfo_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protocol_v1.V1GPS.Beacon, protocol_v1.V1GPS.Beacon.Builder, protocol_v1.V1GPS.BeaconOrBuilder> beaconInfoBuilder_;

      /**
       * <code>repeated .protocol_v1.Beacon BeaconInfo = 3;</code>
       *
       * <pre>
       * 信标定位信息
       * </pre>
       */
      public java.util.List<protocol_v1.V1GPS.Beacon> getBeaconInfoList() {
        if (beaconInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(beaconInfo_);
        } else {
          return beaconInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protocol_v1.Beacon BeaconInfo = 3;</code>
       *
       * <pre>
       * 信标定位信息
       * </pre>
       */
      public int getBeaconInfoCount() {
        if (beaconInfoBuilder_ == null) {
          return beaconInfo_.size();
        } else {
          return beaconInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protocol_v1.Beacon BeaconInfo = 3;</code>
       *
       * <pre>
       * 信标定位信息
       * </pre>
       */
      public protocol_v1.V1GPS.Beacon getBeaconInfo(int index) {
        if (beaconInfoBuilder_ == null) {
          return beaconInfo_.get(index);
        } else {
          return beaconInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protocol_v1.Beacon BeaconInfo = 3;</code>
       *
       * <pre>
       * 信标定位信息
       * </pre>
       */
      public Builder setBeaconInfo(
          int index, protocol_v1.V1GPS.Beacon value) {
        if (beaconInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBeaconInfoIsMutable();
          beaconInfo_.set(index, value);
          onChanged();
        } else {
          beaconInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.Beacon BeaconInfo = 3;</code>
       *
       * <pre>
       * 信标定位信息
       * </pre>
       */
      public Builder setBeaconInfo(
          int index, protocol_v1.V1GPS.Beacon.Builder builderForValue) {
        if (beaconInfoBuilder_ == null) {
          ensureBeaconInfoIsMutable();
          beaconInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          beaconInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.Beacon BeaconInfo = 3;</code>
       *
       * <pre>
       * 信标定位信息
       * </pre>
       */
      public Builder addBeaconInfo(protocol_v1.V1GPS.Beacon value) {
        if (beaconInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBeaconInfoIsMutable();
          beaconInfo_.add(value);
          onChanged();
        } else {
          beaconInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.Beacon BeaconInfo = 3;</code>
       *
       * <pre>
       * 信标定位信息
       * </pre>
       */
      public Builder addBeaconInfo(
          int index, protocol_v1.V1GPS.Beacon value) {
        if (beaconInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBeaconInfoIsMutable();
          beaconInfo_.add(index, value);
          onChanged();
        } else {
          beaconInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.Beacon BeaconInfo = 3;</code>
       *
       * <pre>
       * 信标定位信息
       * </pre>
       */
      public Builder addBeaconInfo(
          protocol_v1.V1GPS.Beacon.Builder builderForValue) {
        if (beaconInfoBuilder_ == null) {
          ensureBeaconInfoIsMutable();
          beaconInfo_.add(builderForValue.build());
          onChanged();
        } else {
          beaconInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.Beacon BeaconInfo = 3;</code>
       *
       * <pre>
       * 信标定位信息
       * </pre>
       */
      public Builder addBeaconInfo(
          int index, protocol_v1.V1GPS.Beacon.Builder builderForValue) {
        if (beaconInfoBuilder_ == null) {
          ensureBeaconInfoIsMutable();
          beaconInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          beaconInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.Beacon BeaconInfo = 3;</code>
       *
       * <pre>
       * 信标定位信息
       * </pre>
       */
      public Builder addAllBeaconInfo(
          java.lang.Iterable<? extends protocol_v1.V1GPS.Beacon> values) {
        if (beaconInfoBuilder_ == null) {
          ensureBeaconInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, beaconInfo_);
          onChanged();
        } else {
          beaconInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.Beacon BeaconInfo = 3;</code>
       *
       * <pre>
       * 信标定位信息
       * </pre>
       */
      public Builder clearBeaconInfo() {
        if (beaconInfoBuilder_ == null) {
          beaconInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          beaconInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.Beacon BeaconInfo = 3;</code>
       *
       * <pre>
       * 信标定位信息
       * </pre>
       */
      public Builder removeBeaconInfo(int index) {
        if (beaconInfoBuilder_ == null) {
          ensureBeaconInfoIsMutable();
          beaconInfo_.remove(index);
          onChanged();
        } else {
          beaconInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.Beacon BeaconInfo = 3;</code>
       *
       * <pre>
       * 信标定位信息
       * </pre>
       */
      public protocol_v1.V1GPS.Beacon.Builder getBeaconInfoBuilder(
          int index) {
        return getBeaconInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protocol_v1.Beacon BeaconInfo = 3;</code>
       *
       * <pre>
       * 信标定位信息
       * </pre>
       */
      public protocol_v1.V1GPS.BeaconOrBuilder getBeaconInfoOrBuilder(
          int index) {
        if (beaconInfoBuilder_ == null) {
          return beaconInfo_.get(index);  } else {
          return beaconInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protocol_v1.Beacon BeaconInfo = 3;</code>
       *
       * <pre>
       * 信标定位信息
       * </pre>
       */
      public java.util.List<? extends protocol_v1.V1GPS.BeaconOrBuilder> 
           getBeaconInfoOrBuilderList() {
        if (beaconInfoBuilder_ != null) {
          return beaconInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(beaconInfo_);
        }
      }
      /**
       * <code>repeated .protocol_v1.Beacon BeaconInfo = 3;</code>
       *
       * <pre>
       * 信标定位信息
       * </pre>
       */
      public protocol_v1.V1GPS.Beacon.Builder addBeaconInfoBuilder() {
        return getBeaconInfoFieldBuilder().addBuilder(
            protocol_v1.V1GPS.Beacon.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol_v1.Beacon BeaconInfo = 3;</code>
       *
       * <pre>
       * 信标定位信息
       * </pre>
       */
      public protocol_v1.V1GPS.Beacon.Builder addBeaconInfoBuilder(
          int index) {
        return getBeaconInfoFieldBuilder().addBuilder(
            index, protocol_v1.V1GPS.Beacon.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol_v1.Beacon BeaconInfo = 3;</code>
       *
       * <pre>
       * 信标定位信息
       * </pre>
       */
      public java.util.List<protocol_v1.V1GPS.Beacon.Builder> 
           getBeaconInfoBuilderList() {
        return getBeaconInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protocol_v1.V1GPS.Beacon, protocol_v1.V1GPS.Beacon.Builder, protocol_v1.V1GPS.BeaconOrBuilder> 
          getBeaconInfoFieldBuilder() {
        if (beaconInfoBuilder_ == null) {
          beaconInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protocol_v1.V1GPS.Beacon, protocol_v1.V1GPS.Beacon.Builder, protocol_v1.V1GPS.BeaconOrBuilder>(
                  beaconInfo_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          beaconInfo_ = null;
        }
        return beaconInfoBuilder_;
      }

      private int sMS_ ;
      /**
       * <code>optional int32 SMS = 101;</code>
       *
       * <pre>
       * 是否短信回传
       * </pre>
       */
      public boolean hasSMS() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 SMS = 101;</code>
       *
       * <pre>
       * 是否短信回传
       * </pre>
       */
      public int getSMS() {
        return sMS_;
      }
      /**
       * <code>optional int32 SMS = 101;</code>
       *
       * <pre>
       * 是否短信回传
       * </pre>
       */
      public Builder setSMS(int value) {
        bitField0_ |= 0x00000008;
        sMS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 SMS = 101;</code>
       *
       * <pre>
       * 是否短信回传
       * </pre>
       */
      public Builder clearSMS() {
        bitField0_ = (bitField0_ & ~0x00000008);
        sMS_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol_v1.GPSReq)
    }

    // @@protoc_insertion_point(class_scope:protocol_v1.GPSReq)
    private static final protocol_v1.V1GPS.GPSReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol_v1.V1GPS.GPSReq();
    }

    public static protocol_v1.V1GPS.GPSReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<GPSReq>
        PARSER = new com.google.protobuf.AbstractParser<GPSReq>() {
      public GPSReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new GPSReq(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<GPSReq> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GPSReq> getParserForType() {
      return PARSER;
    }

    public protocol_v1.V1GPS.GPSReq getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SatelliteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol_v1.Satellite)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 Id = 1;</code>
     *
     * <pre>
     * 卫星ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int32 Id = 1;</code>
     *
     * <pre>
     * 卫星ID
     * </pre>
     */
    int getId();

    /**
     * <code>optional sint32 Elevation = 2 [default = -1];</code>
     *
     * <pre>
     * 仰角: 度, -1表示未知
     * </pre>
     */
    boolean hasElevation();
    /**
     * <code>optional sint32 Elevation = 2 [default = -1];</code>
     *
     * <pre>
     * 仰角: 度, -1表示未知
     * </pre>
     */
    int getElevation();

    /**
     * <code>optional sint32 Azimuth = 3 [default = -1];</code>
     *
     * <pre>
     * 方位角: 度, -1表示未知
     * </pre>
     */
    boolean hasAzimuth();
    /**
     * <code>optional sint32 Azimuth = 3 [default = -1];</code>
     *
     * <pre>
     * 方位角: 度, -1表示未知
     * </pre>
     */
    int getAzimuth();

    /**
     * <code>optional sint32 SNR = 4 [default = -1];</code>
     *
     * <pre>
     * 信噪比, -1表示未知
     * </pre>
     */
    boolean hasSNR();
    /**
     * <code>optional sint32 SNR = 4 [default = -1];</code>
     *
     * <pre>
     * 信噪比, -1表示未知
     * </pre>
     */
    int getSNR();

    /**
     * <code>optional int32 Used = 5 [default = 0];</code>
     *
     * <pre>
     * 是否用于定位: 0 - 否, 1 - 是
     * </pre>
     */
    boolean hasUsed();
    /**
     * <code>optional int32 Used = 5 [default = 0];</code>
     *
     * <pre>
     * 是否用于定位: 0 - 否, 1 - 是
     * </pre>
     */
    int getUsed();

    /**
     * <code>optional int32 Type = 6 [default = 0];</code>
     *
     * <pre>
     * 卫星类型: 0 - 未知, 1 - GPS, 2 - 北斗, 3 - GLONASS, 4 - 多系统
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional int32 Type = 6 [default = 0];</code>
     *
     * <pre>
     * 卫星类型: 0 - 未知, 1 - GPS, 2 - 北斗, 3 - GLONASS, 4 - 多系统
     * </pre>
     */
    int getType();
  }
  /**
   * Protobuf type {@code protocol_v1.Satellite}
   */
  public  static final class Satellite extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protocol_v1.Satellite)
      SatelliteOrBuilder {
    // Use Satellite.newBuilder() to construct.
    private Satellite(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Satellite() {
      id_ = 0;
      elevation_ = -1;
      azimuth_ = -1;
      sNR_ = -1;
      used_ = 0;
      type_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Satellite(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              elevation_ = input.readSInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              azimuth_ = input.readSInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              sNR_ = input.readSInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              used_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              type_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol_v1.V1GPS.internal_static_protocol_v1_Satellite_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol_v1.V1GPS.internal_static_protocol_v1_Satellite_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol_v1.V1GPS.Satellite.class, protocol_v1.V1GPS.Satellite.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 Id = 1;</code>
     *
     * <pre>
     * 卫星ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 Id = 1;</code>
     *
     * <pre>
     * 卫星ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    public static final int ELEVATION_FIELD_NUMBER = 2;
    private int elevation_;
    /**
     * <code>optional sint32 Elevation = 2 [default = -1];</code>
     *
     * <pre>
     * 仰角: 度, -1表示未知
     * </pre>
     */
    public boolean hasElevation() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional sint32 Elevation = 2 [default = -1];</code>
     *
     * <pre>
     * 仰角: 度, -1表示未知
     * </pre>
     */
    public int getElevation() {
      return elevation_;
    }

    public static final int AZIMUTH_FIELD_NUMBER = 3;
    private int azimuth_;
    /**
     * <code>optional sint32 Azimuth = 3 [default = -1];</code>
     *
     * <pre>
     * 方位角: 度, -1表示未知
     * </pre>
     */
    public boolean hasAzimuth() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional sint32 Azimuth = 3 [default = -1];</code>
     *
     * <pre>
     * 方位角: 度, -1表示未知
     * </pre>
     */
    public int getAzimuth() {
      return azimuth_;
    }

    public static final int SNR_FIELD_NUMBER = 4;
    private int sNR_;
    /**
     * <code>optional sint32 SNR = 4 [default = -1];</code>
     *
     * <pre>
     * 信噪比, -1表示未知
     * </pre>
     */
    public boolean hasSNR() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional sint32 SNR = 4 [default = -1];</code>
     *
     * <pre>
     * 信噪比, -1表示未知
     * </pre>
     */
    public int getSNR() {
      return sNR_;
    }

    public static final int USED_FIELD_NUMBER = 5;
    private int used_;
    /**
     * <code>optional int32 Used = 5 [default = 0];</code>
     *
     * <pre>
     * 是否用于定位: 0 - 否, 1 - 是
     * </pre>
     */
    public boolean hasUsed() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 Used = 5 [default = 0];</code>
     *
     * <pre>
     * 是否用于定位: 0 - 否, 1 - 是
     * </pre>
     */
    public int getUsed() {
      return used_;
    }

    public static final int TYPE_FIELD_NUMBER = 6;
    private int type_;
    /**
     * <code>optional int32 Type = 6 [default = 0];</code>
     *
     * <pre>
     * 卫星类型: 0 - 未知, 1 - GPS, 2 - 北斗, 3 - GLONASS, 4 - 多系统
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 Type = 6 [default = 0];</code>
     *
     * <pre>
     * 卫星类型: 0 - 未知, 1 - GPS, 2 - 北斗, 3 - GLONASS, 4 - 多系统
     * </pre>
     */
    public int getType() {
      return type_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, elevation_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(3, azimuth_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeSInt32(4, sNR_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, used_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, type_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, elevation_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, azimuth_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(4, sNR_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, used_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, type_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static protocol_v1.V1GPS.Satellite parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1GPS.Satellite parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1GPS.Satellite parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1GPS.Satellite parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1GPS.Satellite parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1GPS.Satellite parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1GPS.Satellite parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protocol_v1.V1GPS.Satellite parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1GPS.Satellite parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1GPS.Satellite parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol_v1.V1GPS.Satellite prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol_v1.Satellite}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol_v1.Satellite)
        protocol_v1.V1GPS.SatelliteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol_v1.V1GPS.internal_static_protocol_v1_Satellite_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol_v1.V1GPS.internal_static_protocol_v1_Satellite_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol_v1.V1GPS.Satellite.class, protocol_v1.V1GPS.Satellite.Builder.class);
      }

      // Construct using protocol_v1.V1GPS.Satellite.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        elevation_ = -1;
        bitField0_ = (bitField0_ & ~0x00000002);
        azimuth_ = -1;
        bitField0_ = (bitField0_ & ~0x00000004);
        sNR_ = -1;
        bitField0_ = (bitField0_ & ~0x00000008);
        used_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol_v1.V1GPS.internal_static_protocol_v1_Satellite_descriptor;
      }

      public protocol_v1.V1GPS.Satellite getDefaultInstanceForType() {
        return protocol_v1.V1GPS.Satellite.getDefaultInstance();
      }

      public protocol_v1.V1GPS.Satellite build() {
        protocol_v1.V1GPS.Satellite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol_v1.V1GPS.Satellite buildPartial() {
        protocol_v1.V1GPS.Satellite result = new protocol_v1.V1GPS.Satellite(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.elevation_ = elevation_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.azimuth_ = azimuth_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.sNR_ = sNR_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.used_ = used_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol_v1.V1GPS.Satellite) {
          return mergeFrom((protocol_v1.V1GPS.Satellite)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol_v1.V1GPS.Satellite other) {
        if (other == protocol_v1.V1GPS.Satellite.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasElevation()) {
          setElevation(other.getElevation());
        }
        if (other.hasAzimuth()) {
          setAzimuth(other.getAzimuth());
        }
        if (other.hasSNR()) {
          setSNR(other.getSNR());
        }
        if (other.hasUsed()) {
          setUsed(other.getUsed());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol_v1.V1GPS.Satellite parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol_v1.V1GPS.Satellite) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <code>required int32 Id = 1;</code>
       *
       * <pre>
       * 卫星ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 Id = 1;</code>
       *
       * <pre>
       * 卫星ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 Id = 1;</code>
       *
       * <pre>
       * 卫星ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 Id = 1;</code>
       *
       * <pre>
       * 卫星ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private int elevation_ = -1;
      /**
       * <code>optional sint32 Elevation = 2 [default = -1];</code>
       *
       * <pre>
       * 仰角: 度, -1表示未知
       * </pre>
       */
      public boolean hasElevation() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional sint32 Elevation = 2 [default = -1];</code>
       *
       * <pre>
       * 仰角: 度, -1表示未知
       * </pre>
       */
      public int getElevation() {
        return elevation_;
      }
      /**
       * <code>optional sint32 Elevation = 2 [default = -1];</code>
       *
       * <pre>
       * 仰角: 度, -1表示未知
       * </pre>
       */
      public Builder setElevation(int value) {
        bitField0_ |= 0x00000002;
        elevation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 Elevation = 2 [default = -1];</code>
       *
       * <pre>
       * 仰角: 度, -1表示未知
       * </pre>
       */
      public Builder clearElevation() {
        bitField0_ = (bitField0_ & ~0x00000002);
        elevation_ = -1;
        onChanged();
        return this;
      }

      private int azimuth_ = -1;
      /**
       * <code>optional sint32 Azimuth = 3 [default = -1];</code>
       *
       * <pre>
       * 方位角: 度, -1表示未知
       * </pre>
       */
      public boolean hasAzimuth() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional sint32 Azimuth = 3 [default = -1];</code>
       *
       * <pre>
       * 方位角: 度, -1表示未知
       * </pre>
       */
      public int getAzimuth() {
        return azimuth_;
      }
      /**
       * <code>optional sint32 Azimuth = 3 [default = -1];</code>
       *
       * <pre>
       * 方位角: 度, -1表示未知
       * </pre>
       */
      public Builder setAzimuth(int value) {
        bitField0_ |= 0x00000004;
        azimuth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 Azimuth = 3 [default = -1];</code>
       *
       * <pre>
       * 方位角: 度, -1表示未知
       * </pre>
       */
      public Builder clearAzimuth() {
        bitField0_ = (bitField0_ & ~0x00000004);
        azimuth_ = -1;
        onChanged();
        return this;
      }

      private int sNR_ = -1;
      /**
       * <code>optional sint32 SNR = 4 [default = -1];</code>
       *
       * <pre>
       * 信噪比, -1表示未知
       * </pre>
       */
      public boolean hasSNR() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional sint32 SNR = 4 [default = -1];</code>
       *
       * <pre>
       * 信噪比, -1表示未知
       * </pre>
       */
      public int getSNR() {
        return sNR_;
      }
      /**
       * <code>optional sint32 SNR = 4 [default = -1];</code>
       *
       * <pre>
       * 信噪比, -1表示未知
       * </pre>
       */
      public Builder setSNR(int value) {
        bitField0_ |= 0x00000008;
        sNR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 SNR = 4 [default = -1];</code>
       *
       * <pre>
       * 信噪比, -1表示未知
       * </pre>
       */
      public Builder clearSNR() {
        bitField0_ = (bitField0_ & ~0x00000008);
        sNR_ = -1;
        onChanged();
        return this;
      }

      private int used_ ;
      /**
       * <code>optional int32 Used = 5 [default = 0];</code>
       *
       * <pre>
       * 是否用于定位: 0 - 否, 1 - 是
       * </pre>
       */
      public boolean hasUsed() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 Used = 5 [default = 0];</code>
       *
       * <pre>
       * 是否用于定位: 0 - 否, 1 - 是
       * </pre>
       */
      public int getUsed() {
        return used_;
      }
      /**
       * <code>optional int32 Used = 5 [default = 0];</code>
       *
       * <pre>
       * 是否用于定位: 0 - 否, 1 - 是
       * </pre>
       */
      public Builder setUsed(int value) {
        bitField0_ |= 0x00000010;
        used_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Used = 5 [default = 0];</code>
       *
       * <pre>
       * 是否用于定位: 0 - 否, 1 - 是
       * </pre>
       */
      public Builder clearUsed() {
        bitField0_ = (bitField0_ & ~0x00000010);
        used_ = 0;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <code>optional int32 Type = 6 [default = 0];</code>
       *
       * <pre>
       * 卫星类型: 0 - 未知, 1 - GPS, 2 - 北斗, 3 - GLONASS, 4 - 多系统
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 Type = 6 [default = 0];</code>
       *
       * <pre>
       * 卫星类型: 0 - 未知, 1 - GPS, 2 - 北斗, 3 - GLONASS, 4 - 多系统
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 Type = 6 [default = 0];</code>
       *
       * <pre>
       * 卫星类型: 0 - 未知, 1 - GPS, 2 - 北斗, 3 - GLONASS, 4 - 多系统
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000020;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Type = 6 [default = 0];</code>
       *
       * <pre>
       * 卫星类型: 0 - 未知, 1 - GPS, 2 - 北斗, 3 - GLONASS, 4 - 多系统
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000020);
        type_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol_v1.Satellite)
    }

    // @@protoc_insertion_point(class_scope:protocol_v1.Satellite)
    private static final protocol_v1.V1GPS.Satellite DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol_v1.V1GPS.Satellite();
    }

    public static protocol_v1.V1GPS.Satellite getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Satellite>
        PARSER = new com.google.protobuf.AbstractParser<Satellite>() {
      public Satellite parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Satellite(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Satellite> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Satellite> getParserForType() {
      return PARSER;
    }

    public protocol_v1.V1GPS.Satellite getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GPSOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol_v1.GPS)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 Timestamp = 1 [default = 0];</code>
     *
     * <pre>
     * 定位时间, unix时间戳
     * </pre>
     */
    boolean hasTimestamp();
    /**
     * <code>optional uint32 Timestamp = 1 [default = 0];</code>
     *
     * <pre>
     * 定位时间, unix时间戳
     * </pre>
     */
    int getTimestamp();

    /**
     * <code>optional sint32 Latitude = 2 [default = 2000000000];</code>
     *
     * <pre>
     * 纬度: 度, 精确到小数点后第7位, 定位失败为200
     * </pre>
     */
    boolean hasLatitude();
    /**
     * <code>optional sint32 Latitude = 2 [default = 2000000000];</code>
     *
     * <pre>
     * 纬度: 度, 精确到小数点后第7位, 定位失败为200
     * </pre>
     */
    int getLatitude();

    /**
     * <code>optional sint32 Longitude = 3 [default = 2000000000];</code>
     *
     * <pre>
     * 经度: 度, 精确到小数点后第7位, 定位失败为200
     * </pre>
     */
    boolean hasLongitude();
    /**
     * <code>optional sint32 Longitude = 3 [default = 2000000000];</code>
     *
     * <pre>
     * 经度: 度, 精确到小数点后第7位, 定位失败为200
     * </pre>
     */
    int getLongitude();

    /**
     * <code>optional sint32 Altitude = 4 [default = 0];</code>
     *
     * <pre>
     * 海拔高度: 米, 精确到小数点后2位
     * </pre>
     */
    boolean hasAltitude();
    /**
     * <code>optional sint32 Altitude = 4 [default = 0];</code>
     *
     * <pre>
     * 海拔高度: 米, 精确到小数点后2位
     * </pre>
     */
    int getAltitude();

    /**
     * <code>optional int32 Quality = 5 [default = 0];</code>
     *
     * <pre>
     * 定位质量: 0 - 无定位, 1 - 普通定位, 2 - 差分定位, 6 - 粗略定位
     * </pre>
     */
    boolean hasQuality();
    /**
     * <code>optional int32 Quality = 5 [default = 0];</code>
     *
     * <pre>
     * 定位质量: 0 - 无定位, 1 - 普通定位, 2 - 差分定位, 6 - 粗略定位
     * </pre>
     */
    int getQuality();

    /**
     * <code>optional int32 Mode = 6 [default = 0];</code>
     *
     * <pre>
     * 定位模式: 1 - 2D,  2 - 3D
     * </pre>
     */
    boolean hasMode();
    /**
     * <code>optional int32 Mode = 6 [default = 0];</code>
     *
     * <pre>
     * 定位模式: 1 - 2D,  2 - 3D
     * </pre>
     */
    int getMode();

    /**
     * <code>optional int32 PDOP = 7 [default = 0];</code>
     *
     * <pre>
     * 位置精确因子: 精确到小数点后2位
     * </pre>
     */
    boolean hasPDOP();
    /**
     * <code>optional int32 PDOP = 7 [default = 0];</code>
     *
     * <pre>
     * 位置精确因子: 精确到小数点后2位
     * </pre>
     */
    int getPDOP();

    /**
     * <code>optional int32 HDOP = 8 [default = 0];</code>
     *
     * <pre>
     * 水平精确因子: 精确到小数点后2位
     * </pre>
     */
    boolean hasHDOP();
    /**
     * <code>optional int32 HDOP = 8 [default = 0];</code>
     *
     * <pre>
     * 水平精确因子: 精确到小数点后2位
     * </pre>
     */
    int getHDOP();

    /**
     * <code>optional int32 VDOP = 9 [default = 0];</code>
     *
     * <pre>
     * 垂直精确因子: 精确到小数点后2位
     * </pre>
     */
    boolean hasVDOP();
    /**
     * <code>optional int32 VDOP = 9 [default = 0];</code>
     *
     * <pre>
     * 垂直精确因子: 精确到小数点后2位
     * </pre>
     */
    int getVDOP();

    /**
     * <code>optional int32 SatellitesUsed = 10 [default = 0];</code>
     *
     * <pre>
     * 用于定位的卫星数
     * </pre>
     */
    boolean hasSatellitesUsed();
    /**
     * <code>optional int32 SatellitesUsed = 10 [default = 0];</code>
     *
     * <pre>
     * 用于定位的卫星数
     * </pre>
     */
    int getSatellitesUsed();

    /**
     * <code>optional int32 SatellitesInView = 11 [default = 0];</code>
     *
     * <pre>
     * 发现的卫星数
     * </pre>
     */
    boolean hasSatellitesInView();
    /**
     * <code>optional int32 SatellitesInView = 11 [default = 0];</code>
     *
     * <pre>
     * 发现的卫星数
     * </pre>
     */
    int getSatellitesInView();

    /**
     * <code>optional int32 Speed = 12 [default = 0];</code>
     *
     * <pre>
     * 速度: 米/秒, 精确到小数点后1位
     * </pre>
     */
    boolean hasSpeed();
    /**
     * <code>optional int32 Speed = 12 [default = 0];</code>
     *
     * <pre>
     * 速度: 米/秒, 精确到小数点后1位
     * </pre>
     */
    int getSpeed();

    /**
     * <code>optional sint32 Course = 13 [default = 0];</code>
     *
     * <pre>
     * 航向: 度, 精确到小数点后1位
     * </pre>
     */
    boolean hasCourse();
    /**
     * <code>optional sint32 Course = 13 [default = 0];</code>
     *
     * <pre>
     * 航向: 度, 精确到小数点后1位
     * </pre>
     */
    int getCourse();

    /**
     * <code>optional int32 HACC = 14 [default = 0];</code>
     *
     * <pre>
     * 水平定位精确: 米, 精确到小数点后1位
     * </pre>
     */
    boolean hasHACC();
    /**
     * <code>optional int32 HACC = 14 [default = 0];</code>
     *
     * <pre>
     * 水平定位精确: 米, 精确到小数点后1位
     * </pre>
     */
    int getHACC();

    /**
     * <code>optional int32 VACC = 15 [default = 0];</code>
     *
     * <pre>
     * 垂直定位精确: 米, 精确到小数点后1位
     * </pre>
     */
    boolean hasVACC();
    /**
     * <code>optional int32 VACC = 15 [default = 0];</code>
     *
     * <pre>
     * 垂直定位精确: 米, 精确到小数点后1位
     * </pre>
     */
    int getVACC();

    /**
     * <code>optional int32 FixTime = 16 [default = 0];</code>
     *
     * <pre>
     * 定位耗时: 秒
     * </pre>
     */
    boolean hasFixTime();
    /**
     * <code>optional int32 FixTime = 16 [default = 0];</code>
     *
     * <pre>
     * 定位耗时: 秒
     * </pre>
     */
    int getFixTime();

    /**
     * <code>repeated .protocol_v1.Satellite Satellites = 17;</code>
     *
     * <pre>
     * 卫星信息
     * </pre>
     */
    java.util.List<protocol_v1.V1GPS.Satellite> 
        getSatellitesList();
    /**
     * <code>repeated .protocol_v1.Satellite Satellites = 17;</code>
     *
     * <pre>
     * 卫星信息
     * </pre>
     */
    protocol_v1.V1GPS.Satellite getSatellites(int index);
    /**
     * <code>repeated .protocol_v1.Satellite Satellites = 17;</code>
     *
     * <pre>
     * 卫星信息
     * </pre>
     */
    int getSatellitesCount();
    /**
     * <code>repeated .protocol_v1.Satellite Satellites = 17;</code>
     *
     * <pre>
     * 卫星信息
     * </pre>
     */
    java.util.List<? extends protocol_v1.V1GPS.SatelliteOrBuilder> 
        getSatellitesOrBuilderList();
    /**
     * <code>repeated .protocol_v1.Satellite Satellites = 17;</code>
     *
     * <pre>
     * 卫星信息
     * </pre>
     */
    protocol_v1.V1GPS.SatelliteOrBuilder getSatellitesOrBuilder(
        int index);

    /**
     * <code>optional int32 SampleType = 20 [default = 0];</code>
     *
     * <pre>
     * 采集类型(按位标记): 0000/0001:普通采样   0010:电压BOOST    0100:速度BOOST
     * </pre>
     */
    boolean hasSampleType();
    /**
     * <code>optional int32 SampleType = 20 [default = 0];</code>
     *
     * <pre>
     * 采集类型(按位标记): 0000/0001:普通采样   0010:电压BOOST    0100:速度BOOST
     * </pre>
     */
    int getSampleType();

    /**
     * <code>optional sint32 GeoidAltitude = 21 [default = 0];</code>
     *
     * <pre>
     * 地平高度: 米, 精确到小数点后2位
     * </pre>
     */
    boolean hasGeoidAltitude();
    /**
     * <code>optional sint32 GeoidAltitude = 21 [default = 0];</code>
     *
     * <pre>
     * 地平高度: 米, 精确到小数点后2位
     * </pre>
     */
    int getGeoidAltitude();
  }
  /**
   * Protobuf type {@code protocol_v1.GPS}
   */
  public  static final class GPS extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protocol_v1.GPS)
      GPSOrBuilder {
    // Use GPS.newBuilder() to construct.
    private GPS(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private GPS() {
      timestamp_ = 0;
      latitude_ = 2000000000;
      longitude_ = 2000000000;
      altitude_ = 0;
      quality_ = 0;
      mode_ = 0;
      pDOP_ = 0;
      hDOP_ = 0;
      vDOP_ = 0;
      satellitesUsed_ = 0;
      satellitesInView_ = 0;
      speed_ = 0;
      course_ = 0;
      hACC_ = 0;
      vACC_ = 0;
      fixTime_ = 0;
      satellites_ = java.util.Collections.emptyList();
      sampleType_ = 0;
      geoidAltitude_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GPS(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              timestamp_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              latitude_ = input.readSInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              longitude_ = input.readSInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              altitude_ = input.readSInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              quality_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              mode_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              pDOP_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              hDOP_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              vDOP_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              satellitesUsed_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              satellitesInView_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              speed_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              course_ = input.readSInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              hACC_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              vACC_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              fixTime_ = input.readInt32();
              break;
            }
            case 138: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                satellites_ = new java.util.ArrayList<protocol_v1.V1GPS.Satellite>();
                mutable_bitField0_ |= 0x00010000;
              }
              satellites_.add(input.readMessage(protocol_v1.V1GPS.Satellite.parser(), extensionRegistry));
              break;
            }
            case 160: {
              bitField0_ |= 0x00010000;
              sampleType_ = input.readInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00020000;
              geoidAltitude_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
          satellites_ = java.util.Collections.unmodifiableList(satellites_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol_v1.V1GPS.internal_static_protocol_v1_GPS_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol_v1.V1GPS.internal_static_protocol_v1_GPS_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol_v1.V1GPS.GPS.class, protocol_v1.V1GPS.GPS.Builder.class);
    }

    private int bitField0_;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private int timestamp_;
    /**
     * <code>optional uint32 Timestamp = 1 [default = 0];</code>
     *
     * <pre>
     * 定位时间, unix时间戳
     * </pre>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 Timestamp = 1 [default = 0];</code>
     *
     * <pre>
     * 定位时间, unix时间戳
     * </pre>
     */
    public int getTimestamp() {
      return timestamp_;
    }

    public static final int LATITUDE_FIELD_NUMBER = 2;
    private int latitude_;
    /**
     * <code>optional sint32 Latitude = 2 [default = 2000000000];</code>
     *
     * <pre>
     * 纬度: 度, 精确到小数点后第7位, 定位失败为200
     * </pre>
     */
    public boolean hasLatitude() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional sint32 Latitude = 2 [default = 2000000000];</code>
     *
     * <pre>
     * 纬度: 度, 精确到小数点后第7位, 定位失败为200
     * </pre>
     */
    public int getLatitude() {
      return latitude_;
    }

    public static final int LONGITUDE_FIELD_NUMBER = 3;
    private int longitude_;
    /**
     * <code>optional sint32 Longitude = 3 [default = 2000000000];</code>
     *
     * <pre>
     * 经度: 度, 精确到小数点后第7位, 定位失败为200
     * </pre>
     */
    public boolean hasLongitude() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional sint32 Longitude = 3 [default = 2000000000];</code>
     *
     * <pre>
     * 经度: 度, 精确到小数点后第7位, 定位失败为200
     * </pre>
     */
    public int getLongitude() {
      return longitude_;
    }

    public static final int ALTITUDE_FIELD_NUMBER = 4;
    private int altitude_;
    /**
     * <code>optional sint32 Altitude = 4 [default = 0];</code>
     *
     * <pre>
     * 海拔高度: 米, 精确到小数点后2位
     * </pre>
     */
    public boolean hasAltitude() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional sint32 Altitude = 4 [default = 0];</code>
     *
     * <pre>
     * 海拔高度: 米, 精确到小数点后2位
     * </pre>
     */
    public int getAltitude() {
      return altitude_;
    }

    public static final int QUALITY_FIELD_NUMBER = 5;
    private int quality_;
    /**
     * <code>optional int32 Quality = 5 [default = 0];</code>
     *
     * <pre>
     * 定位质量: 0 - 无定位, 1 - 普通定位, 2 - 差分定位, 6 - 粗略定位
     * </pre>
     */
    public boolean hasQuality() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 Quality = 5 [default = 0];</code>
     *
     * <pre>
     * 定位质量: 0 - 无定位, 1 - 普通定位, 2 - 差分定位, 6 - 粗略定位
     * </pre>
     */
    public int getQuality() {
      return quality_;
    }

    public static final int MODE_FIELD_NUMBER = 6;
    private int mode_;
    /**
     * <code>optional int32 Mode = 6 [default = 0];</code>
     *
     * <pre>
     * 定位模式: 1 - 2D,  2 - 3D
     * </pre>
     */
    public boolean hasMode() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 Mode = 6 [default = 0];</code>
     *
     * <pre>
     * 定位模式: 1 - 2D,  2 - 3D
     * </pre>
     */
    public int getMode() {
      return mode_;
    }

    public static final int PDOP_FIELD_NUMBER = 7;
    private int pDOP_;
    /**
     * <code>optional int32 PDOP = 7 [default = 0];</code>
     *
     * <pre>
     * 位置精确因子: 精确到小数点后2位
     * </pre>
     */
    public boolean hasPDOP() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 PDOP = 7 [default = 0];</code>
     *
     * <pre>
     * 位置精确因子: 精确到小数点后2位
     * </pre>
     */
    public int getPDOP() {
      return pDOP_;
    }

    public static final int HDOP_FIELD_NUMBER = 8;
    private int hDOP_;
    /**
     * <code>optional int32 HDOP = 8 [default = 0];</code>
     *
     * <pre>
     * 水平精确因子: 精确到小数点后2位
     * </pre>
     */
    public boolean hasHDOP() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 HDOP = 8 [default = 0];</code>
     *
     * <pre>
     * 水平精确因子: 精确到小数点后2位
     * </pre>
     */
    public int getHDOP() {
      return hDOP_;
    }

    public static final int VDOP_FIELD_NUMBER = 9;
    private int vDOP_;
    /**
     * <code>optional int32 VDOP = 9 [default = 0];</code>
     *
     * <pre>
     * 垂直精确因子: 精确到小数点后2位
     * </pre>
     */
    public boolean hasVDOP() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 VDOP = 9 [default = 0];</code>
     *
     * <pre>
     * 垂直精确因子: 精确到小数点后2位
     * </pre>
     */
    public int getVDOP() {
      return vDOP_;
    }

    public static final int SATELLITESUSED_FIELD_NUMBER = 10;
    private int satellitesUsed_;
    /**
     * <code>optional int32 SatellitesUsed = 10 [default = 0];</code>
     *
     * <pre>
     * 用于定位的卫星数
     * </pre>
     */
    public boolean hasSatellitesUsed() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 SatellitesUsed = 10 [default = 0];</code>
     *
     * <pre>
     * 用于定位的卫星数
     * </pre>
     */
    public int getSatellitesUsed() {
      return satellitesUsed_;
    }

    public static final int SATELLITESINVIEW_FIELD_NUMBER = 11;
    private int satellitesInView_;
    /**
     * <code>optional int32 SatellitesInView = 11 [default = 0];</code>
     *
     * <pre>
     * 发现的卫星数
     * </pre>
     */
    public boolean hasSatellitesInView() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 SatellitesInView = 11 [default = 0];</code>
     *
     * <pre>
     * 发现的卫星数
     * </pre>
     */
    public int getSatellitesInView() {
      return satellitesInView_;
    }

    public static final int SPEED_FIELD_NUMBER = 12;
    private int speed_;
    /**
     * <code>optional int32 Speed = 12 [default = 0];</code>
     *
     * <pre>
     * 速度: 米/秒, 精确到小数点后1位
     * </pre>
     */
    public boolean hasSpeed() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 Speed = 12 [default = 0];</code>
     *
     * <pre>
     * 速度: 米/秒, 精确到小数点后1位
     * </pre>
     */
    public int getSpeed() {
      return speed_;
    }

    public static final int COURSE_FIELD_NUMBER = 13;
    private int course_;
    /**
     * <code>optional sint32 Course = 13 [default = 0];</code>
     *
     * <pre>
     * 航向: 度, 精确到小数点后1位
     * </pre>
     */
    public boolean hasCourse() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional sint32 Course = 13 [default = 0];</code>
     *
     * <pre>
     * 航向: 度, 精确到小数点后1位
     * </pre>
     */
    public int getCourse() {
      return course_;
    }

    public static final int HACC_FIELD_NUMBER = 14;
    private int hACC_;
    /**
     * <code>optional int32 HACC = 14 [default = 0];</code>
     *
     * <pre>
     * 水平定位精确: 米, 精确到小数点后1位
     * </pre>
     */
    public boolean hasHACC() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 HACC = 14 [default = 0];</code>
     *
     * <pre>
     * 水平定位精确: 米, 精确到小数点后1位
     * </pre>
     */
    public int getHACC() {
      return hACC_;
    }

    public static final int VACC_FIELD_NUMBER = 15;
    private int vACC_;
    /**
     * <code>optional int32 VACC = 15 [default = 0];</code>
     *
     * <pre>
     * 垂直定位精确: 米, 精确到小数点后1位
     * </pre>
     */
    public boolean hasVACC() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 VACC = 15 [default = 0];</code>
     *
     * <pre>
     * 垂直定位精确: 米, 精确到小数点后1位
     * </pre>
     */
    public int getVACC() {
      return vACC_;
    }

    public static final int FIXTIME_FIELD_NUMBER = 16;
    private int fixTime_;
    /**
     * <code>optional int32 FixTime = 16 [default = 0];</code>
     *
     * <pre>
     * 定位耗时: 秒
     * </pre>
     */
    public boolean hasFixTime() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 FixTime = 16 [default = 0];</code>
     *
     * <pre>
     * 定位耗时: 秒
     * </pre>
     */
    public int getFixTime() {
      return fixTime_;
    }

    public static final int SATELLITES_FIELD_NUMBER = 17;
    private java.util.List<protocol_v1.V1GPS.Satellite> satellites_;
    /**
     * <code>repeated .protocol_v1.Satellite Satellites = 17;</code>
     *
     * <pre>
     * 卫星信息
     * </pre>
     */
    public java.util.List<protocol_v1.V1GPS.Satellite> getSatellitesList() {
      return satellites_;
    }
    /**
     * <code>repeated .protocol_v1.Satellite Satellites = 17;</code>
     *
     * <pre>
     * 卫星信息
     * </pre>
     */
    public java.util.List<? extends protocol_v1.V1GPS.SatelliteOrBuilder> 
        getSatellitesOrBuilderList() {
      return satellites_;
    }
    /**
     * <code>repeated .protocol_v1.Satellite Satellites = 17;</code>
     *
     * <pre>
     * 卫星信息
     * </pre>
     */
    public int getSatellitesCount() {
      return satellites_.size();
    }
    /**
     * <code>repeated .protocol_v1.Satellite Satellites = 17;</code>
     *
     * <pre>
     * 卫星信息
     * </pre>
     */
    public protocol_v1.V1GPS.Satellite getSatellites(int index) {
      return satellites_.get(index);
    }
    /**
     * <code>repeated .protocol_v1.Satellite Satellites = 17;</code>
     *
     * <pre>
     * 卫星信息
     * </pre>
     */
    public protocol_v1.V1GPS.SatelliteOrBuilder getSatellitesOrBuilder(
        int index) {
      return satellites_.get(index);
    }

    public static final int SAMPLETYPE_FIELD_NUMBER = 20;
    private int sampleType_;
    /**
     * <code>optional int32 SampleType = 20 [default = 0];</code>
     *
     * <pre>
     * 采集类型(按位标记): 0000/0001:普通采样   0010:电压BOOST    0100:速度BOOST
     * </pre>
     */
    public boolean hasSampleType() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 SampleType = 20 [default = 0];</code>
     *
     * <pre>
     * 采集类型(按位标记): 0000/0001:普通采样   0010:电压BOOST    0100:速度BOOST
     * </pre>
     */
    public int getSampleType() {
      return sampleType_;
    }

    public static final int GEOIDALTITUDE_FIELD_NUMBER = 21;
    private int geoidAltitude_;
    /**
     * <code>optional sint32 GeoidAltitude = 21 [default = 0];</code>
     *
     * <pre>
     * 地平高度: 米, 精确到小数点后2位
     * </pre>
     */
    public boolean hasGeoidAltitude() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional sint32 GeoidAltitude = 21 [default = 0];</code>
     *
     * <pre>
     * 地平高度: 米, 精确到小数点后2位
     * </pre>
     */
    public int getGeoidAltitude() {
      return geoidAltitude_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getSatellitesCount(); i++) {
        if (!getSatellites(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, timestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, latitude_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(3, longitude_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeSInt32(4, altitude_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, quality_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, mode_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, pDOP_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, hDOP_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, vDOP_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, satellitesUsed_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, satellitesInView_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, speed_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeSInt32(13, course_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, hACC_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(15, vACC_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(16, fixTime_);
      }
      for (int i = 0; i < satellites_.size(); i++) {
        output.writeMessage(17, satellites_.get(i));
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(20, sampleType_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeSInt32(21, geoidAltitude_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, timestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, latitude_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, longitude_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(4, altitude_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, quality_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, mode_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, pDOP_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, hDOP_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, vDOP_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, satellitesUsed_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, satellitesInView_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, speed_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(13, course_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, hACC_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, vACC_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, fixTime_);
      }
      for (int i = 0; i < satellites_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, satellites_.get(i));
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, sampleType_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(21, geoidAltitude_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static protocol_v1.V1GPS.GPS parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1GPS.GPS parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1GPS.GPS parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1GPS.GPS parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1GPS.GPS parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1GPS.GPS parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1GPS.GPS parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protocol_v1.V1GPS.GPS parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1GPS.GPS parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1GPS.GPS parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol_v1.V1GPS.GPS prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol_v1.GPS}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol_v1.GPS)
        protocol_v1.V1GPS.GPSOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol_v1.V1GPS.internal_static_protocol_v1_GPS_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol_v1.V1GPS.internal_static_protocol_v1_GPS_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol_v1.V1GPS.GPS.class, protocol_v1.V1GPS.GPS.Builder.class);
      }

      // Construct using protocol_v1.V1GPS.GPS.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSatellitesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        timestamp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        latitude_ = 2000000000;
        bitField0_ = (bitField0_ & ~0x00000002);
        longitude_ = 2000000000;
        bitField0_ = (bitField0_ & ~0x00000004);
        altitude_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        quality_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        mode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        pDOP_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        hDOP_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        vDOP_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        satellitesUsed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        satellitesInView_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        speed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        course_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        hACC_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        vACC_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        fixTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        if (satellitesBuilder_ == null) {
          satellites_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00010000);
        } else {
          satellitesBuilder_.clear();
        }
        sampleType_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        geoidAltitude_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol_v1.V1GPS.internal_static_protocol_v1_GPS_descriptor;
      }

      public protocol_v1.V1GPS.GPS getDefaultInstanceForType() {
        return protocol_v1.V1GPS.GPS.getDefaultInstance();
      }

      public protocol_v1.V1GPS.GPS build() {
        protocol_v1.V1GPS.GPS result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol_v1.V1GPS.GPS buildPartial() {
        protocol_v1.V1GPS.GPS result = new protocol_v1.V1GPS.GPS(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.latitude_ = latitude_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.longitude_ = longitude_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.altitude_ = altitude_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.quality_ = quality_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.mode_ = mode_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.pDOP_ = pDOP_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.hDOP_ = hDOP_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.vDOP_ = vDOP_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.satellitesUsed_ = satellitesUsed_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.satellitesInView_ = satellitesInView_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.speed_ = speed_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.course_ = course_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.hACC_ = hACC_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.vACC_ = vACC_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.fixTime_ = fixTime_;
        if (satellitesBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000)) {
            satellites_ = java.util.Collections.unmodifiableList(satellites_);
            bitField0_ = (bitField0_ & ~0x00010000);
          }
          result.satellites_ = satellites_;
        } else {
          result.satellites_ = satellitesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.sampleType_ = sampleType_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.geoidAltitude_ = geoidAltitude_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol_v1.V1GPS.GPS) {
          return mergeFrom((protocol_v1.V1GPS.GPS)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol_v1.V1GPS.GPS other) {
        if (other == protocol_v1.V1GPS.GPS.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasLatitude()) {
          setLatitude(other.getLatitude());
        }
        if (other.hasLongitude()) {
          setLongitude(other.getLongitude());
        }
        if (other.hasAltitude()) {
          setAltitude(other.getAltitude());
        }
        if (other.hasQuality()) {
          setQuality(other.getQuality());
        }
        if (other.hasMode()) {
          setMode(other.getMode());
        }
        if (other.hasPDOP()) {
          setPDOP(other.getPDOP());
        }
        if (other.hasHDOP()) {
          setHDOP(other.getHDOP());
        }
        if (other.hasVDOP()) {
          setVDOP(other.getVDOP());
        }
        if (other.hasSatellitesUsed()) {
          setSatellitesUsed(other.getSatellitesUsed());
        }
        if (other.hasSatellitesInView()) {
          setSatellitesInView(other.getSatellitesInView());
        }
        if (other.hasSpeed()) {
          setSpeed(other.getSpeed());
        }
        if (other.hasCourse()) {
          setCourse(other.getCourse());
        }
        if (other.hasHACC()) {
          setHACC(other.getHACC());
        }
        if (other.hasVACC()) {
          setVACC(other.getVACC());
        }
        if (other.hasFixTime()) {
          setFixTime(other.getFixTime());
        }
        if (satellitesBuilder_ == null) {
          if (!other.satellites_.isEmpty()) {
            if (satellites_.isEmpty()) {
              satellites_ = other.satellites_;
              bitField0_ = (bitField0_ & ~0x00010000);
            } else {
              ensureSatellitesIsMutable();
              satellites_.addAll(other.satellites_);
            }
            onChanged();
          }
        } else {
          if (!other.satellites_.isEmpty()) {
            if (satellitesBuilder_.isEmpty()) {
              satellitesBuilder_.dispose();
              satellitesBuilder_ = null;
              satellites_ = other.satellites_;
              bitField0_ = (bitField0_ & ~0x00010000);
              satellitesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSatellitesFieldBuilder() : null;
            } else {
              satellitesBuilder_.addAllMessages(other.satellites_);
            }
          }
        }
        if (other.hasSampleType()) {
          setSampleType(other.getSampleType());
        }
        if (other.hasGeoidAltitude()) {
          setGeoidAltitude(other.getGeoidAltitude());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getSatellitesCount(); i++) {
          if (!getSatellites(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol_v1.V1GPS.GPS parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol_v1.V1GPS.GPS) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int timestamp_ ;
      /**
       * <code>optional uint32 Timestamp = 1 [default = 0];</code>
       *
       * <pre>
       * 定位时间, unix时间戳
       * </pre>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 Timestamp = 1 [default = 0];</code>
       *
       * <pre>
       * 定位时间, unix时间戳
       * </pre>
       */
      public int getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional uint32 Timestamp = 1 [default = 0];</code>
       *
       * <pre>
       * 定位时间, unix时间戳
       * </pre>
       */
      public Builder setTimestamp(int value) {
        bitField0_ |= 0x00000001;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 Timestamp = 1 [default = 0];</code>
       *
       * <pre>
       * 定位时间, unix时间戳
       * </pre>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0;
        onChanged();
        return this;
      }

      private int latitude_ = 2000000000;
      /**
       * <code>optional sint32 Latitude = 2 [default = 2000000000];</code>
       *
       * <pre>
       * 纬度: 度, 精确到小数点后第7位, 定位失败为200
       * </pre>
       */
      public boolean hasLatitude() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional sint32 Latitude = 2 [default = 2000000000];</code>
       *
       * <pre>
       * 纬度: 度, 精确到小数点后第7位, 定位失败为200
       * </pre>
       */
      public int getLatitude() {
        return latitude_;
      }
      /**
       * <code>optional sint32 Latitude = 2 [default = 2000000000];</code>
       *
       * <pre>
       * 纬度: 度, 精确到小数点后第7位, 定位失败为200
       * </pre>
       */
      public Builder setLatitude(int value) {
        bitField0_ |= 0x00000002;
        latitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 Latitude = 2 [default = 2000000000];</code>
       *
       * <pre>
       * 纬度: 度, 精确到小数点后第7位, 定位失败为200
       * </pre>
       */
      public Builder clearLatitude() {
        bitField0_ = (bitField0_ & ~0x00000002);
        latitude_ = 2000000000;
        onChanged();
        return this;
      }

      private int longitude_ = 2000000000;
      /**
       * <code>optional sint32 Longitude = 3 [default = 2000000000];</code>
       *
       * <pre>
       * 经度: 度, 精确到小数点后第7位, 定位失败为200
       * </pre>
       */
      public boolean hasLongitude() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional sint32 Longitude = 3 [default = 2000000000];</code>
       *
       * <pre>
       * 经度: 度, 精确到小数点后第7位, 定位失败为200
       * </pre>
       */
      public int getLongitude() {
        return longitude_;
      }
      /**
       * <code>optional sint32 Longitude = 3 [default = 2000000000];</code>
       *
       * <pre>
       * 经度: 度, 精确到小数点后第7位, 定位失败为200
       * </pre>
       */
      public Builder setLongitude(int value) {
        bitField0_ |= 0x00000004;
        longitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 Longitude = 3 [default = 2000000000];</code>
       *
       * <pre>
       * 经度: 度, 精确到小数点后第7位, 定位失败为200
       * </pre>
       */
      public Builder clearLongitude() {
        bitField0_ = (bitField0_ & ~0x00000004);
        longitude_ = 2000000000;
        onChanged();
        return this;
      }

      private int altitude_ ;
      /**
       * <code>optional sint32 Altitude = 4 [default = 0];</code>
       *
       * <pre>
       * 海拔高度: 米, 精确到小数点后2位
       * </pre>
       */
      public boolean hasAltitude() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional sint32 Altitude = 4 [default = 0];</code>
       *
       * <pre>
       * 海拔高度: 米, 精确到小数点后2位
       * </pre>
       */
      public int getAltitude() {
        return altitude_;
      }
      /**
       * <code>optional sint32 Altitude = 4 [default = 0];</code>
       *
       * <pre>
       * 海拔高度: 米, 精确到小数点后2位
       * </pre>
       */
      public Builder setAltitude(int value) {
        bitField0_ |= 0x00000008;
        altitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 Altitude = 4 [default = 0];</code>
       *
       * <pre>
       * 海拔高度: 米, 精确到小数点后2位
       * </pre>
       */
      public Builder clearAltitude() {
        bitField0_ = (bitField0_ & ~0x00000008);
        altitude_ = 0;
        onChanged();
        return this;
      }

      private int quality_ ;
      /**
       * <code>optional int32 Quality = 5 [default = 0];</code>
       *
       * <pre>
       * 定位质量: 0 - 无定位, 1 - 普通定位, 2 - 差分定位, 6 - 粗略定位
       * </pre>
       */
      public boolean hasQuality() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 Quality = 5 [default = 0];</code>
       *
       * <pre>
       * 定位质量: 0 - 无定位, 1 - 普通定位, 2 - 差分定位, 6 - 粗略定位
       * </pre>
       */
      public int getQuality() {
        return quality_;
      }
      /**
       * <code>optional int32 Quality = 5 [default = 0];</code>
       *
       * <pre>
       * 定位质量: 0 - 无定位, 1 - 普通定位, 2 - 差分定位, 6 - 粗略定位
       * </pre>
       */
      public Builder setQuality(int value) {
        bitField0_ |= 0x00000010;
        quality_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Quality = 5 [default = 0];</code>
       *
       * <pre>
       * 定位质量: 0 - 无定位, 1 - 普通定位, 2 - 差分定位, 6 - 粗略定位
       * </pre>
       */
      public Builder clearQuality() {
        bitField0_ = (bitField0_ & ~0x00000010);
        quality_ = 0;
        onChanged();
        return this;
      }

      private int mode_ ;
      /**
       * <code>optional int32 Mode = 6 [default = 0];</code>
       *
       * <pre>
       * 定位模式: 1 - 2D,  2 - 3D
       * </pre>
       */
      public boolean hasMode() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 Mode = 6 [default = 0];</code>
       *
       * <pre>
       * 定位模式: 1 - 2D,  2 - 3D
       * </pre>
       */
      public int getMode() {
        return mode_;
      }
      /**
       * <code>optional int32 Mode = 6 [default = 0];</code>
       *
       * <pre>
       * 定位模式: 1 - 2D,  2 - 3D
       * </pre>
       */
      public Builder setMode(int value) {
        bitField0_ |= 0x00000020;
        mode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Mode = 6 [default = 0];</code>
       *
       * <pre>
       * 定位模式: 1 - 2D,  2 - 3D
       * </pre>
       */
      public Builder clearMode() {
        bitField0_ = (bitField0_ & ~0x00000020);
        mode_ = 0;
        onChanged();
        return this;
      }

      private int pDOP_ ;
      /**
       * <code>optional int32 PDOP = 7 [default = 0];</code>
       *
       * <pre>
       * 位置精确因子: 精确到小数点后2位
       * </pre>
       */
      public boolean hasPDOP() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 PDOP = 7 [default = 0];</code>
       *
       * <pre>
       * 位置精确因子: 精确到小数点后2位
       * </pre>
       */
      public int getPDOP() {
        return pDOP_;
      }
      /**
       * <code>optional int32 PDOP = 7 [default = 0];</code>
       *
       * <pre>
       * 位置精确因子: 精确到小数点后2位
       * </pre>
       */
      public Builder setPDOP(int value) {
        bitField0_ |= 0x00000040;
        pDOP_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 PDOP = 7 [default = 0];</code>
       *
       * <pre>
       * 位置精确因子: 精确到小数点后2位
       * </pre>
       */
      public Builder clearPDOP() {
        bitField0_ = (bitField0_ & ~0x00000040);
        pDOP_ = 0;
        onChanged();
        return this;
      }

      private int hDOP_ ;
      /**
       * <code>optional int32 HDOP = 8 [default = 0];</code>
       *
       * <pre>
       * 水平精确因子: 精确到小数点后2位
       * </pre>
       */
      public boolean hasHDOP() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 HDOP = 8 [default = 0];</code>
       *
       * <pre>
       * 水平精确因子: 精确到小数点后2位
       * </pre>
       */
      public int getHDOP() {
        return hDOP_;
      }
      /**
       * <code>optional int32 HDOP = 8 [default = 0];</code>
       *
       * <pre>
       * 水平精确因子: 精确到小数点后2位
       * </pre>
       */
      public Builder setHDOP(int value) {
        bitField0_ |= 0x00000080;
        hDOP_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 HDOP = 8 [default = 0];</code>
       *
       * <pre>
       * 水平精确因子: 精确到小数点后2位
       * </pre>
       */
      public Builder clearHDOP() {
        bitField0_ = (bitField0_ & ~0x00000080);
        hDOP_ = 0;
        onChanged();
        return this;
      }

      private int vDOP_ ;
      /**
       * <code>optional int32 VDOP = 9 [default = 0];</code>
       *
       * <pre>
       * 垂直精确因子: 精确到小数点后2位
       * </pre>
       */
      public boolean hasVDOP() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 VDOP = 9 [default = 0];</code>
       *
       * <pre>
       * 垂直精确因子: 精确到小数点后2位
       * </pre>
       */
      public int getVDOP() {
        return vDOP_;
      }
      /**
       * <code>optional int32 VDOP = 9 [default = 0];</code>
       *
       * <pre>
       * 垂直精确因子: 精确到小数点后2位
       * </pre>
       */
      public Builder setVDOP(int value) {
        bitField0_ |= 0x00000100;
        vDOP_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 VDOP = 9 [default = 0];</code>
       *
       * <pre>
       * 垂直精确因子: 精确到小数点后2位
       * </pre>
       */
      public Builder clearVDOP() {
        bitField0_ = (bitField0_ & ~0x00000100);
        vDOP_ = 0;
        onChanged();
        return this;
      }

      private int satellitesUsed_ ;
      /**
       * <code>optional int32 SatellitesUsed = 10 [default = 0];</code>
       *
       * <pre>
       * 用于定位的卫星数
       * </pre>
       */
      public boolean hasSatellitesUsed() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 SatellitesUsed = 10 [default = 0];</code>
       *
       * <pre>
       * 用于定位的卫星数
       * </pre>
       */
      public int getSatellitesUsed() {
        return satellitesUsed_;
      }
      /**
       * <code>optional int32 SatellitesUsed = 10 [default = 0];</code>
       *
       * <pre>
       * 用于定位的卫星数
       * </pre>
       */
      public Builder setSatellitesUsed(int value) {
        bitField0_ |= 0x00000200;
        satellitesUsed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 SatellitesUsed = 10 [default = 0];</code>
       *
       * <pre>
       * 用于定位的卫星数
       * </pre>
       */
      public Builder clearSatellitesUsed() {
        bitField0_ = (bitField0_ & ~0x00000200);
        satellitesUsed_ = 0;
        onChanged();
        return this;
      }

      private int satellitesInView_ ;
      /**
       * <code>optional int32 SatellitesInView = 11 [default = 0];</code>
       *
       * <pre>
       * 发现的卫星数
       * </pre>
       */
      public boolean hasSatellitesInView() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 SatellitesInView = 11 [default = 0];</code>
       *
       * <pre>
       * 发现的卫星数
       * </pre>
       */
      public int getSatellitesInView() {
        return satellitesInView_;
      }
      /**
       * <code>optional int32 SatellitesInView = 11 [default = 0];</code>
       *
       * <pre>
       * 发现的卫星数
       * </pre>
       */
      public Builder setSatellitesInView(int value) {
        bitField0_ |= 0x00000400;
        satellitesInView_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 SatellitesInView = 11 [default = 0];</code>
       *
       * <pre>
       * 发现的卫星数
       * </pre>
       */
      public Builder clearSatellitesInView() {
        bitField0_ = (bitField0_ & ~0x00000400);
        satellitesInView_ = 0;
        onChanged();
        return this;
      }

      private int speed_ ;
      /**
       * <code>optional int32 Speed = 12 [default = 0];</code>
       *
       * <pre>
       * 速度: 米/秒, 精确到小数点后1位
       * </pre>
       */
      public boolean hasSpeed() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 Speed = 12 [default = 0];</code>
       *
       * <pre>
       * 速度: 米/秒, 精确到小数点后1位
       * </pre>
       */
      public int getSpeed() {
        return speed_;
      }
      /**
       * <code>optional int32 Speed = 12 [default = 0];</code>
       *
       * <pre>
       * 速度: 米/秒, 精确到小数点后1位
       * </pre>
       */
      public Builder setSpeed(int value) {
        bitField0_ |= 0x00000800;
        speed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Speed = 12 [default = 0];</code>
       *
       * <pre>
       * 速度: 米/秒, 精确到小数点后1位
       * </pre>
       */
      public Builder clearSpeed() {
        bitField0_ = (bitField0_ & ~0x00000800);
        speed_ = 0;
        onChanged();
        return this;
      }

      private int course_ ;
      /**
       * <code>optional sint32 Course = 13 [default = 0];</code>
       *
       * <pre>
       * 航向: 度, 精确到小数点后1位
       * </pre>
       */
      public boolean hasCourse() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional sint32 Course = 13 [default = 0];</code>
       *
       * <pre>
       * 航向: 度, 精确到小数点后1位
       * </pre>
       */
      public int getCourse() {
        return course_;
      }
      /**
       * <code>optional sint32 Course = 13 [default = 0];</code>
       *
       * <pre>
       * 航向: 度, 精确到小数点后1位
       * </pre>
       */
      public Builder setCourse(int value) {
        bitField0_ |= 0x00001000;
        course_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 Course = 13 [default = 0];</code>
       *
       * <pre>
       * 航向: 度, 精确到小数点后1位
       * </pre>
       */
      public Builder clearCourse() {
        bitField0_ = (bitField0_ & ~0x00001000);
        course_ = 0;
        onChanged();
        return this;
      }

      private int hACC_ ;
      /**
       * <code>optional int32 HACC = 14 [default = 0];</code>
       *
       * <pre>
       * 水平定位精确: 米, 精确到小数点后1位
       * </pre>
       */
      public boolean hasHACC() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 HACC = 14 [default = 0];</code>
       *
       * <pre>
       * 水平定位精确: 米, 精确到小数点后1位
       * </pre>
       */
      public int getHACC() {
        return hACC_;
      }
      /**
       * <code>optional int32 HACC = 14 [default = 0];</code>
       *
       * <pre>
       * 水平定位精确: 米, 精确到小数点后1位
       * </pre>
       */
      public Builder setHACC(int value) {
        bitField0_ |= 0x00002000;
        hACC_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 HACC = 14 [default = 0];</code>
       *
       * <pre>
       * 水平定位精确: 米, 精确到小数点后1位
       * </pre>
       */
      public Builder clearHACC() {
        bitField0_ = (bitField0_ & ~0x00002000);
        hACC_ = 0;
        onChanged();
        return this;
      }

      private int vACC_ ;
      /**
       * <code>optional int32 VACC = 15 [default = 0];</code>
       *
       * <pre>
       * 垂直定位精确: 米, 精确到小数点后1位
       * </pre>
       */
      public boolean hasVACC() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 VACC = 15 [default = 0];</code>
       *
       * <pre>
       * 垂直定位精确: 米, 精确到小数点后1位
       * </pre>
       */
      public int getVACC() {
        return vACC_;
      }
      /**
       * <code>optional int32 VACC = 15 [default = 0];</code>
       *
       * <pre>
       * 垂直定位精确: 米, 精确到小数点后1位
       * </pre>
       */
      public Builder setVACC(int value) {
        bitField0_ |= 0x00004000;
        vACC_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 VACC = 15 [default = 0];</code>
       *
       * <pre>
       * 垂直定位精确: 米, 精确到小数点后1位
       * </pre>
       */
      public Builder clearVACC() {
        bitField0_ = (bitField0_ & ~0x00004000);
        vACC_ = 0;
        onChanged();
        return this;
      }

      private int fixTime_ ;
      /**
       * <code>optional int32 FixTime = 16 [default = 0];</code>
       *
       * <pre>
       * 定位耗时: 秒
       * </pre>
       */
      public boolean hasFixTime() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 FixTime = 16 [default = 0];</code>
       *
       * <pre>
       * 定位耗时: 秒
       * </pre>
       */
      public int getFixTime() {
        return fixTime_;
      }
      /**
       * <code>optional int32 FixTime = 16 [default = 0];</code>
       *
       * <pre>
       * 定位耗时: 秒
       * </pre>
       */
      public Builder setFixTime(int value) {
        bitField0_ |= 0x00008000;
        fixTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 FixTime = 16 [default = 0];</code>
       *
       * <pre>
       * 定位耗时: 秒
       * </pre>
       */
      public Builder clearFixTime() {
        bitField0_ = (bitField0_ & ~0x00008000);
        fixTime_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<protocol_v1.V1GPS.Satellite> satellites_ =
        java.util.Collections.emptyList();
      private void ensureSatellitesIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          satellites_ = new java.util.ArrayList<protocol_v1.V1GPS.Satellite>(satellites_);
          bitField0_ |= 0x00010000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protocol_v1.V1GPS.Satellite, protocol_v1.V1GPS.Satellite.Builder, protocol_v1.V1GPS.SatelliteOrBuilder> satellitesBuilder_;

      /**
       * <code>repeated .protocol_v1.Satellite Satellites = 17;</code>
       *
       * <pre>
       * 卫星信息
       * </pre>
       */
      public java.util.List<protocol_v1.V1GPS.Satellite> getSatellitesList() {
        if (satellitesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(satellites_);
        } else {
          return satellitesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protocol_v1.Satellite Satellites = 17;</code>
       *
       * <pre>
       * 卫星信息
       * </pre>
       */
      public int getSatellitesCount() {
        if (satellitesBuilder_ == null) {
          return satellites_.size();
        } else {
          return satellitesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protocol_v1.Satellite Satellites = 17;</code>
       *
       * <pre>
       * 卫星信息
       * </pre>
       */
      public protocol_v1.V1GPS.Satellite getSatellites(int index) {
        if (satellitesBuilder_ == null) {
          return satellites_.get(index);
        } else {
          return satellitesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protocol_v1.Satellite Satellites = 17;</code>
       *
       * <pre>
       * 卫星信息
       * </pre>
       */
      public Builder setSatellites(
          int index, protocol_v1.V1GPS.Satellite value) {
        if (satellitesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSatellitesIsMutable();
          satellites_.set(index, value);
          onChanged();
        } else {
          satellitesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.Satellite Satellites = 17;</code>
       *
       * <pre>
       * 卫星信息
       * </pre>
       */
      public Builder setSatellites(
          int index, protocol_v1.V1GPS.Satellite.Builder builderForValue) {
        if (satellitesBuilder_ == null) {
          ensureSatellitesIsMutable();
          satellites_.set(index, builderForValue.build());
          onChanged();
        } else {
          satellitesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.Satellite Satellites = 17;</code>
       *
       * <pre>
       * 卫星信息
       * </pre>
       */
      public Builder addSatellites(protocol_v1.V1GPS.Satellite value) {
        if (satellitesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSatellitesIsMutable();
          satellites_.add(value);
          onChanged();
        } else {
          satellitesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.Satellite Satellites = 17;</code>
       *
       * <pre>
       * 卫星信息
       * </pre>
       */
      public Builder addSatellites(
          int index, protocol_v1.V1GPS.Satellite value) {
        if (satellitesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSatellitesIsMutable();
          satellites_.add(index, value);
          onChanged();
        } else {
          satellitesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.Satellite Satellites = 17;</code>
       *
       * <pre>
       * 卫星信息
       * </pre>
       */
      public Builder addSatellites(
          protocol_v1.V1GPS.Satellite.Builder builderForValue) {
        if (satellitesBuilder_ == null) {
          ensureSatellitesIsMutable();
          satellites_.add(builderForValue.build());
          onChanged();
        } else {
          satellitesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.Satellite Satellites = 17;</code>
       *
       * <pre>
       * 卫星信息
       * </pre>
       */
      public Builder addSatellites(
          int index, protocol_v1.V1GPS.Satellite.Builder builderForValue) {
        if (satellitesBuilder_ == null) {
          ensureSatellitesIsMutable();
          satellites_.add(index, builderForValue.build());
          onChanged();
        } else {
          satellitesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.Satellite Satellites = 17;</code>
       *
       * <pre>
       * 卫星信息
       * </pre>
       */
      public Builder addAllSatellites(
          java.lang.Iterable<? extends protocol_v1.V1GPS.Satellite> values) {
        if (satellitesBuilder_ == null) {
          ensureSatellitesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, satellites_);
          onChanged();
        } else {
          satellitesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.Satellite Satellites = 17;</code>
       *
       * <pre>
       * 卫星信息
       * </pre>
       */
      public Builder clearSatellites() {
        if (satellitesBuilder_ == null) {
          satellites_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00010000);
          onChanged();
        } else {
          satellitesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.Satellite Satellites = 17;</code>
       *
       * <pre>
       * 卫星信息
       * </pre>
       */
      public Builder removeSatellites(int index) {
        if (satellitesBuilder_ == null) {
          ensureSatellitesIsMutable();
          satellites_.remove(index);
          onChanged();
        } else {
          satellitesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.Satellite Satellites = 17;</code>
       *
       * <pre>
       * 卫星信息
       * </pre>
       */
      public protocol_v1.V1GPS.Satellite.Builder getSatellitesBuilder(
          int index) {
        return getSatellitesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protocol_v1.Satellite Satellites = 17;</code>
       *
       * <pre>
       * 卫星信息
       * </pre>
       */
      public protocol_v1.V1GPS.SatelliteOrBuilder getSatellitesOrBuilder(
          int index) {
        if (satellitesBuilder_ == null) {
          return satellites_.get(index);  } else {
          return satellitesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protocol_v1.Satellite Satellites = 17;</code>
       *
       * <pre>
       * 卫星信息
       * </pre>
       */
      public java.util.List<? extends protocol_v1.V1GPS.SatelliteOrBuilder> 
           getSatellitesOrBuilderList() {
        if (satellitesBuilder_ != null) {
          return satellitesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(satellites_);
        }
      }
      /**
       * <code>repeated .protocol_v1.Satellite Satellites = 17;</code>
       *
       * <pre>
       * 卫星信息
       * </pre>
       */
      public protocol_v1.V1GPS.Satellite.Builder addSatellitesBuilder() {
        return getSatellitesFieldBuilder().addBuilder(
            protocol_v1.V1GPS.Satellite.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol_v1.Satellite Satellites = 17;</code>
       *
       * <pre>
       * 卫星信息
       * </pre>
       */
      public protocol_v1.V1GPS.Satellite.Builder addSatellitesBuilder(
          int index) {
        return getSatellitesFieldBuilder().addBuilder(
            index, protocol_v1.V1GPS.Satellite.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol_v1.Satellite Satellites = 17;</code>
       *
       * <pre>
       * 卫星信息
       * </pre>
       */
      public java.util.List<protocol_v1.V1GPS.Satellite.Builder> 
           getSatellitesBuilderList() {
        return getSatellitesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protocol_v1.V1GPS.Satellite, protocol_v1.V1GPS.Satellite.Builder, protocol_v1.V1GPS.SatelliteOrBuilder> 
          getSatellitesFieldBuilder() {
        if (satellitesBuilder_ == null) {
          satellitesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protocol_v1.V1GPS.Satellite, protocol_v1.V1GPS.Satellite.Builder, protocol_v1.V1GPS.SatelliteOrBuilder>(
                  satellites_,
                  ((bitField0_ & 0x00010000) == 0x00010000),
                  getParentForChildren(),
                  isClean());
          satellites_ = null;
        }
        return satellitesBuilder_;
      }

      private int sampleType_ ;
      /**
       * <code>optional int32 SampleType = 20 [default = 0];</code>
       *
       * <pre>
       * 采集类型(按位标记): 0000/0001:普通采样   0010:电压BOOST    0100:速度BOOST
       * </pre>
       */
      public boolean hasSampleType() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 SampleType = 20 [default = 0];</code>
       *
       * <pre>
       * 采集类型(按位标记): 0000/0001:普通采样   0010:电压BOOST    0100:速度BOOST
       * </pre>
       */
      public int getSampleType() {
        return sampleType_;
      }
      /**
       * <code>optional int32 SampleType = 20 [default = 0];</code>
       *
       * <pre>
       * 采集类型(按位标记): 0000/0001:普通采样   0010:电压BOOST    0100:速度BOOST
       * </pre>
       */
      public Builder setSampleType(int value) {
        bitField0_ |= 0x00020000;
        sampleType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 SampleType = 20 [default = 0];</code>
       *
       * <pre>
       * 采集类型(按位标记): 0000/0001:普通采样   0010:电压BOOST    0100:速度BOOST
       * </pre>
       */
      public Builder clearSampleType() {
        bitField0_ = (bitField0_ & ~0x00020000);
        sampleType_ = 0;
        onChanged();
        return this;
      }

      private int geoidAltitude_ ;
      /**
       * <code>optional sint32 GeoidAltitude = 21 [default = 0];</code>
       *
       * <pre>
       * 地平高度: 米, 精确到小数点后2位
       * </pre>
       */
      public boolean hasGeoidAltitude() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional sint32 GeoidAltitude = 21 [default = 0];</code>
       *
       * <pre>
       * 地平高度: 米, 精确到小数点后2位
       * </pre>
       */
      public int getGeoidAltitude() {
        return geoidAltitude_;
      }
      /**
       * <code>optional sint32 GeoidAltitude = 21 [default = 0];</code>
       *
       * <pre>
       * 地平高度: 米, 精确到小数点后2位
       * </pre>
       */
      public Builder setGeoidAltitude(int value) {
        bitField0_ |= 0x00040000;
        geoidAltitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 GeoidAltitude = 21 [default = 0];</code>
       *
       * <pre>
       * 地平高度: 米, 精确到小数点后2位
       * </pre>
       */
      public Builder clearGeoidAltitude() {
        bitField0_ = (bitField0_ & ~0x00040000);
        geoidAltitude_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol_v1.GPS)
    }

    // @@protoc_insertion_point(class_scope:protocol_v1.GPS)
    private static final protocol_v1.V1GPS.GPS DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol_v1.V1GPS.GPS();
    }

    public static protocol_v1.V1GPS.GPS getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<GPS>
        PARSER = new com.google.protobuf.AbstractParser<GPS>() {
      public GPS parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new GPS(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<GPS> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GPS> getParserForType() {
      return PARSER;
    }

    public protocol_v1.V1GPS.GPS getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BeaconNodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol_v1.BeaconNode)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string UUID = 1;</code>
     *
     * <pre>
     * 信标的UUID
     * </pre>
     */
    boolean hasUUID();
    /**
     * <code>required string UUID = 1;</code>
     *
     * <pre>
     * 信标的UUID
     * </pre>
     */
    java.lang.String getUUID();
    /**
     * <code>required string UUID = 1;</code>
     *
     * <pre>
     * 信标的UUID
     * </pre>
     */
    com.google.protobuf.ByteString
        getUUIDBytes();

    /**
     * <code>optional sint32 BleRSSI = 2 [default = -999];</code>
     *
     * <pre>
     * 信标的信号强度
     * </pre>
     */
    boolean hasBleRSSI();
    /**
     * <code>optional sint32 BleRSSI = 2 [default = -999];</code>
     *
     * <pre>
     * 信标的信号强度
     * </pre>
     */
    int getBleRSSI();
  }
  /**
   * Protobuf type {@code protocol_v1.BeaconNode}
   */
  public  static final class BeaconNode extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protocol_v1.BeaconNode)
      BeaconNodeOrBuilder {
    // Use BeaconNode.newBuilder() to construct.
    private BeaconNode(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private BeaconNode() {
      uUID_ = "";
      bleRSSI_ = -999;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BeaconNode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              uUID_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              bleRSSI_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol_v1.V1GPS.internal_static_protocol_v1_BeaconNode_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol_v1.V1GPS.internal_static_protocol_v1_BeaconNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol_v1.V1GPS.BeaconNode.class, protocol_v1.V1GPS.BeaconNode.Builder.class);
    }

    private int bitField0_;
    public static final int UUID_FIELD_NUMBER = 1;
    private volatile java.lang.Object uUID_;
    /**
     * <code>required string UUID = 1;</code>
     *
     * <pre>
     * 信标的UUID
     * </pre>
     */
    public boolean hasUUID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string UUID = 1;</code>
     *
     * <pre>
     * 信标的UUID
     * </pre>
     */
    public java.lang.String getUUID() {
      java.lang.Object ref = uUID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uUID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string UUID = 1;</code>
     *
     * <pre>
     * 信标的UUID
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUUIDBytes() {
      java.lang.Object ref = uUID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uUID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BLERSSI_FIELD_NUMBER = 2;
    private int bleRSSI_;
    /**
     * <code>optional sint32 BleRSSI = 2 [default = -999];</code>
     *
     * <pre>
     * 信标的信号强度
     * </pre>
     */
    public boolean hasBleRSSI() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional sint32 BleRSSI = 2 [default = -999];</code>
     *
     * <pre>
     * 信标的信号强度
     * </pre>
     */
    public int getBleRSSI() {
      return bleRSSI_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasUUID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, uUID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, bleRSSI_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, uUID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, bleRSSI_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static protocol_v1.V1GPS.BeaconNode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1GPS.BeaconNode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1GPS.BeaconNode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1GPS.BeaconNode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1GPS.BeaconNode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1GPS.BeaconNode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1GPS.BeaconNode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protocol_v1.V1GPS.BeaconNode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1GPS.BeaconNode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1GPS.BeaconNode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol_v1.V1GPS.BeaconNode prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol_v1.BeaconNode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol_v1.BeaconNode)
        protocol_v1.V1GPS.BeaconNodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol_v1.V1GPS.internal_static_protocol_v1_BeaconNode_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol_v1.V1GPS.internal_static_protocol_v1_BeaconNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol_v1.V1GPS.BeaconNode.class, protocol_v1.V1GPS.BeaconNode.Builder.class);
      }

      // Construct using protocol_v1.V1GPS.BeaconNode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        uUID_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        bleRSSI_ = -999;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol_v1.V1GPS.internal_static_protocol_v1_BeaconNode_descriptor;
      }

      public protocol_v1.V1GPS.BeaconNode getDefaultInstanceForType() {
        return protocol_v1.V1GPS.BeaconNode.getDefaultInstance();
      }

      public protocol_v1.V1GPS.BeaconNode build() {
        protocol_v1.V1GPS.BeaconNode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol_v1.V1GPS.BeaconNode buildPartial() {
        protocol_v1.V1GPS.BeaconNode result = new protocol_v1.V1GPS.BeaconNode(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uUID_ = uUID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bleRSSI_ = bleRSSI_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol_v1.V1GPS.BeaconNode) {
          return mergeFrom((protocol_v1.V1GPS.BeaconNode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol_v1.V1GPS.BeaconNode other) {
        if (other == protocol_v1.V1GPS.BeaconNode.getDefaultInstance()) return this;
        if (other.hasUUID()) {
          bitField0_ |= 0x00000001;
          uUID_ = other.uUID_;
          onChanged();
        }
        if (other.hasBleRSSI()) {
          setBleRSSI(other.getBleRSSI());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUUID()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol_v1.V1GPS.BeaconNode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol_v1.V1GPS.BeaconNode) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object uUID_ = "";
      /**
       * <code>required string UUID = 1;</code>
       *
       * <pre>
       * 信标的UUID
       * </pre>
       */
      public boolean hasUUID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string UUID = 1;</code>
       *
       * <pre>
       * 信标的UUID
       * </pre>
       */
      public java.lang.String getUUID() {
        java.lang.Object ref = uUID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            uUID_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string UUID = 1;</code>
       *
       * <pre>
       * 信标的UUID
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUUIDBytes() {
        java.lang.Object ref = uUID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uUID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string UUID = 1;</code>
       *
       * <pre>
       * 信标的UUID
       * </pre>
       */
      public Builder setUUID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        uUID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string UUID = 1;</code>
       *
       * <pre>
       * 信标的UUID
       * </pre>
       */
      public Builder clearUUID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uUID_ = getDefaultInstance().getUUID();
        onChanged();
        return this;
      }
      /**
       * <code>required string UUID = 1;</code>
       *
       * <pre>
       * 信标的UUID
       * </pre>
       */
      public Builder setUUIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        uUID_ = value;
        onChanged();
        return this;
      }

      private int bleRSSI_ = -999;
      /**
       * <code>optional sint32 BleRSSI = 2 [default = -999];</code>
       *
       * <pre>
       * 信标的信号强度
       * </pre>
       */
      public boolean hasBleRSSI() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional sint32 BleRSSI = 2 [default = -999];</code>
       *
       * <pre>
       * 信标的信号强度
       * </pre>
       */
      public int getBleRSSI() {
        return bleRSSI_;
      }
      /**
       * <code>optional sint32 BleRSSI = 2 [default = -999];</code>
       *
       * <pre>
       * 信标的信号强度
       * </pre>
       */
      public Builder setBleRSSI(int value) {
        bitField0_ |= 0x00000002;
        bleRSSI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 BleRSSI = 2 [default = -999];</code>
       *
       * <pre>
       * 信标的信号强度
       * </pre>
       */
      public Builder clearBleRSSI() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bleRSSI_ = -999;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol_v1.BeaconNode)
    }

    // @@protoc_insertion_point(class_scope:protocol_v1.BeaconNode)
    private static final protocol_v1.V1GPS.BeaconNode DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol_v1.V1GPS.BeaconNode();
    }

    public static protocol_v1.V1GPS.BeaconNode getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<BeaconNode>
        PARSER = new com.google.protobuf.AbstractParser<BeaconNode>() {
      public BeaconNode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new BeaconNode(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<BeaconNode> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BeaconNode> getParserForType() {
      return PARSER;
    }

    public protocol_v1.V1GPS.BeaconNode getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BeaconOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol_v1.Beacon)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 Timestamp = 1;</code>
     *
     * <pre>
     * 采集时间
     * </pre>
     */
    boolean hasTimestamp();
    /**
     * <code>required uint32 Timestamp = 1;</code>
     *
     * <pre>
     * 采集时间
     * </pre>
     */
    int getTimestamp();

    /**
     * <code>repeated .protocol_v1.BeaconNode BeaconNodes = 2;</code>
     *
     * <pre>
     * 周围的信标
     * </pre>
     */
    java.util.List<protocol_v1.V1GPS.BeaconNode> 
        getBeaconNodesList();
    /**
     * <code>repeated .protocol_v1.BeaconNode BeaconNodes = 2;</code>
     *
     * <pre>
     * 周围的信标
     * </pre>
     */
    protocol_v1.V1GPS.BeaconNode getBeaconNodes(int index);
    /**
     * <code>repeated .protocol_v1.BeaconNode BeaconNodes = 2;</code>
     *
     * <pre>
     * 周围的信标
     * </pre>
     */
    int getBeaconNodesCount();
    /**
     * <code>repeated .protocol_v1.BeaconNode BeaconNodes = 2;</code>
     *
     * <pre>
     * 周围的信标
     * </pre>
     */
    java.util.List<? extends protocol_v1.V1GPS.BeaconNodeOrBuilder> 
        getBeaconNodesOrBuilderList();
    /**
     * <code>repeated .protocol_v1.BeaconNode BeaconNodes = 2;</code>
     *
     * <pre>
     * 周围的信标
     * </pre>
     */
    protocol_v1.V1GPS.BeaconNodeOrBuilder getBeaconNodesOrBuilder(
        int index);

    /**
     * <code>optional int32 SampleType = 10 [default = 0];</code>
     *
     * <pre>
     * 采集类型(按位标记): 0000/0001:普通采样   0010:电压BOOST    0100:速度BOOST
     * </pre>
     */
    boolean hasSampleType();
    /**
     * <code>optional int32 SampleType = 10 [default = 0];</code>
     *
     * <pre>
     * 采集类型(按位标记): 0000/0001:普通采样   0010:电压BOOST    0100:速度BOOST
     * </pre>
     */
    int getSampleType();
  }
  /**
   * Protobuf type {@code protocol_v1.Beacon}
   */
  public  static final class Beacon extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protocol_v1.Beacon)
      BeaconOrBuilder {
    // Use Beacon.newBuilder() to construct.
    private Beacon(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Beacon() {
      timestamp_ = 0;
      beaconNodes_ = java.util.Collections.emptyList();
      sampleType_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Beacon(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              timestamp_ = input.readUInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                beaconNodes_ = new java.util.ArrayList<protocol_v1.V1GPS.BeaconNode>();
                mutable_bitField0_ |= 0x00000002;
              }
              beaconNodes_.add(input.readMessage(protocol_v1.V1GPS.BeaconNode.parser(), extensionRegistry));
              break;
            }
            case 80: {
              bitField0_ |= 0x00000002;
              sampleType_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          beaconNodes_ = java.util.Collections.unmodifiableList(beaconNodes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol_v1.V1GPS.internal_static_protocol_v1_Beacon_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol_v1.V1GPS.internal_static_protocol_v1_Beacon_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol_v1.V1GPS.Beacon.class, protocol_v1.V1GPS.Beacon.Builder.class);
    }

    private int bitField0_;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private int timestamp_;
    /**
     * <code>required uint32 Timestamp = 1;</code>
     *
     * <pre>
     * 采集时间
     * </pre>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 Timestamp = 1;</code>
     *
     * <pre>
     * 采集时间
     * </pre>
     */
    public int getTimestamp() {
      return timestamp_;
    }

    public static final int BEACONNODES_FIELD_NUMBER = 2;
    private java.util.List<protocol_v1.V1GPS.BeaconNode> beaconNodes_;
    /**
     * <code>repeated .protocol_v1.BeaconNode BeaconNodes = 2;</code>
     *
     * <pre>
     * 周围的信标
     * </pre>
     */
    public java.util.List<protocol_v1.V1GPS.BeaconNode> getBeaconNodesList() {
      return beaconNodes_;
    }
    /**
     * <code>repeated .protocol_v1.BeaconNode BeaconNodes = 2;</code>
     *
     * <pre>
     * 周围的信标
     * </pre>
     */
    public java.util.List<? extends protocol_v1.V1GPS.BeaconNodeOrBuilder> 
        getBeaconNodesOrBuilderList() {
      return beaconNodes_;
    }
    /**
     * <code>repeated .protocol_v1.BeaconNode BeaconNodes = 2;</code>
     *
     * <pre>
     * 周围的信标
     * </pre>
     */
    public int getBeaconNodesCount() {
      return beaconNodes_.size();
    }
    /**
     * <code>repeated .protocol_v1.BeaconNode BeaconNodes = 2;</code>
     *
     * <pre>
     * 周围的信标
     * </pre>
     */
    public protocol_v1.V1GPS.BeaconNode getBeaconNodes(int index) {
      return beaconNodes_.get(index);
    }
    /**
     * <code>repeated .protocol_v1.BeaconNode BeaconNodes = 2;</code>
     *
     * <pre>
     * 周围的信标
     * </pre>
     */
    public protocol_v1.V1GPS.BeaconNodeOrBuilder getBeaconNodesOrBuilder(
        int index) {
      return beaconNodes_.get(index);
    }

    public static final int SAMPLETYPE_FIELD_NUMBER = 10;
    private int sampleType_;
    /**
     * <code>optional int32 SampleType = 10 [default = 0];</code>
     *
     * <pre>
     * 采集类型(按位标记): 0000/0001:普通采样   0010:电压BOOST    0100:速度BOOST
     * </pre>
     */
    public boolean hasSampleType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 SampleType = 10 [default = 0];</code>
     *
     * <pre>
     * 采集类型(按位标记): 0000/0001:普通采样   0010:电压BOOST    0100:速度BOOST
     * </pre>
     */
    public int getSampleType() {
      return sampleType_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getBeaconNodesCount(); i++) {
        if (!getBeaconNodes(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, timestamp_);
      }
      for (int i = 0; i < beaconNodes_.size(); i++) {
        output.writeMessage(2, beaconNodes_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(10, sampleType_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, timestamp_);
      }
      for (int i = 0; i < beaconNodes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, beaconNodes_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, sampleType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static protocol_v1.V1GPS.Beacon parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1GPS.Beacon parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1GPS.Beacon parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol_v1.V1GPS.Beacon parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol_v1.V1GPS.Beacon parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1GPS.Beacon parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1GPS.Beacon parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protocol_v1.V1GPS.Beacon parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protocol_v1.V1GPS.Beacon parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protocol_v1.V1GPS.Beacon parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol_v1.V1GPS.Beacon prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol_v1.Beacon}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol_v1.Beacon)
        protocol_v1.V1GPS.BeaconOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol_v1.V1GPS.internal_static_protocol_v1_Beacon_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol_v1.V1GPS.internal_static_protocol_v1_Beacon_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol_v1.V1GPS.Beacon.class, protocol_v1.V1GPS.Beacon.Builder.class);
      }

      // Construct using protocol_v1.V1GPS.Beacon.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBeaconNodesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        timestamp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (beaconNodesBuilder_ == null) {
          beaconNodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          beaconNodesBuilder_.clear();
        }
        sampleType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol_v1.V1GPS.internal_static_protocol_v1_Beacon_descriptor;
      }

      public protocol_v1.V1GPS.Beacon getDefaultInstanceForType() {
        return protocol_v1.V1GPS.Beacon.getDefaultInstance();
      }

      public protocol_v1.V1GPS.Beacon build() {
        protocol_v1.V1GPS.Beacon result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol_v1.V1GPS.Beacon buildPartial() {
        protocol_v1.V1GPS.Beacon result = new protocol_v1.V1GPS.Beacon(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timestamp_ = timestamp_;
        if (beaconNodesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            beaconNodes_ = java.util.Collections.unmodifiableList(beaconNodes_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.beaconNodes_ = beaconNodes_;
        } else {
          result.beaconNodes_ = beaconNodesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sampleType_ = sampleType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol_v1.V1GPS.Beacon) {
          return mergeFrom((protocol_v1.V1GPS.Beacon)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol_v1.V1GPS.Beacon other) {
        if (other == protocol_v1.V1GPS.Beacon.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (beaconNodesBuilder_ == null) {
          if (!other.beaconNodes_.isEmpty()) {
            if (beaconNodes_.isEmpty()) {
              beaconNodes_ = other.beaconNodes_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureBeaconNodesIsMutable();
              beaconNodes_.addAll(other.beaconNodes_);
            }
            onChanged();
          }
        } else {
          if (!other.beaconNodes_.isEmpty()) {
            if (beaconNodesBuilder_.isEmpty()) {
              beaconNodesBuilder_.dispose();
              beaconNodesBuilder_ = null;
              beaconNodes_ = other.beaconNodes_;
              bitField0_ = (bitField0_ & ~0x00000002);
              beaconNodesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBeaconNodesFieldBuilder() : null;
            } else {
              beaconNodesBuilder_.addAllMessages(other.beaconNodes_);
            }
          }
        }
        if (other.hasSampleType()) {
          setSampleType(other.getSampleType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTimestamp()) {
          return false;
        }
        for (int i = 0; i < getBeaconNodesCount(); i++) {
          if (!getBeaconNodes(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol_v1.V1GPS.Beacon parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol_v1.V1GPS.Beacon) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int timestamp_ ;
      /**
       * <code>required uint32 Timestamp = 1;</code>
       *
       * <pre>
       * 采集时间
       * </pre>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 Timestamp = 1;</code>
       *
       * <pre>
       * 采集时间
       * </pre>
       */
      public int getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>required uint32 Timestamp = 1;</code>
       *
       * <pre>
       * 采集时间
       * </pre>
       */
      public Builder setTimestamp(int value) {
        bitField0_ |= 0x00000001;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 Timestamp = 1;</code>
       *
       * <pre>
       * 采集时间
       * </pre>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<protocol_v1.V1GPS.BeaconNode> beaconNodes_ =
        java.util.Collections.emptyList();
      private void ensureBeaconNodesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          beaconNodes_ = new java.util.ArrayList<protocol_v1.V1GPS.BeaconNode>(beaconNodes_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protocol_v1.V1GPS.BeaconNode, protocol_v1.V1GPS.BeaconNode.Builder, protocol_v1.V1GPS.BeaconNodeOrBuilder> beaconNodesBuilder_;

      /**
       * <code>repeated .protocol_v1.BeaconNode BeaconNodes = 2;</code>
       *
       * <pre>
       * 周围的信标
       * </pre>
       */
      public java.util.List<protocol_v1.V1GPS.BeaconNode> getBeaconNodesList() {
        if (beaconNodesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(beaconNodes_);
        } else {
          return beaconNodesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protocol_v1.BeaconNode BeaconNodes = 2;</code>
       *
       * <pre>
       * 周围的信标
       * </pre>
       */
      public int getBeaconNodesCount() {
        if (beaconNodesBuilder_ == null) {
          return beaconNodes_.size();
        } else {
          return beaconNodesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protocol_v1.BeaconNode BeaconNodes = 2;</code>
       *
       * <pre>
       * 周围的信标
       * </pre>
       */
      public protocol_v1.V1GPS.BeaconNode getBeaconNodes(int index) {
        if (beaconNodesBuilder_ == null) {
          return beaconNodes_.get(index);
        } else {
          return beaconNodesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protocol_v1.BeaconNode BeaconNodes = 2;</code>
       *
       * <pre>
       * 周围的信标
       * </pre>
       */
      public Builder setBeaconNodes(
          int index, protocol_v1.V1GPS.BeaconNode value) {
        if (beaconNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBeaconNodesIsMutable();
          beaconNodes_.set(index, value);
          onChanged();
        } else {
          beaconNodesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.BeaconNode BeaconNodes = 2;</code>
       *
       * <pre>
       * 周围的信标
       * </pre>
       */
      public Builder setBeaconNodes(
          int index, protocol_v1.V1GPS.BeaconNode.Builder builderForValue) {
        if (beaconNodesBuilder_ == null) {
          ensureBeaconNodesIsMutable();
          beaconNodes_.set(index, builderForValue.build());
          onChanged();
        } else {
          beaconNodesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.BeaconNode BeaconNodes = 2;</code>
       *
       * <pre>
       * 周围的信标
       * </pre>
       */
      public Builder addBeaconNodes(protocol_v1.V1GPS.BeaconNode value) {
        if (beaconNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBeaconNodesIsMutable();
          beaconNodes_.add(value);
          onChanged();
        } else {
          beaconNodesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.BeaconNode BeaconNodes = 2;</code>
       *
       * <pre>
       * 周围的信标
       * </pre>
       */
      public Builder addBeaconNodes(
          int index, protocol_v1.V1GPS.BeaconNode value) {
        if (beaconNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBeaconNodesIsMutable();
          beaconNodes_.add(index, value);
          onChanged();
        } else {
          beaconNodesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.BeaconNode BeaconNodes = 2;</code>
       *
       * <pre>
       * 周围的信标
       * </pre>
       */
      public Builder addBeaconNodes(
          protocol_v1.V1GPS.BeaconNode.Builder builderForValue) {
        if (beaconNodesBuilder_ == null) {
          ensureBeaconNodesIsMutable();
          beaconNodes_.add(builderForValue.build());
          onChanged();
        } else {
          beaconNodesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.BeaconNode BeaconNodes = 2;</code>
       *
       * <pre>
       * 周围的信标
       * </pre>
       */
      public Builder addBeaconNodes(
          int index, protocol_v1.V1GPS.BeaconNode.Builder builderForValue) {
        if (beaconNodesBuilder_ == null) {
          ensureBeaconNodesIsMutable();
          beaconNodes_.add(index, builderForValue.build());
          onChanged();
        } else {
          beaconNodesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.BeaconNode BeaconNodes = 2;</code>
       *
       * <pre>
       * 周围的信标
       * </pre>
       */
      public Builder addAllBeaconNodes(
          java.lang.Iterable<? extends protocol_v1.V1GPS.BeaconNode> values) {
        if (beaconNodesBuilder_ == null) {
          ensureBeaconNodesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, beaconNodes_);
          onChanged();
        } else {
          beaconNodesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.BeaconNode BeaconNodes = 2;</code>
       *
       * <pre>
       * 周围的信标
       * </pre>
       */
      public Builder clearBeaconNodes() {
        if (beaconNodesBuilder_ == null) {
          beaconNodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          beaconNodesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.BeaconNode BeaconNodes = 2;</code>
       *
       * <pre>
       * 周围的信标
       * </pre>
       */
      public Builder removeBeaconNodes(int index) {
        if (beaconNodesBuilder_ == null) {
          ensureBeaconNodesIsMutable();
          beaconNodes_.remove(index);
          onChanged();
        } else {
          beaconNodesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protocol_v1.BeaconNode BeaconNodes = 2;</code>
       *
       * <pre>
       * 周围的信标
       * </pre>
       */
      public protocol_v1.V1GPS.BeaconNode.Builder getBeaconNodesBuilder(
          int index) {
        return getBeaconNodesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protocol_v1.BeaconNode BeaconNodes = 2;</code>
       *
       * <pre>
       * 周围的信标
       * </pre>
       */
      public protocol_v1.V1GPS.BeaconNodeOrBuilder getBeaconNodesOrBuilder(
          int index) {
        if (beaconNodesBuilder_ == null) {
          return beaconNodes_.get(index);  } else {
          return beaconNodesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protocol_v1.BeaconNode BeaconNodes = 2;</code>
       *
       * <pre>
       * 周围的信标
       * </pre>
       */
      public java.util.List<? extends protocol_v1.V1GPS.BeaconNodeOrBuilder> 
           getBeaconNodesOrBuilderList() {
        if (beaconNodesBuilder_ != null) {
          return beaconNodesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(beaconNodes_);
        }
      }
      /**
       * <code>repeated .protocol_v1.BeaconNode BeaconNodes = 2;</code>
       *
       * <pre>
       * 周围的信标
       * </pre>
       */
      public protocol_v1.V1GPS.BeaconNode.Builder addBeaconNodesBuilder() {
        return getBeaconNodesFieldBuilder().addBuilder(
            protocol_v1.V1GPS.BeaconNode.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol_v1.BeaconNode BeaconNodes = 2;</code>
       *
       * <pre>
       * 周围的信标
       * </pre>
       */
      public protocol_v1.V1GPS.BeaconNode.Builder addBeaconNodesBuilder(
          int index) {
        return getBeaconNodesFieldBuilder().addBuilder(
            index, protocol_v1.V1GPS.BeaconNode.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol_v1.BeaconNode BeaconNodes = 2;</code>
       *
       * <pre>
       * 周围的信标
       * </pre>
       */
      public java.util.List<protocol_v1.V1GPS.BeaconNode.Builder> 
           getBeaconNodesBuilderList() {
        return getBeaconNodesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protocol_v1.V1GPS.BeaconNode, protocol_v1.V1GPS.BeaconNode.Builder, protocol_v1.V1GPS.BeaconNodeOrBuilder> 
          getBeaconNodesFieldBuilder() {
        if (beaconNodesBuilder_ == null) {
          beaconNodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protocol_v1.V1GPS.BeaconNode, protocol_v1.V1GPS.BeaconNode.Builder, protocol_v1.V1GPS.BeaconNodeOrBuilder>(
                  beaconNodes_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          beaconNodes_ = null;
        }
        return beaconNodesBuilder_;
      }

      private int sampleType_ ;
      /**
       * <code>optional int32 SampleType = 10 [default = 0];</code>
       *
       * <pre>
       * 采集类型(按位标记): 0000/0001:普通采样   0010:电压BOOST    0100:速度BOOST
       * </pre>
       */
      public boolean hasSampleType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 SampleType = 10 [default = 0];</code>
       *
       * <pre>
       * 采集类型(按位标记): 0000/0001:普通采样   0010:电压BOOST    0100:速度BOOST
       * </pre>
       */
      public int getSampleType() {
        return sampleType_;
      }
      /**
       * <code>optional int32 SampleType = 10 [default = 0];</code>
       *
       * <pre>
       * 采集类型(按位标记): 0000/0001:普通采样   0010:电压BOOST    0100:速度BOOST
       * </pre>
       */
      public Builder setSampleType(int value) {
        bitField0_ |= 0x00000004;
        sampleType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 SampleType = 10 [default = 0];</code>
       *
       * <pre>
       * 采集类型(按位标记): 0000/0001:普通采样   0010:电压BOOST    0100:速度BOOST
       * </pre>
       */
      public Builder clearSampleType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sampleType_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol_v1.Beacon)
    }

    // @@protoc_insertion_point(class_scope:protocol_v1.Beacon)
    private static final protocol_v1.V1GPS.Beacon DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol_v1.V1GPS.Beacon();
    }

    public static protocol_v1.V1GPS.Beacon getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Beacon>
        PARSER = new com.google.protobuf.AbstractParser<Beacon>() {
      public Beacon parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Beacon(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Beacon> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Beacon> getParserForType() {
      return PARSER;
    }

    public protocol_v1.V1GPS.Beacon getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_v1_GPSReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_v1_GPSReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_v1_Satellite_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_v1_Satellite_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_v1_GPS_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_v1_GPS_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_v1_BeaconNode_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_v1_BeaconNode_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_v1_Beacon_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_v1_Beacon_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014v1.GPS.proto\022\013protocol_v1\032\024v1.Identity" +
      "Msg.proto\"\211\001\n\006GPSReq\022&\n\004Iden\030\001 \002(\0132\030.pro" +
      "tocol_v1.IdentityMsg\022!\n\007GPSInfo\030\002 \003(\0132\020." +
      "protocol_v1.GPS\022\'\n\nBeaconInfo\030\003 \003(\0132\023.pr" +
      "otocol_v1.Beacon\022\013\n\003SMS\030e \001(\005\"v\n\tSatelli" +
      "te\022\n\n\002Id\030\001 \002(\005\022\025\n\tElevation\030\002 \001(\021:\002-1\022\023\n" +
      "\007Azimuth\030\003 \001(\021:\002-1\022\017\n\003SNR\030\004 \001(\021:\002-1\022\017\n\004U" +
      "sed\030\005 \001(\005:\0010\022\017\n\004Type\030\006 \001(\005:\0010\"\265\003\n\003GPS\022\024\n" +
      "\tTimestamp\030\001 \001(\r:\0010\022\034\n\010Latitude\030\002 \001(\021:\n2" +
      "000000000\022\035\n\tLongitude\030\003 \001(\021:\n2000000000",
      "\022\023\n\010Altitude\030\004 \001(\021:\0010\022\022\n\007Quality\030\005 \001(\005:\001" +
      "0\022\017\n\004Mode\030\006 \001(\005:\0010\022\017\n\004PDOP\030\007 \001(\005:\0010\022\017\n\004H" +
      "DOP\030\010 \001(\005:\0010\022\017\n\004VDOP\030\t \001(\005:\0010\022\031\n\016Satelli" +
      "tesUsed\030\n \001(\005:\0010\022\033\n\020SatellitesInView\030\013 \001" +
      "(\005:\0010\022\020\n\005Speed\030\014 \001(\005:\0010\022\021\n\006Course\030\r \001(\021:" +
      "\0010\022\017\n\004HACC\030\016 \001(\005:\0010\022\017\n\004VACC\030\017 \001(\005:\0010\022\022\n\007" +
      "FixTime\030\020 \001(\005:\0010\022*\n\nSatellites\030\021 \003(\0132\026.p" +
      "rotocol_v1.Satellite\022\025\n\nSampleType\030\024 \001(\005" +
      ":\0010\022\030\n\rGeoidAltitude\030\025 \001(\021:\0010\"1\n\nBeaconN" +
      "ode\022\014\n\004UUID\030\001 \002(\t\022\025\n\007BleRSSI\030\002 \001(\021:\004-999",
      "\"`\n\006Beacon\022\021\n\tTimestamp\030\001 \002(\r\022,\n\013BeaconN" +
      "odes\030\002 \003(\0132\027.protocol_v1.BeaconNode\022\025\n\nS" +
      "ampleType\030\n \001(\005:\0010B\005\242\002\002V1"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protocol_v1.V1IdentityMsg.getDescriptor(),
        }, assigner);
    internal_static_protocol_v1_GPSReq_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_protocol_v1_GPSReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_v1_GPSReq_descriptor,
        new java.lang.String[] { "Iden", "GPSInfo", "BeaconInfo", "SMS", });
    internal_static_protocol_v1_Satellite_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_protocol_v1_Satellite_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_v1_Satellite_descriptor,
        new java.lang.String[] { "Id", "Elevation", "Azimuth", "SNR", "Used", "Type", });
    internal_static_protocol_v1_GPS_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_protocol_v1_GPS_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_v1_GPS_descriptor,
        new java.lang.String[] { "Timestamp", "Latitude", "Longitude", "Altitude", "Quality", "Mode", "PDOP", "HDOP", "VDOP", "SatellitesUsed", "SatellitesInView", "Speed", "Course", "HACC", "VACC", "FixTime", "Satellites", "SampleType", "GeoidAltitude", });
    internal_static_protocol_v1_BeaconNode_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_protocol_v1_BeaconNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_v1_BeaconNode_descriptor,
        new java.lang.String[] { "UUID", "BleRSSI", });
    internal_static_protocol_v1_Beacon_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_protocol_v1_Beacon_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_v1_Beacon_descriptor,
        new java.lang.String[] { "Timestamp", "BeaconNodes", "SampleType", });
    protocol_v1.V1IdentityMsg.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
