// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Register.proto

package protocol;

public final class Register {
  private Register() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface RegisterReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.RegisterReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .protocol.IdentityMsg Iden = 1;</code>
     */
    boolean hasIden();
    /**
     * <code>required .protocol.IdentityMsg Iden = 1;</code>
     */
    IdentityMsgOuterClass.IdentityMsg getIden();
    /**
     * <code>required .protocol.IdentityMsg Iden = 1;</code>
     */
    IdentityMsgOuterClass.IdentityMsgOrBuilder getIdenOrBuilder();

    /**
     * <code>optional string IMSI = 2 [default = ""];</code>
     */
    boolean hasIMSI();
    /**
     * <code>optional string IMSI = 2 [default = ""];</code>
     */
    String getIMSI();
    /**
     * <code>optional string IMSI = 2 [default = ""];</code>
     */
    com.google.protobuf.ByteString
        getIMSIBytes();

    /**
     * <code>optional string Mac = 3 [default = ""];</code>
     */
    boolean hasMac();
    /**
     * <code>optional string Mac = 3 [default = ""];</code>
     */
    String getMac();
    /**
     * <code>optional string Mac = 3 [default = ""];</code>
     */
    com.google.protobuf.ByteString
        getMacBytes();

    /**
     * <code>optional int32 DeviceType = 4 [default = 0];</code>
     */
    boolean hasDeviceType();
    /**
     * <code>optional int32 DeviceType = 4 [default = 0];</code>
     */
    int getDeviceType();

    /**
     * <code>optional int32 HardwareVersion = 5 [default = 0];</code>
     */
    boolean hasHardwareVersion();
    /**
     * <code>optional int32 HardwareVersion = 5 [default = 0];</code>
     */
    int getHardwareVersion();

    /**
     * <code>optional int32 FirmwareVersion = 6 [default = 0];</code>
     */
    boolean hasFirmwareVersion();
    /**
     * <code>optional int32 FirmwareVersion = 6 [default = 0];</code>
     */
    int getFirmwareVersion();

    /**
     * <pre>
     * 自检结果，出厂APP使用
     * </pre>
     *
     * <code>optional int32 Status = 7 [default = 0];</code>
     */
    boolean hasStatus();
    /**
     * <pre>
     * 自检结果，出厂APP使用
     * </pre>
     *
     * <code>optional int32 Status = 7 [default = 0];</code>
     */
    int getStatus();

    /**
     * <pre>
     * 电池电压，手机APP使用
     * </pre>
     *
     * <code>optional int32 Voltage = 8 [default = 0];</code>
     */
    boolean hasVoltage();
    /**
     * <pre>
     * 电池电压，手机APP使用
     * </pre>
     *
     * <code>optional int32 Voltage = 8 [default = 0];</code>
     */
    int getVoltage();

    /**
     * <pre>
     * 信号强度
     * </pre>
     *
     * <code>optional int32 SignalStrength = 9 [default = 0];</code>
     */
    boolean hasSignalStrength();
    /**
     * <pre>
     * 信号强度
     * </pre>
     *
     * <code>optional int32 SignalStrength = 9 [default = 0];</code>
     */
    int getSignalStrength();

    /**
     * <pre>
     * 误码率
     * </pre>
     *
     * <code>optional int32 BitErrorRate = 10 [default = 0];</code>
     */
    boolean hasBitErrorRate();
    /**
     * <pre>
     * 误码率
     * </pre>
     *
     * <code>optional int32 BitErrorRate = 10 [default = 0];</code>
     */
    int getBitErrorRate();

    /**
     * <pre>
     * 网络类型
     * </pre>
     *
     * <code>optional int32 RadioAccessTechnology = 11 [default = 0];</code>
     */
    boolean hasRadioAccessTechnology();
    /**
     * <pre>
     * 网络类型
     * </pre>
     *
     * <code>optional int32 RadioAccessTechnology = 11 [default = 0];</code>
     */
    int getRadioAccessTechnology();

    /**
     * <pre>
     * 运营商代码
     * </pre>
     *
     * <code>optional uint32 NetworkOperator = 12 [default = 0];</code>
     */
    boolean hasNetworkOperator();
    /**
     * <pre>
     * 运营商代码
     * </pre>
     *
     * <code>optional uint32 NetworkOperator = 12 [default = 0];</code>
     */
    int getNetworkOperator();

    /**
     * <code>optional string ICCID = 13 [default = ""];</code>
     */
    boolean hasICCID();
    /**
     * <code>optional string ICCID = 13 [default = ""];</code>
     */
    String getICCID();
    /**
     * <code>optional string ICCID = 13 [default = ""];</code>
     */
    com.google.protobuf.ByteString
        getICCIDBytes();

    /**
     * <code>optional string IMEI = 14 [default = ""];</code>
     */
    boolean hasIMEI();
    /**
     * <code>optional string IMEI = 14 [default = ""];</code>
     */
    String getIMEI();
    /**
     * <code>optional string IMEI = 14 [default = ""];</code>
     */
    com.google.protobuf.ByteString
        getIMEIBytes();

    /**
     * <pre>
     * 蜂窝模块固件版本
     * </pre>
     *
     * <code>optional string ModemFirmwareVersion = 15 [default = ""];</code>
     */
    boolean hasModemFirmwareVersion();
    /**
     * <pre>
     * 蜂窝模块固件版本
     * </pre>
     *
     * <code>optional string ModemFirmwareVersion = 15 [default = ""];</code>
     */
    String getModemFirmwareVersion();
    /**
     * <pre>
     * 蜂窝模块固件版本
     * </pre>
     *
     * <code>optional string ModemFirmwareVersion = 15 [default = ""];</code>
     */
    com.google.protobuf.ByteString
        getModemFirmwareVersionBytes();

    /**
     * <pre>
     * gps信号强度
     * </pre>
     *
     * <code>optional int32 GPSSignalStrength = 20 [default = 0];</code>
     */
    boolean hasGPSSignalStrength();
    /**
     * <pre>
     * gps信号强度
     * </pre>
     *
     * <code>optional int32 GPSSignalStrength = 20 [default = 0];</code>
     */
    int getGPSSignalStrength();
  }
  /**
   * Protobuf type {@code protocol.RegisterReq}
   */
  public  static final class RegisterReq extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protocol.RegisterReq)
      RegisterReqOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RegisterReq.newBuilder() to construct.
    private RegisterReq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RegisterReq() {
      iMSI_ = "";
      mac_ = "";
      iCCID_ = "";
      iMEI_ = "";
      modemFirmwareVersion_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RegisterReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              IdentityMsgOuterClass.IdentityMsg.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) != 0)) {
                subBuilder = iden_.toBuilder();
              }
              iden_ = input.readMessage(IdentityMsgOuterClass.IdentityMsg.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(iden_);
                iden_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              iMSI_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              mac_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              deviceType_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              hardwareVersion_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              firmwareVersion_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              status_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              voltage_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              signalStrength_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              bitErrorRate_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              radioAccessTechnology_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              networkOperator_ = input.readUInt32();
              break;
            }
            case 106: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00001000;
              iCCID_ = bs;
              break;
            }
            case 114: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00002000;
              iMEI_ = bs;
              break;
            }
            case 122: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00004000;
              modemFirmwareVersion_ = bs;
              break;
            }
            case 160: {
              bitField0_ |= 0x00008000;
              gPSSignalStrength_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Register.internal_static_protocol_RegisterReq_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Register.internal_static_protocol_RegisterReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RegisterReq.class, Builder.class);
    }

    private int bitField0_;
    public static final int IDEN_FIELD_NUMBER = 1;
    private IdentityMsgOuterClass.IdentityMsg iden_;
    /**
     * <code>required .protocol.IdentityMsg Iden = 1;</code>
     */
    public boolean hasIden() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required .protocol.IdentityMsg Iden = 1;</code>
     */
    public IdentityMsgOuterClass.IdentityMsg getIden() {
      return iden_ == null ? IdentityMsgOuterClass.IdentityMsg.getDefaultInstance() : iden_;
    }
    /**
     * <code>required .protocol.IdentityMsg Iden = 1;</code>
     */
    public IdentityMsgOuterClass.IdentityMsgOrBuilder getIdenOrBuilder() {
      return iden_ == null ? IdentityMsgOuterClass.IdentityMsg.getDefaultInstance() : iden_;
    }

    public static final int IMSI_FIELD_NUMBER = 2;
    private volatile Object iMSI_;
    /**
     * <code>optional string IMSI = 2 [default = ""];</code>
     */
    public boolean hasIMSI() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional string IMSI = 2 [default = ""];</code>
     */
    public String getIMSI() {
      Object ref = iMSI_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          iMSI_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string IMSI = 2 [default = ""];</code>
     */
    public com.google.protobuf.ByteString
        getIMSIBytes() {
      Object ref = iMSI_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        iMSI_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MAC_FIELD_NUMBER = 3;
    private volatile Object mac_;
    /**
     * <code>optional string Mac = 3 [default = ""];</code>
     */
    public boolean hasMac() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional string Mac = 3 [default = ""];</code>
     */
    public String getMac() {
      Object ref = mac_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mac_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string Mac = 3 [default = ""];</code>
     */
    public com.google.protobuf.ByteString
        getMacBytes() {
      Object ref = mac_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        mac_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEVICETYPE_FIELD_NUMBER = 4;
    private int deviceType_;
    /**
     * <code>optional int32 DeviceType = 4 [default = 0];</code>
     */
    public boolean hasDeviceType() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional int32 DeviceType = 4 [default = 0];</code>
     */
    public int getDeviceType() {
      return deviceType_;
    }

    public static final int HARDWAREVERSION_FIELD_NUMBER = 5;
    private int hardwareVersion_;
    /**
     * <code>optional int32 HardwareVersion = 5 [default = 0];</code>
     */
    public boolean hasHardwareVersion() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional int32 HardwareVersion = 5 [default = 0];</code>
     */
    public int getHardwareVersion() {
      return hardwareVersion_;
    }

    public static final int FIRMWAREVERSION_FIELD_NUMBER = 6;
    private int firmwareVersion_;
    /**
     * <code>optional int32 FirmwareVersion = 6 [default = 0];</code>
     */
    public boolean hasFirmwareVersion() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional int32 FirmwareVersion = 6 [default = 0];</code>
     */
    public int getFirmwareVersion() {
      return firmwareVersion_;
    }

    public static final int STATUS_FIELD_NUMBER = 7;
    private int status_;
    /**
     * <pre>
     * 自检结果，出厂APP使用
     * </pre>
     *
     * <code>optional int32 Status = 7 [default = 0];</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * 自检结果，出厂APP使用
     * </pre>
     *
     * <code>optional int32 Status = 7 [default = 0];</code>
     */
    public int getStatus() {
      return status_;
    }

    public static final int VOLTAGE_FIELD_NUMBER = 8;
    private int voltage_;
    /**
     * <pre>
     * 电池电压，手机APP使用
     * </pre>
     *
     * <code>optional int32 Voltage = 8 [default = 0];</code>
     */
    public boolean hasVoltage() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * 电池电压，手机APP使用
     * </pre>
     *
     * <code>optional int32 Voltage = 8 [default = 0];</code>
     */
    public int getVoltage() {
      return voltage_;
    }

    public static final int SIGNALSTRENGTH_FIELD_NUMBER = 9;
    private int signalStrength_;
    /**
     * <pre>
     * 信号强度
     * </pre>
     *
     * <code>optional int32 SignalStrength = 9 [default = 0];</code>
     */
    public boolean hasSignalStrength() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * 信号强度
     * </pre>
     *
     * <code>optional int32 SignalStrength = 9 [default = 0];</code>
     */
    public int getSignalStrength() {
      return signalStrength_;
    }

    public static final int BITERRORRATE_FIELD_NUMBER = 10;
    private int bitErrorRate_;
    /**
     * <pre>
     * 误码率
     * </pre>
     *
     * <code>optional int32 BitErrorRate = 10 [default = 0];</code>
     */
    public boolean hasBitErrorRate() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * 误码率
     * </pre>
     *
     * <code>optional int32 BitErrorRate = 10 [default = 0];</code>
     */
    public int getBitErrorRate() {
      return bitErrorRate_;
    }

    public static final int RADIOACCESSTECHNOLOGY_FIELD_NUMBER = 11;
    private int radioAccessTechnology_;
    /**
     * <pre>
     * 网络类型
     * </pre>
     *
     * <code>optional int32 RadioAccessTechnology = 11 [default = 0];</code>
     */
    public boolean hasRadioAccessTechnology() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     * 网络类型
     * </pre>
     *
     * <code>optional int32 RadioAccessTechnology = 11 [default = 0];</code>
     */
    public int getRadioAccessTechnology() {
      return radioAccessTechnology_;
    }

    public static final int NETWORKOPERATOR_FIELD_NUMBER = 12;
    private int networkOperator_;
    /**
     * <pre>
     * 运营商代码
     * </pre>
     *
     * <code>optional uint32 NetworkOperator = 12 [default = 0];</code>
     */
    public boolean hasNetworkOperator() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <pre>
     * 运营商代码
     * </pre>
     *
     * <code>optional uint32 NetworkOperator = 12 [default = 0];</code>
     */
    public int getNetworkOperator() {
      return networkOperator_;
    }

    public static final int ICCID_FIELD_NUMBER = 13;
    private volatile Object iCCID_;
    /**
     * <code>optional string ICCID = 13 [default = ""];</code>
     */
    public boolean hasICCID() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <code>optional string ICCID = 13 [default = ""];</code>
     */
    public String getICCID() {
      Object ref = iCCID_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          iCCID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ICCID = 13 [default = ""];</code>
     */
    public com.google.protobuf.ByteString
        getICCIDBytes() {
      Object ref = iCCID_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        iCCID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IMEI_FIELD_NUMBER = 14;
    private volatile Object iMEI_;
    /**
     * <code>optional string IMEI = 14 [default = ""];</code>
     */
    public boolean hasIMEI() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <code>optional string IMEI = 14 [default = ""];</code>
     */
    public String getIMEI() {
      Object ref = iMEI_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          iMEI_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string IMEI = 14 [default = ""];</code>
     */
    public com.google.protobuf.ByteString
        getIMEIBytes() {
      Object ref = iMEI_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        iMEI_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MODEMFIRMWAREVERSION_FIELD_NUMBER = 15;
    private volatile Object modemFirmwareVersion_;
    /**
     * <pre>
     * 蜂窝模块固件版本
     * </pre>
     *
     * <code>optional string ModemFirmwareVersion = 15 [default = ""];</code>
     */
    public boolean hasModemFirmwareVersion() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <pre>
     * 蜂窝模块固件版本
     * </pre>
     *
     * <code>optional string ModemFirmwareVersion = 15 [default = ""];</code>
     */
    public String getModemFirmwareVersion() {
      Object ref = modemFirmwareVersion_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          modemFirmwareVersion_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * 蜂窝模块固件版本
     * </pre>
     *
     * <code>optional string ModemFirmwareVersion = 15 [default = ""];</code>
     */
    public com.google.protobuf.ByteString
        getModemFirmwareVersionBytes() {
      Object ref = modemFirmwareVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        modemFirmwareVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GPSSIGNALSTRENGTH_FIELD_NUMBER = 20;
    private int gPSSignalStrength_;
    /**
     * <pre>
     * gps信号强度
     * </pre>
     *
     * <code>optional int32 GPSSignalStrength = 20 [default = 0];</code>
     */
    public boolean hasGPSSignalStrength() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <pre>
     * gps信号强度
     * </pre>
     *
     * <code>optional int32 GPSSignalStrength = 20 [default = 0];</code>
     */
    public int getGPSSignalStrength() {
      return gPSSignalStrength_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasIden()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getIden().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getIden());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, iMSI_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, mac_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(4, deviceType_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeInt32(5, hardwareVersion_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeInt32(6, firmwareVersion_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeInt32(7, status_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeInt32(8, voltage_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeInt32(9, signalStrength_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeInt32(10, bitErrorRate_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeInt32(11, radioAccessTechnology_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeUInt32(12, networkOperator_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 13, iCCID_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, iMEI_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 15, modemFirmwareVersion_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        output.writeInt32(20, gPSSignalStrength_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getIden());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, iMSI_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, mac_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, deviceType_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, hardwareVersion_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, firmwareVersion_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, status_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, voltage_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, signalStrength_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, bitErrorRate_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, radioAccessTechnology_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, networkOperator_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, iCCID_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, iMEI_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, modemFirmwareVersion_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, gPSSignalStrength_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RegisterReq)) {
        return super.equals(obj);
      }
      RegisterReq other = (RegisterReq) obj;

      if (hasIden() != other.hasIden()) return false;
      if (hasIden()) {
        if (!getIden()
            .equals(other.getIden())) return false;
      }
      if (hasIMSI() != other.hasIMSI()) return false;
      if (hasIMSI()) {
        if (!getIMSI()
            .equals(other.getIMSI())) return false;
      }
      if (hasMac() != other.hasMac()) return false;
      if (hasMac()) {
        if (!getMac()
            .equals(other.getMac())) return false;
      }
      if (hasDeviceType() != other.hasDeviceType()) return false;
      if (hasDeviceType()) {
        if (getDeviceType()
            != other.getDeviceType()) return false;
      }
      if (hasHardwareVersion() != other.hasHardwareVersion()) return false;
      if (hasHardwareVersion()) {
        if (getHardwareVersion()
            != other.getHardwareVersion()) return false;
      }
      if (hasFirmwareVersion() != other.hasFirmwareVersion()) return false;
      if (hasFirmwareVersion()) {
        if (getFirmwareVersion()
            != other.getFirmwareVersion()) return false;
      }
      if (hasStatus() != other.hasStatus()) return false;
      if (hasStatus()) {
        if (getStatus()
            != other.getStatus()) return false;
      }
      if (hasVoltage() != other.hasVoltage()) return false;
      if (hasVoltage()) {
        if (getVoltage()
            != other.getVoltage()) return false;
      }
      if (hasSignalStrength() != other.hasSignalStrength()) return false;
      if (hasSignalStrength()) {
        if (getSignalStrength()
            != other.getSignalStrength()) return false;
      }
      if (hasBitErrorRate() != other.hasBitErrorRate()) return false;
      if (hasBitErrorRate()) {
        if (getBitErrorRate()
            != other.getBitErrorRate()) return false;
      }
      if (hasRadioAccessTechnology() != other.hasRadioAccessTechnology()) return false;
      if (hasRadioAccessTechnology()) {
        if (getRadioAccessTechnology()
            != other.getRadioAccessTechnology()) return false;
      }
      if (hasNetworkOperator() != other.hasNetworkOperator()) return false;
      if (hasNetworkOperator()) {
        if (getNetworkOperator()
            != other.getNetworkOperator()) return false;
      }
      if (hasICCID() != other.hasICCID()) return false;
      if (hasICCID()) {
        if (!getICCID()
            .equals(other.getICCID())) return false;
      }
      if (hasIMEI() != other.hasIMEI()) return false;
      if (hasIMEI()) {
        if (!getIMEI()
            .equals(other.getIMEI())) return false;
      }
      if (hasModemFirmwareVersion() != other.hasModemFirmwareVersion()) return false;
      if (hasModemFirmwareVersion()) {
        if (!getModemFirmwareVersion()
            .equals(other.getModemFirmwareVersion())) return false;
      }
      if (hasGPSSignalStrength() != other.hasGPSSignalStrength()) return false;
      if (hasGPSSignalStrength()) {
        if (getGPSSignalStrength()
            != other.getGPSSignalStrength()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasIden()) {
        hash = (37 * hash) + IDEN_FIELD_NUMBER;
        hash = (53 * hash) + getIden().hashCode();
      }
      if (hasIMSI()) {
        hash = (37 * hash) + IMSI_FIELD_NUMBER;
        hash = (53 * hash) + getIMSI().hashCode();
      }
      if (hasMac()) {
        hash = (37 * hash) + MAC_FIELD_NUMBER;
        hash = (53 * hash) + getMac().hashCode();
      }
      if (hasDeviceType()) {
        hash = (37 * hash) + DEVICETYPE_FIELD_NUMBER;
        hash = (53 * hash) + getDeviceType();
      }
      if (hasHardwareVersion()) {
        hash = (37 * hash) + HARDWAREVERSION_FIELD_NUMBER;
        hash = (53 * hash) + getHardwareVersion();
      }
      if (hasFirmwareVersion()) {
        hash = (37 * hash) + FIRMWAREVERSION_FIELD_NUMBER;
        hash = (53 * hash) + getFirmwareVersion();
      }
      if (hasStatus()) {
        hash = (37 * hash) + STATUS_FIELD_NUMBER;
        hash = (53 * hash) + getStatus();
      }
      if (hasVoltage()) {
        hash = (37 * hash) + VOLTAGE_FIELD_NUMBER;
        hash = (53 * hash) + getVoltage();
      }
      if (hasSignalStrength()) {
        hash = (37 * hash) + SIGNALSTRENGTH_FIELD_NUMBER;
        hash = (53 * hash) + getSignalStrength();
      }
      if (hasBitErrorRate()) {
        hash = (37 * hash) + BITERRORRATE_FIELD_NUMBER;
        hash = (53 * hash) + getBitErrorRate();
      }
      if (hasRadioAccessTechnology()) {
        hash = (37 * hash) + RADIOACCESSTECHNOLOGY_FIELD_NUMBER;
        hash = (53 * hash) + getRadioAccessTechnology();
      }
      if (hasNetworkOperator()) {
        hash = (37 * hash) + NETWORKOPERATOR_FIELD_NUMBER;
        hash = (53 * hash) + getNetworkOperator();
      }
      if (hasICCID()) {
        hash = (37 * hash) + ICCID_FIELD_NUMBER;
        hash = (53 * hash) + getICCID().hashCode();
      }
      if (hasIMEI()) {
        hash = (37 * hash) + IMEI_FIELD_NUMBER;
        hash = (53 * hash) + getIMEI().hashCode();
      }
      if (hasModemFirmwareVersion()) {
        hash = (37 * hash) + MODEMFIRMWAREVERSION_FIELD_NUMBER;
        hash = (53 * hash) + getModemFirmwareVersion().hashCode();
      }
      if (hasGPSSignalStrength()) {
        hash = (37 * hash) + GPSSIGNALSTRENGTH_FIELD_NUMBER;
        hash = (53 * hash) + getGPSSignalStrength();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RegisterReq parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RegisterReq parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RegisterReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RegisterReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RegisterReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RegisterReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RegisterReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RegisterReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RegisterReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RegisterReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RegisterReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RegisterReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RegisterReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol.RegisterReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.RegisterReq)
        RegisterReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Register.internal_static_protocol_RegisterReq_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Register.internal_static_protocol_RegisterReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RegisterReq.class, Builder.class);
      }

      // Construct using protocol.Register.RegisterReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getIdenFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (idenBuilder_ == null) {
          iden_ = null;
        } else {
          idenBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        iMSI_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        mac_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        deviceType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        hardwareVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        firmwareVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        voltage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        signalStrength_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        bitErrorRate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        radioAccessTechnology_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        networkOperator_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        iCCID_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        iMEI_ = "";
        bitField0_ = (bitField0_ & ~0x00002000);
        modemFirmwareVersion_ = "";
        bitField0_ = (bitField0_ & ~0x00004000);
        gPSSignalStrength_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Register.internal_static_protocol_RegisterReq_descriptor;
      }

      @Override
      public RegisterReq getDefaultInstanceForType() {
        return RegisterReq.getDefaultInstance();
      }

      @Override
      public RegisterReq build() {
        RegisterReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public RegisterReq buildPartial() {
        RegisterReq result = new RegisterReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          if (idenBuilder_ == null) {
            result.iden_ = iden_;
          } else {
            result.iden_ = idenBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.iMSI_ = iMSI_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.mac_ = mac_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.deviceType_ = deviceType_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.hardwareVersion_ = hardwareVersion_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.firmwareVersion_ = firmwareVersion_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.status_ = status_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.voltage_ = voltage_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.signalStrength_ = signalStrength_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.bitErrorRate_ = bitErrorRate_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.radioAccessTechnology_ = radioAccessTechnology_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.networkOperator_ = networkOperator_;
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          to_bitField0_ |= 0x00001000;
        }
        result.iCCID_ = iCCID_;
        if (((from_bitField0_ & 0x00002000) != 0)) {
          to_bitField0_ |= 0x00002000;
        }
        result.iMEI_ = iMEI_;
        if (((from_bitField0_ & 0x00004000) != 0)) {
          to_bitField0_ |= 0x00004000;
        }
        result.modemFirmwareVersion_ = modemFirmwareVersion_;
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.gPSSignalStrength_ = gPSSignalStrength_;
          to_bitField0_ |= 0x00008000;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RegisterReq) {
          return mergeFrom((RegisterReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RegisterReq other) {
        if (other == RegisterReq.getDefaultInstance()) return this;
        if (other.hasIden()) {
          mergeIden(other.getIden());
        }
        if (other.hasIMSI()) {
          bitField0_ |= 0x00000002;
          iMSI_ = other.iMSI_;
          onChanged();
        }
        if (other.hasMac()) {
          bitField0_ |= 0x00000004;
          mac_ = other.mac_;
          onChanged();
        }
        if (other.hasDeviceType()) {
          setDeviceType(other.getDeviceType());
        }
        if (other.hasHardwareVersion()) {
          setHardwareVersion(other.getHardwareVersion());
        }
        if (other.hasFirmwareVersion()) {
          setFirmwareVersion(other.getFirmwareVersion());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasVoltage()) {
          setVoltage(other.getVoltage());
        }
        if (other.hasSignalStrength()) {
          setSignalStrength(other.getSignalStrength());
        }
        if (other.hasBitErrorRate()) {
          setBitErrorRate(other.getBitErrorRate());
        }
        if (other.hasRadioAccessTechnology()) {
          setRadioAccessTechnology(other.getRadioAccessTechnology());
        }
        if (other.hasNetworkOperator()) {
          setNetworkOperator(other.getNetworkOperator());
        }
        if (other.hasICCID()) {
          bitField0_ |= 0x00001000;
          iCCID_ = other.iCCID_;
          onChanged();
        }
        if (other.hasIMEI()) {
          bitField0_ |= 0x00002000;
          iMEI_ = other.iMEI_;
          onChanged();
        }
        if (other.hasModemFirmwareVersion()) {
          bitField0_ |= 0x00004000;
          modemFirmwareVersion_ = other.modemFirmwareVersion_;
          onChanged();
        }
        if (other.hasGPSSignalStrength()) {
          setGPSSignalStrength(other.getGPSSignalStrength());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        if (!hasIden()) {
          return false;
        }
        if (!getIden().isInitialized()) {
          return false;
        }
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RegisterReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RegisterReq) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private IdentityMsgOuterClass.IdentityMsg iden_;
      private com.google.protobuf.SingleFieldBuilderV3<
          IdentityMsgOuterClass.IdentityMsg, IdentityMsgOuterClass.IdentityMsg.Builder, IdentityMsgOuterClass.IdentityMsgOrBuilder> idenBuilder_;
      /**
       * <code>required .protocol.IdentityMsg Iden = 1;</code>
       */
      public boolean hasIden() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required .protocol.IdentityMsg Iden = 1;</code>
       */
      public IdentityMsgOuterClass.IdentityMsg getIden() {
        if (idenBuilder_ == null) {
          return iden_ == null ? IdentityMsgOuterClass.IdentityMsg.getDefaultInstance() : iden_;
        } else {
          return idenBuilder_.getMessage();
        }
      }
      /**
       * <code>required .protocol.IdentityMsg Iden = 1;</code>
       */
      public Builder setIden(IdentityMsgOuterClass.IdentityMsg value) {
        if (idenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          iden_ = value;
          onChanged();
        } else {
          idenBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .protocol.IdentityMsg Iden = 1;</code>
       */
      public Builder setIden(
          IdentityMsgOuterClass.IdentityMsg.Builder builderForValue) {
        if (idenBuilder_ == null) {
          iden_ = builderForValue.build();
          onChanged();
        } else {
          idenBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .protocol.IdentityMsg Iden = 1;</code>
       */
      public Builder mergeIden(IdentityMsgOuterClass.IdentityMsg value) {
        if (idenBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
              iden_ != null &&
              iden_ != IdentityMsgOuterClass.IdentityMsg.getDefaultInstance()) {
            iden_ =
              IdentityMsgOuterClass.IdentityMsg.newBuilder(iden_).mergeFrom(value).buildPartial();
          } else {
            iden_ = value;
          }
          onChanged();
        } else {
          idenBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .protocol.IdentityMsg Iden = 1;</code>
       */
      public Builder clearIden() {
        if (idenBuilder_ == null) {
          iden_ = null;
          onChanged();
        } else {
          idenBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .protocol.IdentityMsg Iden = 1;</code>
       */
      public IdentityMsgOuterClass.IdentityMsg.Builder getIdenBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getIdenFieldBuilder().getBuilder();
      }
      /**
       * <code>required .protocol.IdentityMsg Iden = 1;</code>
       */
      public IdentityMsgOuterClass.IdentityMsgOrBuilder getIdenOrBuilder() {
        if (idenBuilder_ != null) {
          return idenBuilder_.getMessageOrBuilder();
        } else {
          return iden_ == null ?
              IdentityMsgOuterClass.IdentityMsg.getDefaultInstance() : iden_;
        }
      }
      /**
       * <code>required .protocol.IdentityMsg Iden = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          IdentityMsgOuterClass.IdentityMsg, IdentityMsgOuterClass.IdentityMsg.Builder, IdentityMsgOuterClass.IdentityMsgOrBuilder>
          getIdenFieldBuilder() {
        if (idenBuilder_ == null) {
          idenBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              IdentityMsgOuterClass.IdentityMsg, IdentityMsgOuterClass.IdentityMsg.Builder, IdentityMsgOuterClass.IdentityMsgOrBuilder>(
                  getIden(),
                  getParentForChildren(),
                  isClean());
          iden_ = null;
        }
        return idenBuilder_;
      }

      private Object iMSI_ = "";
      /**
       * <code>optional string IMSI = 2 [default = ""];</code>
       */
      public boolean hasIMSI() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string IMSI = 2 [default = ""];</code>
       */
      public String getIMSI() {
        Object ref = iMSI_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            iMSI_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string IMSI = 2 [default = ""];</code>
       */
      public com.google.protobuf.ByteString
          getIMSIBytes() {
        Object ref = iMSI_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          iMSI_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string IMSI = 2 [default = ""];</code>
       */
      public Builder setIMSI(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        iMSI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string IMSI = 2 [default = ""];</code>
       */
      public Builder clearIMSI() {
        bitField0_ = (bitField0_ & ~0x00000002);
        iMSI_ = getDefaultInstance().getIMSI();
        onChanged();
        return this;
      }
      /**
       * <code>optional string IMSI = 2 [default = ""];</code>
       */
      public Builder setIMSIBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        iMSI_ = value;
        onChanged();
        return this;
      }

      private Object mac_ = "";
      /**
       * <code>optional string Mac = 3 [default = ""];</code>
       */
      public boolean hasMac() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional string Mac = 3 [default = ""];</code>
       */
      public String getMac() {
        Object ref = mac_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            mac_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string Mac = 3 [default = ""];</code>
       */
      public com.google.protobuf.ByteString
          getMacBytes() {
        Object ref = mac_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          mac_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string Mac = 3 [default = ""];</code>
       */
      public Builder setMac(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        mac_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string Mac = 3 [default = ""];</code>
       */
      public Builder clearMac() {
        bitField0_ = (bitField0_ & ~0x00000004);
        mac_ = getDefaultInstance().getMac();
        onChanged();
        return this;
      }
      /**
       * <code>optional string Mac = 3 [default = ""];</code>
       */
      public Builder setMacBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        mac_ = value;
        onChanged();
        return this;
      }

      private int deviceType_ ;
      /**
       * <code>optional int32 DeviceType = 4 [default = 0];</code>
       */
      public boolean hasDeviceType() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional int32 DeviceType = 4 [default = 0];</code>
       */
      public int getDeviceType() {
        return deviceType_;
      }
      /**
       * <code>optional int32 DeviceType = 4 [default = 0];</code>
       */
      public Builder setDeviceType(int value) {
        bitField0_ |= 0x00000008;
        deviceType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 DeviceType = 4 [default = 0];</code>
       */
      public Builder clearDeviceType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        deviceType_ = 0;
        onChanged();
        return this;
      }

      private int hardwareVersion_ ;
      /**
       * <code>optional int32 HardwareVersion = 5 [default = 0];</code>
       */
      public boolean hasHardwareVersion() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional int32 HardwareVersion = 5 [default = 0];</code>
       */
      public int getHardwareVersion() {
        return hardwareVersion_;
      }
      /**
       * <code>optional int32 HardwareVersion = 5 [default = 0];</code>
       */
      public Builder setHardwareVersion(int value) {
        bitField0_ |= 0x00000010;
        hardwareVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 HardwareVersion = 5 [default = 0];</code>
       */
      public Builder clearHardwareVersion() {
        bitField0_ = (bitField0_ & ~0x00000010);
        hardwareVersion_ = 0;
        onChanged();
        return this;
      }

      private int firmwareVersion_ ;
      /**
       * <code>optional int32 FirmwareVersion = 6 [default = 0];</code>
       */
      public boolean hasFirmwareVersion() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional int32 FirmwareVersion = 6 [default = 0];</code>
       */
      public int getFirmwareVersion() {
        return firmwareVersion_;
      }
      /**
       * <code>optional int32 FirmwareVersion = 6 [default = 0];</code>
       */
      public Builder setFirmwareVersion(int value) {
        bitField0_ |= 0x00000020;
        firmwareVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 FirmwareVersion = 6 [default = 0];</code>
       */
      public Builder clearFirmwareVersion() {
        bitField0_ = (bitField0_ & ~0x00000020);
        firmwareVersion_ = 0;
        onChanged();
        return this;
      }

      private int status_ ;
      /**
       * <pre>
       * 自检结果，出厂APP使用
       * </pre>
       *
       * <code>optional int32 Status = 7 [default = 0];</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * 自检结果，出厂APP使用
       * </pre>
       *
       * <code>optional int32 Status = 7 [default = 0];</code>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <pre>
       * 自检结果，出厂APP使用
       * </pre>
       *
       * <code>optional int32 Status = 7 [default = 0];</code>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000040;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 自检结果，出厂APP使用
       * </pre>
       *
       * <code>optional int32 Status = 7 [default = 0];</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000040);
        status_ = 0;
        onChanged();
        return this;
      }

      private int voltage_ ;
      /**
       * <pre>
       * 电池电压，手机APP使用
       * </pre>
       *
       * <code>optional int32 Voltage = 8 [default = 0];</code>
       */
      public boolean hasVoltage() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * 电池电压，手机APP使用
       * </pre>
       *
       * <code>optional int32 Voltage = 8 [default = 0];</code>
       */
      public int getVoltage() {
        return voltage_;
      }
      /**
       * <pre>
       * 电池电压，手机APP使用
       * </pre>
       *
       * <code>optional int32 Voltage = 8 [default = 0];</code>
       */
      public Builder setVoltage(int value) {
        bitField0_ |= 0x00000080;
        voltage_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 电池电压，手机APP使用
       * </pre>
       *
       * <code>optional int32 Voltage = 8 [default = 0];</code>
       */
      public Builder clearVoltage() {
        bitField0_ = (bitField0_ & ~0x00000080);
        voltage_ = 0;
        onChanged();
        return this;
      }

      private int signalStrength_ ;
      /**
       * <pre>
       * 信号强度
       * </pre>
       *
       * <code>optional int32 SignalStrength = 9 [default = 0];</code>
       */
      public boolean hasSignalStrength() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * 信号强度
       * </pre>
       *
       * <code>optional int32 SignalStrength = 9 [default = 0];</code>
       */
      public int getSignalStrength() {
        return signalStrength_;
      }
      /**
       * <pre>
       * 信号强度
       * </pre>
       *
       * <code>optional int32 SignalStrength = 9 [default = 0];</code>
       */
      public Builder setSignalStrength(int value) {
        bitField0_ |= 0x00000100;
        signalStrength_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 信号强度
       * </pre>
       *
       * <code>optional int32 SignalStrength = 9 [default = 0];</code>
       */
      public Builder clearSignalStrength() {
        bitField0_ = (bitField0_ & ~0x00000100);
        signalStrength_ = 0;
        onChanged();
        return this;
      }

      private int bitErrorRate_ ;
      /**
       * <pre>
       * 误码率
       * </pre>
       *
       * <code>optional int32 BitErrorRate = 10 [default = 0];</code>
       */
      public boolean hasBitErrorRate() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       * 误码率
       * </pre>
       *
       * <code>optional int32 BitErrorRate = 10 [default = 0];</code>
       */
      public int getBitErrorRate() {
        return bitErrorRate_;
      }
      /**
       * <pre>
       * 误码率
       * </pre>
       *
       * <code>optional int32 BitErrorRate = 10 [default = 0];</code>
       */
      public Builder setBitErrorRate(int value) {
        bitField0_ |= 0x00000200;
        bitErrorRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 误码率
       * </pre>
       *
       * <code>optional int32 BitErrorRate = 10 [default = 0];</code>
       */
      public Builder clearBitErrorRate() {
        bitField0_ = (bitField0_ & ~0x00000200);
        bitErrorRate_ = 0;
        onChanged();
        return this;
      }

      private int radioAccessTechnology_ ;
      /**
       * <pre>
       * 网络类型
       * </pre>
       *
       * <code>optional int32 RadioAccessTechnology = 11 [default = 0];</code>
       */
      public boolean hasRadioAccessTechnology() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       * 网络类型
       * </pre>
       *
       * <code>optional int32 RadioAccessTechnology = 11 [default = 0];</code>
       */
      public int getRadioAccessTechnology() {
        return radioAccessTechnology_;
      }
      /**
       * <pre>
       * 网络类型
       * </pre>
       *
       * <code>optional int32 RadioAccessTechnology = 11 [default = 0];</code>
       */
      public Builder setRadioAccessTechnology(int value) {
        bitField0_ |= 0x00000400;
        radioAccessTechnology_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 网络类型
       * </pre>
       *
       * <code>optional int32 RadioAccessTechnology = 11 [default = 0];</code>
       */
      public Builder clearRadioAccessTechnology() {
        bitField0_ = (bitField0_ & ~0x00000400);
        radioAccessTechnology_ = 0;
        onChanged();
        return this;
      }

      private int networkOperator_ ;
      /**
       * <pre>
       * 运营商代码
       * </pre>
       *
       * <code>optional uint32 NetworkOperator = 12 [default = 0];</code>
       */
      public boolean hasNetworkOperator() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <pre>
       * 运营商代码
       * </pre>
       *
       * <code>optional uint32 NetworkOperator = 12 [default = 0];</code>
       */
      public int getNetworkOperator() {
        return networkOperator_;
      }
      /**
       * <pre>
       * 运营商代码
       * </pre>
       *
       * <code>optional uint32 NetworkOperator = 12 [default = 0];</code>
       */
      public Builder setNetworkOperator(int value) {
        bitField0_ |= 0x00000800;
        networkOperator_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 运营商代码
       * </pre>
       *
       * <code>optional uint32 NetworkOperator = 12 [default = 0];</code>
       */
      public Builder clearNetworkOperator() {
        bitField0_ = (bitField0_ & ~0x00000800);
        networkOperator_ = 0;
        onChanged();
        return this;
      }

      private Object iCCID_ = "";
      /**
       * <code>optional string ICCID = 13 [default = ""];</code>
       */
      public boolean hasICCID() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <code>optional string ICCID = 13 [default = ""];</code>
       */
      public String getICCID() {
        Object ref = iCCID_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            iCCID_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string ICCID = 13 [default = ""];</code>
       */
      public com.google.protobuf.ByteString
          getICCIDBytes() {
        Object ref = iCCID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          iCCID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ICCID = 13 [default = ""];</code>
       */
      public Builder setICCID(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        iCCID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ICCID = 13 [default = ""];</code>
       */
      public Builder clearICCID() {
        bitField0_ = (bitField0_ & ~0x00001000);
        iCCID_ = getDefaultInstance().getICCID();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ICCID = 13 [default = ""];</code>
       */
      public Builder setICCIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        iCCID_ = value;
        onChanged();
        return this;
      }

      private Object iMEI_ = "";
      /**
       * <code>optional string IMEI = 14 [default = ""];</code>
       */
      public boolean hasIMEI() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <code>optional string IMEI = 14 [default = ""];</code>
       */
      public String getIMEI() {
        Object ref = iMEI_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            iMEI_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string IMEI = 14 [default = ""];</code>
       */
      public com.google.protobuf.ByteString
          getIMEIBytes() {
        Object ref = iMEI_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          iMEI_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string IMEI = 14 [default = ""];</code>
       */
      public Builder setIMEI(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        iMEI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string IMEI = 14 [default = ""];</code>
       */
      public Builder clearIMEI() {
        bitField0_ = (bitField0_ & ~0x00002000);
        iMEI_ = getDefaultInstance().getIMEI();
        onChanged();
        return this;
      }
      /**
       * <code>optional string IMEI = 14 [default = ""];</code>
       */
      public Builder setIMEIBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        iMEI_ = value;
        onChanged();
        return this;
      }

      private Object modemFirmwareVersion_ = "";
      /**
       * <pre>
       * 蜂窝模块固件版本
       * </pre>
       *
       * <code>optional string ModemFirmwareVersion = 15 [default = ""];</code>
       */
      public boolean hasModemFirmwareVersion() {
        return ((bitField0_ & 0x00004000) != 0);
      }
      /**
       * <pre>
       * 蜂窝模块固件版本
       * </pre>
       *
       * <code>optional string ModemFirmwareVersion = 15 [default = ""];</code>
       */
      public String getModemFirmwareVersion() {
        Object ref = modemFirmwareVersion_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            modemFirmwareVersion_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 蜂窝模块固件版本
       * </pre>
       *
       * <code>optional string ModemFirmwareVersion = 15 [default = ""];</code>
       */
      public com.google.protobuf.ByteString
          getModemFirmwareVersionBytes() {
        Object ref = modemFirmwareVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          modemFirmwareVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 蜂窝模块固件版本
       * </pre>
       *
       * <code>optional string ModemFirmwareVersion = 15 [default = ""];</code>
       */
      public Builder setModemFirmwareVersion(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        modemFirmwareVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 蜂窝模块固件版本
       * </pre>
       *
       * <code>optional string ModemFirmwareVersion = 15 [default = ""];</code>
       */
      public Builder clearModemFirmwareVersion() {
        bitField0_ = (bitField0_ & ~0x00004000);
        modemFirmwareVersion_ = getDefaultInstance().getModemFirmwareVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 蜂窝模块固件版本
       * </pre>
       *
       * <code>optional string ModemFirmwareVersion = 15 [default = ""];</code>
       */
      public Builder setModemFirmwareVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        modemFirmwareVersion_ = value;
        onChanged();
        return this;
      }

      private int gPSSignalStrength_ ;
      /**
       * <pre>
       * gps信号强度
       * </pre>
       *
       * <code>optional int32 GPSSignalStrength = 20 [default = 0];</code>
       */
      public boolean hasGPSSignalStrength() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <pre>
       * gps信号强度
       * </pre>
       *
       * <code>optional int32 GPSSignalStrength = 20 [default = 0];</code>
       */
      public int getGPSSignalStrength() {
        return gPSSignalStrength_;
      }
      /**
       * <pre>
       * gps信号强度
       * </pre>
       *
       * <code>optional int32 GPSSignalStrength = 20 [default = 0];</code>
       */
      public Builder setGPSSignalStrength(int value) {
        bitField0_ |= 0x00008000;
        gPSSignalStrength_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * gps信号强度
       * </pre>
       *
       * <code>optional int32 GPSSignalStrength = 20 [default = 0];</code>
       */
      public Builder clearGPSSignalStrength() {
        bitField0_ = (bitField0_ & ~0x00008000);
        gPSSignalStrength_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protocol.RegisterReq)
    }

    // @@protoc_insertion_point(class_scope:protocol.RegisterReq)
    private static final RegisterReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RegisterReq();
    }

    public static RegisterReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<RegisterReq>
        PARSER = new com.google.protobuf.AbstractParser<RegisterReq>() {
      @Override
      public RegisterReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RegisterReq(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RegisterReq> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RegisterReq> getParserForType() {
      return PARSER;
    }

    @Override
    public RegisterReq getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RegisterRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.RegisterRsp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 Code = 1;</code>
     */
    boolean hasCode();
    /**
     * <code>required uint32 Code = 1;</code>
     */
    int getCode();

    /**
     * <code>optional int32 SN = 2 [default = 0];</code>
     */
    boolean hasSN();
    /**
     * <code>optional int32 SN = 2 [default = 0];</code>
     */
    int getSN();

    /**
     * <code>optional int32 SimType = 3 [default = 0];</code>
     */
    boolean hasSimType();
    /**
     * <code>optional int32 SimType = 3 [default = 0];</code>
     */
    int getSimType();

    /**
     * <code>optional uint32 Timestamp = 4 [default = 0];</code>
     */
    boolean hasTimestamp();
    /**
     * <code>optional uint32 Timestamp = 4 [default = 0];</code>
     */
    int getTimestamp();
  }
  /**
   * Protobuf type {@code protocol.RegisterRsp}
   */
  public  static final class RegisterRsp extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protocol.RegisterRsp)
      RegisterRspOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RegisterRsp.newBuilder() to construct.
    private RegisterRsp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RegisterRsp() {
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RegisterRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              code_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              sN_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              simType_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              timestamp_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Register.internal_static_protocol_RegisterRsp_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Register.internal_static_protocol_RegisterRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RegisterRsp.class, Builder.class);
    }

    private int bitField0_;
    public static final int CODE_FIELD_NUMBER = 1;
    private int code_;
    /**
     * <code>required uint32 Code = 1;</code>
     */
    public boolean hasCode() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required uint32 Code = 1;</code>
     */
    public int getCode() {
      return code_;
    }

    public static final int SN_FIELD_NUMBER = 2;
    private int sN_;
    /**
     * <code>optional int32 SN = 2 [default = 0];</code>
     */
    public boolean hasSN() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional int32 SN = 2 [default = 0];</code>
     */
    public int getSN() {
      return sN_;
    }

    public static final int SIMTYPE_FIELD_NUMBER = 3;
    private int simType_;
    /**
     * <code>optional int32 SimType = 3 [default = 0];</code>
     */
    public boolean hasSimType() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional int32 SimType = 3 [default = 0];</code>
     */
    public int getSimType() {
      return simType_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 4;
    private int timestamp_;
    /**
     * <code>optional uint32 Timestamp = 4 [default = 0];</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional uint32 Timestamp = 4 [default = 0];</code>
     */
    public int getTimestamp() {
      return timestamp_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, code_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, sN_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(3, simType_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(4, timestamp_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, code_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, sN_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, simType_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, timestamp_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RegisterRsp)) {
        return super.equals(obj);
      }
      RegisterRsp other = (RegisterRsp) obj;

      if (hasCode() != other.hasCode()) return false;
      if (hasCode()) {
        if (getCode()
            != other.getCode()) return false;
      }
      if (hasSN() != other.hasSN()) return false;
      if (hasSN()) {
        if (getSN()
            != other.getSN()) return false;
      }
      if (hasSimType() != other.hasSimType()) return false;
      if (hasSimType()) {
        if (getSimType()
            != other.getSimType()) return false;
      }
      if (hasTimestamp() != other.hasTimestamp()) return false;
      if (hasTimestamp()) {
        if (getTimestamp()
            != other.getTimestamp()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasCode()) {
        hash = (37 * hash) + CODE_FIELD_NUMBER;
        hash = (53 * hash) + getCode();
      }
      if (hasSN()) {
        hash = (37 * hash) + SN_FIELD_NUMBER;
        hash = (53 * hash) + getSN();
      }
      if (hasSimType()) {
        hash = (37 * hash) + SIMTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getSimType();
      }
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getTimestamp();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RegisterRsp parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RegisterRsp parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RegisterRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RegisterRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RegisterRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RegisterRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RegisterRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RegisterRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RegisterRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RegisterRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RegisterRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RegisterRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RegisterRsp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol.RegisterRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.RegisterRsp)
        RegisterRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Register.internal_static_protocol_RegisterRsp_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Register.internal_static_protocol_RegisterRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RegisterRsp.class, Builder.class);
      }

      // Construct using protocol.Register.RegisterRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        code_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        sN_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        simType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        timestamp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Register.internal_static_protocol_RegisterRsp_descriptor;
      }

      @Override
      public RegisterRsp getDefaultInstanceForType() {
        return RegisterRsp.getDefaultInstance();
      }

      @Override
      public RegisterRsp build() {
        RegisterRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public RegisterRsp buildPartial() {
        RegisterRsp result = new RegisterRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.code_ = code_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.sN_ = sN_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.simType_ = simType_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.timestamp_ = timestamp_;
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RegisterRsp) {
          return mergeFrom((RegisterRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RegisterRsp other) {
        if (other == RegisterRsp.getDefaultInstance()) return this;
        if (other.hasCode()) {
          setCode(other.getCode());
        }
        if (other.hasSN()) {
          setSN(other.getSN());
        }
        if (other.hasSimType()) {
          setSimType(other.getSimType());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        if (!hasCode()) {
          return false;
        }
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RegisterRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RegisterRsp) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int code_ ;
      /**
       * <code>required uint32 Code = 1;</code>
       */
      public boolean hasCode() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required uint32 Code = 1;</code>
       */
      public int getCode() {
        return code_;
      }
      /**
       * <code>required uint32 Code = 1;</code>
       */
      public Builder setCode(int value) {
        bitField0_ |= 0x00000001;
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 Code = 1;</code>
       */
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        code_ = 0;
        onChanged();
        return this;
      }

      private int sN_ ;
      /**
       * <code>optional int32 SN = 2 [default = 0];</code>
       */
      public boolean hasSN() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int32 SN = 2 [default = 0];</code>
       */
      public int getSN() {
        return sN_;
      }
      /**
       * <code>optional int32 SN = 2 [default = 0];</code>
       */
      public Builder setSN(int value) {
        bitField0_ |= 0x00000002;
        sN_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 SN = 2 [default = 0];</code>
       */
      public Builder clearSN() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sN_ = 0;
        onChanged();
        return this;
      }

      private int simType_ ;
      /**
       * <code>optional int32 SimType = 3 [default = 0];</code>
       */
      public boolean hasSimType() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional int32 SimType = 3 [default = 0];</code>
       */
      public int getSimType() {
        return simType_;
      }
      /**
       * <code>optional int32 SimType = 3 [default = 0];</code>
       */
      public Builder setSimType(int value) {
        bitField0_ |= 0x00000004;
        simType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 SimType = 3 [default = 0];</code>
       */
      public Builder clearSimType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        simType_ = 0;
        onChanged();
        return this;
      }

      private int timestamp_ ;
      /**
       * <code>optional uint32 Timestamp = 4 [default = 0];</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 Timestamp = 4 [default = 0];</code>
       */
      public int getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional uint32 Timestamp = 4 [default = 0];</code>
       */
      public Builder setTimestamp(int value) {
        bitField0_ |= 0x00000008;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 Timestamp = 4 [default = 0];</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        timestamp_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protocol.RegisterRsp)
    }

    // @@protoc_insertion_point(class_scope:protocol.RegisterRsp)
    private static final RegisterRsp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RegisterRsp();
    }

    public static RegisterRsp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<RegisterRsp>
        PARSER = new com.google.protobuf.AbstractParser<RegisterRsp>() {
      @Override
      public RegisterRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RegisterRsp(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RegisterRsp> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RegisterRsp> getParserForType() {
      return PARSER;
    }

    @Override
    public RegisterRsp getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_RegisterReq_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protocol_RegisterReq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_RegisterRsp_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protocol_RegisterRsp_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\016Register.proto\022\010protocol\032\033IdentityMsgO" +
      "uterClass.proto\"\230\003\n\013RegisterReq\022#\n\004Iden\030" +
      "\001 \002(\0132\025.protocol.IdentityMsg\022\016\n\004IMSI\030\002 \001" +
      "(\t:\000\022\r\n\003Mac\030\003 \001(\t:\000\022\025\n\nDeviceType\030\004 \001(\005:" +
      "\0010\022\032\n\017HardwareVersion\030\005 \001(\005:\0010\022\032\n\017Firmwa" +
      "reVersion\030\006 \001(\005:\0010\022\021\n\006Status\030\007 \001(\005:\0010\022\022\n" +
      "\007Voltage\030\010 \001(\005:\0010\022\031\n\016SignalStrength\030\t \001(" +
      "\005:\0010\022\027\n\014BitErrorRate\030\n \001(\005:\0010\022 \n\025RadioAc" +
      "cessTechnology\030\013 \001(\005:\0010\022\032\n\017NetworkOperat" +
      "or\030\014 \001(\r:\0010\022\017\n\005ICCID\030\r \001(\t:\000\022\016\n\004IMEI\030\016 \001" +
      "(\t:\000\022\036\n\024ModemFirmwareVersion\030\017 \001(\t:\000\022\034\n\021" +
      "GPSSignalStrength\030\024 \001(\005:\0010\"T\n\013RegisterRs" +
      "p\022\014\n\004Code\030\001 \002(\r\022\r\n\002SN\030\002 \001(\005:\0010\022\022\n\007SimTyp" +
      "e\030\003 \001(\005:\0010\022\024\n\tTimestamp\030\004 \001(\r:\0010"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          IdentityMsgOuterClass.getDescriptor(),
        }, assigner);
    internal_static_protocol_RegisterReq_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_protocol_RegisterReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protocol_RegisterReq_descriptor,
        new String[] { "Iden", "IMSI", "Mac", "DeviceType", "HardwareVersion", "FirmwareVersion", "Status", "Voltage", "SignalStrength", "BitErrorRate", "RadioAccessTechnology", "NetworkOperator", "ICCID", "IMEI", "ModemFirmwareVersion", "GPSSignalStrength", });
    internal_static_protocol_RegisterRsp_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_protocol_RegisterRsp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protocol_RegisterRsp_descriptor,
        new String[] { "Code", "SN", "SimType", "Timestamp", });
    IdentityMsgOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
